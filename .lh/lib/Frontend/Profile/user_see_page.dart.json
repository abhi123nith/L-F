{
    "sourceFile": "lib/Frontend/Profile/user_see_page.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 14,
            "patches": [
                {
                    "date": 1756119099924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1756122910311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,287 +1,287 @@\n-// import 'package:cloud_firestore/cloud_firestore.dart';\n-// import 'package:flutter/material.dart';\n+import 'package:cloud_firestore/cloud_firestore.dart';\n+import 'package:flutter/material.dart';\n \n-// class ProfilePage2 extends StatefulWidget {\n-//   final String uid;\n-//   const ProfilePage2({super.key, required this.uid});\n+class ProfilePage2 extends StatefulWidget {\n+  final String uid;\n+  const ProfilePage2({super.key, required this.uid});\n \n-//   @override\n-//   _ProfilePage2State createState() => _ProfilePage2State();\n-// }\n+  @override\n+  _ProfilePage2State createState() => _ProfilePage2State();\n+}\n \n-// class _ProfilePage2State extends State<ProfilePage2> {\n-//   String? _nameController;\n-//   String? _emailController;\n-//   String? _phoneController;\n-//   String? _rollController;\n-//   String? _branchController;\n-//   String? _degreeController;\n-//   String? _gendercontroller;\n+class _ProfilePage2State extends State<ProfilePage2> {\n+  String? _nameController;\n+  String? _emailController;\n+  String? _phoneController;\n+  String? _rollController;\n+  String? _branchController;\n+  String? _degreeController;\n+  String? _gendercontroller;\n \n-//   String? year;\n-//   String? hostel;\n-//   String? degree;\n-//   String? rollNumber;\n-//   String? gender;\n-//   String? department;\n-//   String? profileImageUrl;\n+  String? year;\n+  String? hostel;\n+  String? degree;\n+  String? rollNumber;\n+  String? gender;\n+  String? department;\n+  String? profileImageUrl;\n \n-//   bool _showPhoneNumber = false;\n-//   late Future<Map<String, dynamic>?> _userDetails;\n+  bool _showPhoneNumber = false;\n+  late Future<Map<String, dynamic>?> _userDetails;\n \n-//   @override\n-//   void initState() {\n-//     super.initState();\n-//     _userDetails = getUserDetails(widget.uid).then((data) {\n-//       if (data != null) {\n-//         _nameController = data['name'] ?? '';\n-//         _emailController = data['email'] ?? '';\n-//         _phoneController = data['phonenumber'] ?? '';\n-//         _rollController = data['rollNumber'] ?? '12345678';\n-//         _branchController = data['department'] + ' Department' ?? 'NITH';\n-//         profileImageUrl = data['profileImage'];\n-//         year = data['year'] ?? 'NITH';\n-//         hostel = data['hostel'] ?? 'NITH';\n-//         gender = data['gender'];\n-//         department = data['department'];\n-//         degree = data['degree'];\n-//         _degreeController = data['degree'];\n-//         _gendercontroller = data['gender'];\n-//       }\n-//       return data;\n-//     });\n-//   }\n+  @override\n+  void initState() {\n+    super.initState();\n+    _userDetails = getUserDetails(widget.uid).then((data) {\n+      if (data != null) {\n+        _nameController = data['name'] ?? '';\n+        _emailController = data['email'] ?? '';\n+        _phoneController = data['phonenumber'] ?? '';\n+        _rollController = data['rollNumber'] ?? '12345678';\n+        _branchController = data['department'] + ' Department' ?? 'NITH';\n+        profileImageUrl = data['profileImage'];\n+        year = data['year'] ?? 'NITH';\n+        hostel = data['hostel'] ?? 'NITH';\n+        gender = data['gender'];\n+        department = data['department'];\n+        degree = data['degree'];\n+        _degreeController = data['degree'];\n+        _gendercontroller = data['gender'];\n+      }\n+      return data;\n+    });\n+  }\n \n-//   Future<Map<String, dynamic>?> getUserDetails(String uid) async {\n-//     DocumentSnapshot userDoc =\n-//         await FirebaseFirestore.instance.collection('users').doc(uid).get();\n+  Future<Map<String, dynamic>?> getUserDetails(String uid) async {\n+    DocumentSnapshot userDoc =\n+        await FirebaseFirestore.instance.collection('users').doc(uid).get();\n \n-//     if (userDoc.exists) {\n-//       return userDoc.data() as Map<String, dynamic>?;\n-//     }\n-//     return null;\n-//   }\n+    if (userDoc.exists) {\n+      return userDoc.data() as Map<String, dynamic>?;\n+    }\n+    return null;\n+  }\n \n-//   Future<bool> _canShowPhoneNumber() async {\n-//     // Replace 'claimCollection' with the actual name of your collection\n-//     QuerySnapshot claims = await FirebaseFirestore.instance\n-//         .collection('posts')\n-//         .where('postClaimer', isEqualTo: widget.uid)\n-//         .where('isClaimed', isEqualTo: true)\n-//         .get();\n+  Future<bool> _canShowPhoneNumber() async {\n+    // Replace 'claimCollection' with the actual name of your collection\n+    QuerySnapshot claims = await FirebaseFirestore.instance\n+        .collection('posts')\n+        .where('postClaimer', isEqualTo: widget.uid)\n+        .where('isClaimed', isEqualTo: true)\n+        .get();\n \n-//     return claims.docs.isNotEmpty;\n-//   }\n+    return claims.docs.isNotEmpty;\n+  }\n \n-//   void _togglePhoneNumber() async {\n-//     if (await _canShowPhoneNumber()) {\n-//       setState(() {\n-//         _showPhoneNumber = !_showPhoneNumber;\n-//       });\n-//     } else {\n-//       ScaffoldMessenger.of(context).showSnackBar(\n-//           const SnackBar(content: Text('You cannot view this phone number.')));\n-//     }\n-//   }\n+  void _togglePhoneNumber() async {\n+    if (await _canShowPhoneNumber()) {\n+      setState(() {\n+        _showPhoneNumber = !_showPhoneNumber;\n+      });\n+    } else {\n+      ScaffoldMessenger.of(context).showSnackBar(\n+          const SnackBar(content: Text('You cannot view this phone number.')));\n+    }\n+  }\n \n-//   @override\n-//   Widget build(BuildContext context) {\n-//     bool isMobile = MediaQuery.of(context).size.width < 830;\n-//     Size size = MediaQuery.of(context).size;\n-//     return Scaffold(\n-//       appBar: AppBar(\n-//         title: const Text('Profile'),\n-//         backgroundColor: Colors.deepOrange,\n-//         foregroundColor: Colors.white,\n-//         elevation: 4.0,\n-//       ),\n-//       body: FutureBuilder<Map<String, dynamic>?>(\n-//         future: _userDetails,\n-//         builder: (context, snapshot) {\n-//           if (snapshot.connectionState == ConnectionState.waiting) {\n-//             return const Center(child: CircularProgressIndicator());\n-//           } else if (snapshot.hasError) {\n-//             return Center(child: Text('Error: ${snapshot.error}'));\n-//           } else if (!snapshot.hasData || snapshot.data == null) {\n-//             return const Center(child: Text('User not found'));\n-//           }\n+  @override\n+  Widget build(BuildContext context) {\n+    bool isMobile = MediaQuery.of(context).size.width < 830;\n+    Size size = MediaQuery.of(context).size;\n+    return Scaffold(\n+      appBar: AppBar(\n+        title: const Text('Profile'),\n+        backgroundColor: Colors.deepOrange,\n+        foregroundColor: Colors.white,\n+        elevation: 4.0,\n+      ),\n+      body: FutureBuilder<Map<String, dynamic>?>(\n+        future: _userDetails,\n+        builder: (context, snapshot) {\n+          if (snapshot.connectionState == ConnectionState.waiting) {\n+            return const Center(child: CircularProgressIndicator());\n+          } else if (snapshot.hasError) {\n+            return Center(child: Text('Error: ${snapshot.error}'));\n+          } else if (!snapshot.hasData || snapshot.data == null) {\n+            return const Center(child: Text('User not found'));\n+          }\n \n-//           // When data is fetched successfully\n-//           return SingleChildScrollView(\n-//             padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 20),\n-//             child: Center(\n-//               child: SizedBox(\n-//                 width: isMobile ? size.width : 500,\n-//                 child: Column(\n-//                   crossAxisAlignment: CrossAxisAlignment.center,\n-//                   children: [\n-//                     _buildCard(\n-//                       child: Column(\n-//                         children: [\n-//                           Stack(\n-//                             children: [\n-//                               GestureDetector(\n-//                                 onTap: () {\n-//                                   if (profileImageUrl != null) {\n-//                                     showDialog(\n-//                                       context: context,\n-//                                       builder: (BuildContext context) {\n-//                                         return Dialog(\n-//                                           child: Stack(\n-//                                             children: [\n-//                                               Image.network(profileImageUrl!),\n-//                                               Positioned(\n-//                                                 right: 10,\n-//                                                 top: 10,\n-//                                                 child: IconButton(\n-//                                                   icon: const Icon(Icons.cancel,\n-//                                                       color: Colors.red),\n-//                                                   onPressed: () {\n-//                                                     Navigator.of(context).pop();\n-//                                                   },\n-//                                                 ),\n-//                                               ),\n-//                                             ],\n-//                                           ),\n-//                                         );\n-//                                       },\n-//                                     );\n-//                                   }\n-//                                 },\n-//                                 child: CircleAvatar(\n-//                                   radius: 80.0,\n-//                                   backgroundColor: Colors.grey[200],\n-//                                   backgroundImage: profileImageUrl != null\n-//                                       ? NetworkImage(profileImageUrl!)\n-//                                       : null,\n-//                                 ),\n-//                               ),\n-//                             ],\n-//                           ),\n-//                           const SizedBox(height: 20.0),\n-//                           _buildNonEditableEmailField(\n-//                               \"Name\", _nameController!, false),\n-//                           _buildNonEditableEmailField(\n-//                               \"Email\", _emailController!, false),\n-//                           _buildNonEditableEmailField(\"Phone Number\",\n-//                               _phoneController!, !_showPhoneNumber),\n-//                           ElevatedButton(\n-//                             onPressed: _togglePhoneNumber,\n-//                             child: Text(_showPhoneNumber\n-//                                 ? 'Hide Number'\n-//                                 : 'Show Number'),\n-//                           ),\n-//                           _buildNonEditableEmailField(\n-//                               \"Department\", _branchController!, false),\n-//                           Row(\n-//                             mainAxisAlignment: MainAxisAlignment.center,\n-//                             children: [\n-//                               Card(\n-//                                 elevation: 3,\n-//                                 child: Center(\n-//                                   child: Padding(\n-//                                     padding: const EdgeInsets.all(8.0),\n-//                                     child: SizedBox(\n-//                                       child: Text(\n-//                                         hostel!,\n-//                                         style: const TextStyle(\n-//                                             fontSize: 16,\n-//                                             color: Colors.black54,\n-//                                             fontWeight: FontWeight.bold),\n-//                                       ),\n-//                                     ),\n-//                                   ),\n-//                                 ),\n-//                               ),\n-//                               Card(\n-//                                 elevation: 3,\n-//                                 child: Center(\n-//                                   child: Padding(\n-//                                     padding: const EdgeInsets.all(8.0),\n-//                                     child: SizedBox(\n-//                                       child: Text(\n-//                                         year!,\n-//                                         style: const TextStyle(\n-//                                             fontSize: 16,\n-//                                             color: Colors.black54,\n-//                                             fontWeight: FontWeight.bold),\n-//                                       ),\n-//                                     ),\n-//                                   ),\n-//                                 ),\n-//                               ),\n-//                               Card(\n-//                                 elevation: 3,\n-//                                 child: Center(\n-//                                   child: Padding(\n-//                                     padding: const EdgeInsets.all(8.0),\n-//                                     child: SizedBox(\n-//                                       child: Text(\n-//                                         degree!,\n-//                                         style: const TextStyle(\n-//                                             fontSize: 16,\n-//                                             color: Colors.black54,\n-//                                             fontWeight: FontWeight.bold),\n-//                                       ),\n-//                                     ),\n-//                                   ),\n-//                                 ),\n-//                               ),\n-//                             ],\n-//                           ),\n-//                         ],\n-//                       ),\n-//                     ),\n-//                     const SizedBox(height: 20.0),\n-//                   ],\n-//                 ),\n-//               ),\n-//             ),\n-//           );\n-//         },\n-//       ),\n-//     );\n-//   }\n+          // When data is fetched successfully\n+          return SingleChildScrollView(\n+            padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 20),\n+            child: Center(\n+              child: SizedBox(\n+                width: isMobile ? size.width : 500,\n+                child: Column(\n+                  crossAxisAlignment: CrossAxisAlignment.center,\n+                  children: [\n+                    _buildCard(\n+                      child: Column(\n+                        children: [\n+                          Stack(\n+                            children: [\n+                              GestureDetector(\n+                                onTap: () {\n+                                  if (profileImageUrl != null) {\n+                                    showDialog(\n+                                      context: context,\n+                                      builder: (BuildContext context) {\n+                                        return Dialog(\n+                                          child: Stack(\n+                                            children: [\n+                                              Image.network(profileImageUrl!),\n+                                              Positioned(\n+                                                right: 10,\n+                                                top: 10,\n+                                                child: IconButton(\n+                                                  icon: const Icon(Icons.cancel,\n+                                                      color: Colors.red),\n+                                                  onPressed: () {\n+                                                    Navigator.of(context).pop();\n+                                                  },\n+                                                ),\n+                                              ),\n+                                            ],\n+                                          ),\n+                                        );\n+                                      },\n+                                    );\n+                                  }\n+                                },\n+                                child: CircleAvatar(\n+                                  radius: 80.0,\n+                                  backgroundColor: Colors.grey[200],\n+                                  backgroundImage: profileImageUrl != null\n+                                      ? NetworkImage(profileImageUrl!)\n+                                      : null,\n+                                ),\n+                              ),\n+                            ],\n+                          ),\n+                          const SizedBox(height: 20.0),\n+                          _buildNonEditableEmailField(\n+                              \"Name\", _nameController!, false),\n+                          _buildNonEditableEmailField(\n+                              \"Email\", _emailController!, false),\n+                          _buildNonEditableEmailField(\"Phone Number\",\n+                              _phoneController!, !_showPhoneNumber),\n+                          ElevatedButton(\n+                            onPressed: _togglePhoneNumber,\n+                            child: Text(_showPhoneNumber\n+                                ? 'Hide Number'\n+                                : 'Show Number'),\n+                          ),\n+                          _buildNonEditableEmailField(\n+                              \"Department\", _branchController!, false),\n+                          Row(\n+                            mainAxisAlignment: MainAxisAlignment.center,\n+                            children: [\n+                              Card(\n+                                elevation: 3,\n+                                child: Center(\n+                                  child: Padding(\n+                                    padding: const EdgeInsets.all(8.0),\n+                                    child: SizedBox(\n+                                      child: Text(\n+                                        hostel!,\n+                                        style: const TextStyle(\n+                                            fontSize: 16,\n+                                            color: Colors.black54,\n+                                            fontWeight: FontWeight.bold),\n+                                      ),\n+                                    ),\n+                                  ),\n+                                ),\n+                              ),\n+                              Card(\n+                                elevation: 3,\n+                                child: Center(\n+                                  child: Padding(\n+                                    padding: const EdgeInsets.all(8.0),\n+                                    child: SizedBox(\n+                                      child: Text(\n+                                        year!,\n+                                        style: const TextStyle(\n+                                            fontSize: 16,\n+                                            color: Colors.black54,\n+                                            fontWeight: FontWeight.bold),\n+                                      ),\n+                                    ),\n+                                  ),\n+                                ),\n+                              ),\n+                              Card(\n+                                elevation: 3,\n+                                child: Center(\n+                                  child: Padding(\n+                                    padding: const EdgeInsets.all(8.0),\n+                                    child: SizedBox(\n+                                      child: Text(\n+                                        degree!,\n+                                        style: const TextStyle(\n+                                            fontSize: 16,\n+                                            color: Colors.black54,\n+                                            fontWeight: FontWeight.bold),\n+                                      ),\n+                                    ),\n+                                  ),\n+                                ),\n+                              ),\n+                            ],\n+                          ),\n+                        ],\n+                      ),\n+                    ),\n+                    const SizedBox(height: 20.0),\n+                  ],\n+                ),\n+              ),\n+            ),\n+          );\n+        },\n+      ),\n+    );\n+  }\n \n-//   Widget _buildCard({required Widget child}) {\n-//     return Card(\n-//       shape: RoundedRectangleBorder(\n-//         borderRadius: BorderRadius.circular(15.0),\n-//       ),\n-//       elevation: 8.0,\n-//       shadowColor: Colors.grey[400],\n-//       child: Padding(\n-//         padding: const EdgeInsets.all(16.0),\n-//         child: child,\n-//       ),\n-//     );\n-//   }\n+  Widget _buildCard({required Widget child}) {\n+    return Card(\n+      shape: RoundedRectangleBorder(\n+        borderRadius: BorderRadius.circular(15.0),\n+      ),\n+      elevation: 8.0,\n+      shadowColor: Colors.grey[400],\n+      child: Padding(\n+        padding: const EdgeInsets.all(16.0),\n+        child: child,\n+      ),\n+    );\n+  }\n \n-//   Widget _buildNonEditableEmailField(\n-//       String label, String value, bool isVisible) {\n-//     return Column(\n-//       crossAxisAlignment: CrossAxisAlignment.start,\n-//       children: [\n-//         Text(\n-//           label,\n-//           style: const TextStyle(\n-//             fontSize: 16.0,\n-//             fontWeight: FontWeight.bold,\n-//           ),\n-//         ),\n-//         const SizedBox(height: 8.0),\n-//         TextFormField(\n-//           enabled: false,\n-//           obscureText: isVisible,\n-//           initialValue: value,\n-//           decoration: InputDecoration(\n-//             border: OutlineInputBorder(\n-//               borderRadius: BorderRadius.circular(8.0),\n-//             ),\n-//           ),\n-//         ),\n-//         const SizedBox(height: 16.0),\n-//       ],\n-//     );\n-//   }\n-// }\n+  Widget _buildNonEditableEmailField(\n+      String label, String value, bool isVisible) {\n+    return Column(\n+      crossAxisAlignment: CrossAxisAlignment.start,\n+      children: [\n+        Text(\n+          label,\n+          style: const TextStyle(\n+            fontSize: 16.0,\n+            fontWeight: FontWeight.bold,\n+          ),\n+        ),\n+        const SizedBox(height: 8.0),\n+        TextFormField(\n+          enabled: false,\n+          obscureText: isVisible,\n+          initialValue: value,\n+          decoration: InputDecoration(\n+            border: OutlineInputBorder(\n+              borderRadius: BorderRadius.circular(8.0),\n+            ),\n+          ),\n+        ),\n+        const SizedBox(height: 16.0),\n+      ],\n+    );\n+  }\n+}\n"
                },
                {
                    "date": 1756126970188,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,8 @@\n import 'package:cloud_firestore/cloud_firestore.dart';\n import 'package:flutter/material.dart';\n+import 'package:l_f/Frontend/Home/Post/post_model.dart'; // Adjust these imports\n+import 'package:l_f/Frontend/Home/home/post_card.dart';\n \n class ProfilePage2 extends StatefulWidget {\n   final String uid;\n   const ProfilePage2({super.key, required this.uid});\n@@ -9,279 +11,224 @@\n   _ProfilePage2State createState() => _ProfilePage2State();\n }\n \n class _ProfilePage2State extends State<ProfilePage2> {\n-  String? _nameController;\n-  String? _emailController;\n-  String? _phoneController;\n-  String? _rollController;\n-  String? _branchController;\n-  String? _degreeController;\n-  String? _gendercontroller;\n+  late Future<Map<String, dynamic>> _profileDataFuture;\n \n-  String? year;\n-  String? hostel;\n-  String? degree;\n-  String? rollNumber;\n-  String? gender;\n-  String? department;\n-  String? profileImageUrl;\n-\n-  bool _showPhoneNumber = false;\n-  late Future<Map<String, dynamic>?> _userDetails;\n-\n   @override\n   void initState() {\n     super.initState();\n-    _userDetails = getUserDetails(widget.uid).then((data) {\n-      if (data != null) {\n-        _nameController = data['name'] ?? '';\n-        _emailController = data['email'] ?? '';\n-        _phoneController = data['phonenumber'] ?? '';\n-        _rollController = data['rollNumber'] ?? '12345678';\n-        _branchController = data['department'] + ' Department' ?? 'NITH';\n-        profileImageUrl = data['profileImage'];\n-        year = data['year'] ?? 'NITH';\n-        hostel = data['hostel'] ?? 'NITH';\n-        gender = data['gender'];\n-        department = data['department'];\n-        degree = data['degree'];\n-        _degreeController = data['degree'];\n-        _gendercontroller = data['gender'];\n-      }\n-      return data;\n-    });\n+    _profileDataFuture = _fetchProfileData();\n   }\n \n-  Future<Map<String, dynamic>?> getUserDetails(String uid) async {\n-    DocumentSnapshot userDoc =\n-        await FirebaseFirestore.instance.collection('users').doc(uid).get();\n+  // Fetches all user data and post counts in a single operation\n+  Future<Map<String, dynamic>> _fetchProfileData() async {\n+    final userDoc = await FirebaseFirestore.instance.collection('users').doc(widget.uid).get();\n \n-    if (userDoc.exists) {\n-      return userDoc.data() as Map<String, dynamic>?;\n+    if (!userDoc.exists) {\n+      throw Exception('User not found');\n     }\n-    return null;\n-  }\n \n-  Future<bool> _canShowPhoneNumber() async {\n-    // Replace 'claimCollection' with the actual name of your collection\n-    QuerySnapshot claims = await FirebaseFirestore.instance\n+    final userData = userDoc.data()!;\n+\n+    // Fetch post count\n+    final postQuery = await FirebaseFirestore.instance\n         .collection('posts')\n-        .where('postClaimer', isEqualTo: widget.uid)\n-        .where('isClaimed', isEqualTo: true)\n+        .where('postmakerId', isEqualTo: widget.uid)\n         .get();\n+    \n+    userData['postCount'] = postQuery.docs.length;\n \n-    return claims.docs.isNotEmpty;\n+    return userData;\n   }\n \n-  void _togglePhoneNumber() async {\n-    if (await _canShowPhoneNumber()) {\n-      setState(() {\n-        _showPhoneNumber = !_showPhoneNumber;\n-      });\n-    } else {\n-      ScaffoldMessenger.of(context).showSnackBar(\n-          const SnackBar(content: Text('You cannot view this phone number.')));\n-    }\n-  }\n-\n   @override\n   Widget build(BuildContext context) {\n-    bool isMobile = MediaQuery.of(context).size.width < 830;\n-    Size size = MediaQuery.of(context).size;\n     return Scaffold(\n       appBar: AppBar(\n-        title: const Text('Profile'),\n+        title: const Text('User Profile'),\n         backgroundColor: Colors.deepOrange,\n         foregroundColor: Colors.white,\n-        elevation: 4.0,\n       ),\n-      body: FutureBuilder<Map<String, dynamic>?>(\n-        future: _userDetails,\n+      body: FutureBuilder<Map<String, dynamic>>(\n+        future: _profileDataFuture,\n         builder: (context, snapshot) {\n           if (snapshot.connectionState == ConnectionState.waiting) {\n             return const Center(child: CircularProgressIndicator());\n-          } else if (snapshot.hasError) {\n+          }\n+          if (snapshot.hasError) {\n             return Center(child: Text('Error: ${snapshot.error}'));\n-          } else if (!snapshot.hasData || snapshot.data == null) {\n+          }\n+          if (!snapshot.hasData) {\n             return const Center(child: Text('User not found'));\n           }\n \n-          // When data is fetched successfully\n+          final userData = snapshot.data!;\n+          final profileImageUrl = userData['profileImage'] ?? '';\n+\n           return SingleChildScrollView(\n-            padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 20),\n-            child: Center(\n-              child: SizedBox(\n-                width: isMobile ? size.width : 500,\n-                child: Column(\n-                  crossAxisAlignment: CrossAxisAlignment.center,\n-                  children: [\n-                    _buildCard(\n-                      child: Column(\n-                        children: [\n-                          Stack(\n-                            children: [\n-                              GestureDetector(\n-                                onTap: () {\n-                                  if (profileImageUrl != null) {\n-                                    showDialog(\n-                                      context: context,\n-                                      builder: (BuildContext context) {\n-                                        return Dialog(\n-                                          child: Stack(\n-                                            children: [\n-                                              Image.network(profileImageUrl!),\n-                                              Positioned(\n-                                                right: 10,\n-                                                top: 10,\n-                                                child: IconButton(\n-                                                  icon: const Icon(Icons.cancel,\n-                                                      color: Colors.red),\n-                                                  onPressed: () {\n-                                                    Navigator.of(context).pop();\n-                                                  },\n-                                                ),\n-                                              ),\n-                                            ],\n-                                          ),\n-                                        );\n-                                      },\n-                                    );\n-                                  }\n-                                },\n-                                child: CircleAvatar(\n-                                  radius: 80.0,\n-                                  backgroundColor: Colors.grey[200],\n-                                  backgroundImage: profileImageUrl != null\n-                                      ? NetworkImage(profileImageUrl!)\n-                                      : null,\n-                                ),\n-                              ),\n-                            ],\n-                          ),\n-                          const SizedBox(height: 20.0),\n-                          _buildNonEditableEmailField(\n-                              \"Name\", _nameController!, false),\n-                          _buildNonEditableEmailField(\n-                              \"Email\", _emailController!, false),\n-                          _buildNonEditableEmailField(\"Phone Number\",\n-                              _phoneController!, !_showPhoneNumber),\n-                          ElevatedButton(\n-                            onPressed: _togglePhoneNumber,\n-                            child: Text(_showPhoneNumber\n-                                ? 'Hide Number'\n-                                : 'Show Number'),\n-                          ),\n-                          _buildNonEditableEmailField(\n-                              \"Department\", _branchController!, false),\n-                          Row(\n-                            mainAxisAlignment: MainAxisAlignment.center,\n-                            children: [\n-                              Card(\n-                                elevation: 3,\n-                                child: Center(\n-                                  child: Padding(\n-                                    padding: const EdgeInsets.all(8.0),\n-                                    child: SizedBox(\n-                                      child: Text(\n-                                        hostel!,\n-                                        style: const TextStyle(\n-                                            fontSize: 16,\n-                                            color: Colors.black54,\n-                                            fontWeight: FontWeight.bold),\n-                                      ),\n-                                    ),\n-                                  ),\n-                                ),\n-                              ),\n-                              Card(\n-                                elevation: 3,\n-                                child: Center(\n-                                  child: Padding(\n-                                    padding: const EdgeInsets.all(8.0),\n-                                    child: SizedBox(\n-                                      child: Text(\n-                                        year!,\n-                                        style: const TextStyle(\n-                                            fontSize: 16,\n-                                            color: Colors.black54,\n-                                            fontWeight: FontWeight.bold),\n-                                      ),\n-                                    ),\n-                                  ),\n-                                ),\n-                              ),\n-                              Card(\n-                                elevation: 3,\n-                                child: Center(\n-                                  child: Padding(\n-                                    padding: const EdgeInsets.all(8.0),\n-                                    child: SizedBox(\n-                                      child: Text(\n-                                        degree!,\n-                                        style: const TextStyle(\n-                                            fontSize: 16,\n-                                            color: Colors.black54,\n-                                            fontWeight: FontWeight.bold),\n-                                      ),\n-                                    ),\n-                                  ),\n-                                ),\n-                              ),\n-                            ],\n-                          ),\n-                        ],\n+            child: Padding(\n+              padding: const EdgeInsets.all(16.0),\n+              child: Column(\n+                crossAxisAlignment: CrossAxisAlignment.center,\n+                children: [\n+                  // --- Main Profile Header ---\n+                  CircleAvatar(\n+                    radius: 60,\n+                    backgroundColor: Colors.grey.shade300,\n+                    backgroundImage: profileImageUrl.isNotEmpty ? NetworkImage(profileImageUrl) : null,\n+                    child: profileImageUrl.isEmpty ? const Icon(Icons.person, size: 60, color: Colors.grey) : null,\n+                  ),\n+                  const SizedBox(height: 16),\n+                  Text(\n+                    userData['name'] ?? 'No Name',\n+                    style: Theme.of(context).textTheme.headlineSmall?.copyWith(fontWeight: FontWeight.bold),\n+                  ),\n+                  Text(\n+                    userData['email'] ?? 'No Email',\n+                    style: Theme.of(context).textTheme.titleMedium?.copyWith(color: Colors.grey.shade600),\n+                  ),\n+                  const SizedBox(height: 24),\n+\n+                  // --- User Statistics ---\n+                  Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceAround,\n+                    children: [\n+                      _buildStatCard(\n+                        context,\n+                        icon: Icons.post_add,\n+                        label: 'Posts Made',\n+                        value: (userData['postCount'] ?? 0).toString(),\n+                        color: Colors.blue,\n                       ),\n-                    ),\n-                    const SizedBox(height: 20.0),\n-                  ],\n-                ),\n+                      _buildStatCard(\n+                        context,\n+                        icon: Icons.warning_amber,\n+                        label: 'Warnings',\n+                        value: (userData['warningCount'] ?? 0).toString(),\n+                        color: Colors.orange,\n+                      ),\n+                      _buildStatCard(\n+                        context,\n+                        icon: Icons.report_problem_outlined,\n+                        label: 'False Reports',\n+                        value: (userData['falseReportCount'] ?? 0).toString(),\n+                        color: Colors.red,\n+                      ),\n+                    ],\n+                  ),\n+                  const SizedBox(height: 24),\n+\n+                  // --- Detailed Information Boxes ---\n+                  _buildInfoBox(\n+                    icon: Icons.badge_outlined,\n+                    title: 'Roll Number',\n+                    subtitle: userData['rollNumber'] ?? 'Not Provided',\n+                  ),\n+                  _buildInfoBox(\n+                    icon: Icons.school_outlined,\n+                    title: 'Department',\n+                    subtitle: userData['department'] ?? 'Not Provided',\n+                  ),\n+                  _buildInfoBox(\n+                    icon: Icons.hotel_outlined,\n+                    title: 'Hostel',\n+                    subtitle: userData['hostel'] ?? 'Not Provided',\n+                  ),\n+                   _buildInfoBox(\n+                    icon: Icons.phone_outlined,\n+                    title: 'Phone',\n+                    subtitle: userData['phonenumber'] ?? 'Not Provided',\n+                  ),\n+                  const SizedBox(height: 24),\n+\n+                  // --- User's Posts Section ---\n+                  const Text(\n+                    \"User's Posts\",\n+                    style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),\n+                  ),\n+                  const Divider(thickness: 1.5),\n+                  _buildUserPostsList(),\n+                ],\n               ),\n             ),\n           );\n         },\n       ),\n     );\n   }\n \n-  Widget _buildCard({required Widget child}) {\n+  // --- Reusable Widgets ---\n+\n+  Widget _buildStatCard(BuildContext context, {required IconData icon, required String label, required String value, required Color color}) {\n+    return Expanded(\n+      child: Card(\n+        elevation: 2,\n+        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),\n+        child: Padding(\n+          padding: const EdgeInsets.all(16.0),\n+          child: Column(\n+            children: [\n+              Icon(icon, size: 32, color: color),\n+              const SizedBox(height: 8),\n+              Text(value, style: Theme.of(context).textTheme.titleLarge?.copyWith(fontWeight: FontWeight.bold)),\n+              Text(label, style: Theme.of(context).textTheme.bodySmall),\n+            ],\n+          ),\n+        ),\n+      ),\n+    );\n+  }\n+\n+  Widget _buildInfoBox({required IconData icon, required String title, required String subtitle}) {\n     return Card(\n-      shape: RoundedRectangleBorder(\n-        borderRadius: BorderRadius.circular(15.0),\n+      margin: const EdgeInsets.symmetric(vertical: 6),\n+      elevation: 2,\n+      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),\n+      child: ListTile(\n+        leading: Icon(icon, size: 30, color: Colors.deepOrange),\n+        title: Text(title, style: const TextStyle(fontWeight: FontWeight.bold)),\n+        subtitle: Text(subtitle, style: const TextStyle(fontSize: 16)),\n       ),\n-      elevation: 8.0,\n-      shadowColor: Colors.grey[400],\n-      child: Padding(\n-        padding: const EdgeInsets.all(16.0),\n-        child: child,\n-      ),\n     );\n   }\n \n-  Widget _buildNonEditableEmailField(\n-      String label, String value, bool isVisible) {\n-    return Column(\n-      crossAxisAlignment: CrossAxisAlignment.start,\n-      children: [\n-        Text(\n-          label,\n-          style: const TextStyle(\n-            fontSize: 16.0,\n-            fontWeight: FontWeight.bold,\n-          ),\n-        ),\n-        const SizedBox(height: 8.0),\n-        TextFormField(\n-          enabled: false,\n-          obscureText: isVisible,\n-          initialValue: value,\n-          decoration: InputDecoration(\n-            border: OutlineInputBorder(\n-              borderRadius: BorderRadius.circular(8.0),\n-            ),\n-          ),\n-        ),\n-        const SizedBox(height: 16.0),\n-      ],\n+  Widget _buildUserPostsList() {\n+    return StreamBuilder<QuerySnapshot>(\n+      stream: FirebaseFirestore.instance\n+          .collection('posts')\n+          .where('postmakerId', isEqualTo: widget.uid)\n+          .orderBy('timestamp', descending: true)\n+          .snapshots(),\n+      builder: (context, snapshot) {\n+        if (snapshot.connectionState == ConnectionState.waiting) {\n+          return const Center(child: CircularProgressIndicator());\n+        }\n+        if (!snapshot.hasData || snapshot.data!.docs.isEmpty) {\n+          return const Padding(\n+            padding: EdgeInsets.all(20.0),\n+            child: Center(child: Text(\"This user has not made any posts yet.\")),\n+          );\n+        }\n+\n+        // Using a ListView that is not scrollable and expands to its content size\n+        return ListView.builder(\n+          shrinkWrap: true, // Important for nesting in SingleChildScrollView\n+          physics: const NeverScrollableScrollPhysics(), // The parent handles scrolling\n+          itemCount: snapshot.data!.docs.length,\n+          itemBuilder: (context, index) {\n+            final postDoc = snapshot.data!.docs[index];\n+            final postModel = PostModel.fromJson(postDoc.data() as Map<String, dynamic>);\n+            \n+            // Reusing your existing PostCard widget\n+            return PostCard(\n+              post: postModel,\n+              isOwner: false, // You are viewing someone else's profile\n+              onDelete: () {}, // No action\n+              onReport: () {}, // No action\n+            );\n+          },\n+        );\n+      },\n     );\n   }\n }\n"
                },
                {
                    "date": 1756126975619,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import 'package:cloud_firestore/cloud_firestore.dart';\n import 'package:flutter/material.dart';\n import 'package:l_f/Frontend/Home/Post/post_model.dart'; // Adjust these imports\n+import 'package:l_f/Frontend/Home/admin/report/pst_card.dart';\n import 'package:l_f/Frontend/Home/home/post_card.dart';\n \n class ProfilePage2 extends StatefulWidget {\n   final String uid;\n"
                },
                {
                    "date": 1756127948974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,7 @@\n import 'package:cloud_firestore/cloud_firestore.dart';\n import 'package:flutter/material.dart';\n import 'package:l_f/Frontend/Home/Post/post_model.dart'; // Adjust these imports\n-import 'package:l_f/Frontend/Home/admin/report/pst_card.dart';\n import 'package:l_f/Frontend/Home/home/post_card.dart';\n \n class ProfilePage2 extends StatefulWidget {\n   final String uid;\n@@ -22,9 +21,12 @@\n   }\n \n   // Fetches all user data and post counts in a single operation\n   Future<Map<String, dynamic>> _fetchProfileData() async {\n-    final userDoc = await FirebaseFirestore.instance.collection('users').doc(widget.uid).get();\n+    final userDoc = await FirebaseFirestore.instance\n+        .collection('users')\n+        .doc(widget.uid)\n+        .get();\n \n     if (!userDoc.exists) {\n       throw Exception('User not found');\n     }\n@@ -35,9 +37,9 @@\n     final postQuery = await FirebaseFirestore.instance\n         .collection('posts')\n         .where('postmakerId', isEqualTo: widget.uid)\n         .get();\n-    \n+\n     userData['postCount'] = postQuery.docs.length;\n \n     return userData;\n   }\n@@ -64,8 +66,10 @@\n           }\n \n           final userData = snapshot.data!;\n           final profileImageUrl = userData['profileImage'] ?? '';\n+          final warningCount = userData['warningCount'] ?? 0;\n+          final bool isBlocked = warningCount >= 2;\n \n           return SingleChildScrollView(\n             child: Padding(\n               padding: const EdgeInsets.all(16.0),\n@@ -75,20 +79,43 @@\n                   // --- Main Profile Header ---\n                   CircleAvatar(\n                     radius: 60,\n                     backgroundColor: Colors.grey.shade300,\n-                    backgroundImage: profileImageUrl.isNotEmpty ? NetworkImage(profileImageUrl) : null,\n-                    child: profileImageUrl.isEmpty ? const Icon(Icons.person, size: 60, color: Colors.grey) : null,\n+                    backgroundImage: profileImageUrl.isNotEmpty\n+                        ? NetworkImage(profileImageUrl)\n+                        : null,\n+                    child: profileImageUrl.isEmpty\n+                        ? const Icon(Icons.person, size: 60, color: Colors.grey)\n+                        : null,\n                   ),\n                   const SizedBox(height: 16),\n                   Text(\n                     userData['name'] ?? 'No Name',\n-                    style: Theme.of(context).textTheme.headlineSmall?.copyWith(fontWeight: FontWeight.bold),\n+                    style: Theme.of(context)\n+                        .textTheme\n+                        .headlineSmall\n+                        ?.copyWith(fontWeight: FontWeight.bold),\n                   ),\n                   Text(\n                     userData['email'] ?? 'No Email',\n-                    style: Theme.of(context).textTheme.titleMedium?.copyWith(color: Colors.grey.shade600),\n+                    style: Theme.of(context)\n+                        .textTheme\n+                        .titleMedium\n+                        ?.copyWith(color: Colors.grey.shade600),\n                   ),\n+\n+                  // --- NEW: Blocked Status Indicator ---\n+                  if (isBlocked) ...[\n+                    const SizedBox(height: 8),\n+                    Chip(\n+                      label: const Text('BLOCKED'),\n+                      backgroundColor: Colors.red.shade700,\n+                      labelStyle: const TextStyle(\n+                          color: Colors.white, fontWeight: FontWeight.bold),\n+                      avatar: const Icon(Icons.block_flipped, color: Colors.white),\n+                    ),\n+                  ],\n+\n                   const SizedBox(height: 24),\n \n                   // --- User Statistics ---\n                   Row(\n@@ -104,9 +131,9 @@\n                       _buildStatCard(\n                         context,\n                         icon: Icons.warning_amber,\n                         label: 'Warnings',\n-                        value: (userData['warningCount'] ?? 0).toString(),\n+                        value: warningCount.toString(),\n                         color: Colors.orange,\n                       ),\n                       _buildStatCard(\n                         context,\n@@ -134,9 +161,9 @@\n                     icon: Icons.hotel_outlined,\n                     title: 'Hostel',\n                     subtitle: userData['hostel'] ?? 'Not Provided',\n                   ),\n-                   _buildInfoBox(\n+                  _buildInfoBox(\n                     icon: Icons.phone_outlined,\n                     title: 'Phone',\n                     subtitle: userData['phonenumber'] ?? 'Not Provided',\n                   ),\n@@ -159,9 +186,13 @@\n   }\n \n   // --- Reusable Widgets ---\n \n-  Widget _buildStatCard(BuildContext context, {required IconData icon, required String label, required String value, required Color color}) {\n+  Widget _buildStatCard(BuildContext context,\n+      {required IconData icon,\n+      required String label,\n+      required String value,\n+      required Color color}) {\n     return Expanded(\n       child: Card(\n         elevation: 2,\n         shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),\n@@ -170,18 +201,25 @@\n           child: Column(\n             children: [\n               Icon(icon, size: 32, color: color),\n               const SizedBox(height: 8),\n-              Text(value, style: Theme.of(context).textTheme.titleLarge?.copyWith(fontWeight: FontWeight.bold)),\n+              Text(value,\n+                  style: Theme.of(context)\n+                      .textTheme\n+                      .titleLarge\n+                      ?.copyWith(fontWeight: FontWeight.bold)),\n               Text(label, style: Theme.of(context).textTheme.bodySmall),\n             ],\n           ),\n         ),\n       ),\n     );\n   }\n \n-  Widget _buildInfoBox({required IconData icon, required String title, required String subtitle}) {\n+  Widget _buildInfoBox(\n+      {required IconData icon,\n+      required String title,\n+      required String subtitle}) {\n     return Card(\n       margin: const EdgeInsets.symmetric(vertical: 6),\n       elevation: 2,\n       shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),\n@@ -213,14 +251,16 @@\n \n         // Using a ListView that is not scrollable and expands to its content size\n         return ListView.builder(\n           shrinkWrap: true, // Important for nesting in SingleChildScrollView\n-          physics: const NeverScrollableScrollPhysics(), // The parent handles scrolling\n+          physics:\n+              const NeverScrollableScrollPhysics(), // The parent handles scrolling\n           itemCount: snapshot.data!.docs.length,\n           itemBuilder: (context, index) {\n             final postDoc = snapshot.data!.docs[index];\n-            final postModel = PostModel.fromJson(postDoc.data() as Map<String, dynamic>);\n-            \n+            final postModel =\n+                PostModel.fromJson(postDoc.data() as Map<String, dynamic>);\n+\n             // Reusing your existing PostCard widget\n             return PostCard(\n               post: postModel,\n               isOwner: false, // You are viewing someone else's profile\n"
                },
                {
                    "date": 1756127957785,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import 'package:cloud_firestore/cloud_firestore.dart';\n import 'package:flutter/material.dart';\n import 'package:l_f/Frontend/Home/Post/post_model.dart'; // Adjust these imports\n-import 'package:l_f/Frontend/Home/home/post_card.dart';\n+import 'package:l_f/Frontend/Home/admin/report/pst_card.dart';\n \n class ProfilePage2 extends StatefulWidget {\n   final String uid;\n   const ProfilePage2({super.key, required this.uid});\n"
                },
                {
                    "date": 1756128015337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import 'package:cloud_firestore/cloud_firestore.dart';\n import 'package:flutter/material.dart';\n import 'package:l_f/Frontend/Home/Post/post_model.dart'; // Adjust these imports\n-import 'package:l_f/Frontend/Home/admin/report/pst_card.dart';\n+import 'package:l_f/Frontend/Home/home/post_card.dart';\n \n class ProfilePage2 extends StatefulWidget {\n   final String uid;\n   const ProfilePage2({super.key, required this.uid});\n@@ -68,8 +68,10 @@\n           final userData = snapshot.data!;\n           final profileImageUrl = userData['profileImage'] ?? '';\n           final warningCount = userData['warningCount'] ?? 0;\n           final bool isBlocked = warningCount >= 2;\n+          // --- NEW: Check if the user is an admin ---\n+          final bool isAdmin = userData['email'] == '22bcs007@nith.ac.in';\n \n           return SingleChildScrollView(\n             child: Padding(\n               padding: const EdgeInsets.all(16.0),\n@@ -102,11 +104,20 @@\n                         .titleMedium\n                         ?.copyWith(color: Colors.grey.shade600),\n                   ),\n \n-                  // --- NEW: Blocked Status Indicator ---\n-                  if (isBlocked) ...[\n+                  // --- Status Indicators (Admin or Blocked) ---\n+                  if (isAdmin) ...[\n                     const SizedBox(height: 8),\n+                    const Chip(\n+                      label: Text('ADMIN'),\n+                      backgroundColor: Colors.indigo,\n+                      labelStyle: TextStyle(\n+                          color: Colors.white, fontWeight: FontWeight.bold),\n+                      avatar: Icon(Icons.shield, color: Colors.white),\n+                    ),\n+                  ] else if (isBlocked) ...[\n+                    const SizedBox(height: 8),\n                     Chip(\n                       label: const Text('BLOCKED'),\n                       backgroundColor: Colors.red.shade700,\n                       labelStyle: const TextStyle(\n"
                },
                {
                    "date": 1756128023715,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import 'package:cloud_firestore/cloud_firestore.dart';\n import 'package:flutter/material.dart';\n import 'package:l_f/Frontend/Home/Post/post_model.dart'; // Adjust these imports\n+import 'package:l_f/Frontend/Home/admin/report/pst_card.dart';\n import 'package:l_f/Frontend/Home/home/post_card.dart';\n \n class ProfilePage2 extends StatefulWidget {\n   final String uid;\n"
                },
                {
                    "date": 1756128255108,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,7 @@\n import 'package:cloud_firestore/cloud_firestore.dart';\n import 'package:flutter/material.dart';\n import 'package:l_f/Frontend/Home/Post/post_model.dart'; // Adjust these imports\n-import 'package:l_f/Frontend/Home/admin/report/pst_card.dart';\n import 'package:l_f/Frontend/Home/home/post_card.dart';\n \n class ProfilePage2 extends StatefulWidget {\n   final String uid;\n@@ -13,8 +12,9 @@\n }\n \n class _ProfilePage2State extends State<ProfilePage2> {\n   late Future<Map<String, dynamic>> _profileDataFuture;\n+  bool _showPhoneNumber = false;\n \n   @override\n   void initState() {\n     super.initState();\n@@ -43,9 +43,32 @@\n     userData['postCount'] = postQuery.docs.length;\n \n     return userData;\n   }\n+  \n+  // --- Logic for showing/hiding the phone number ---\n+  \n+  Future<bool> _canShowPhoneNumber() async {\n+    // This is a placeholder for your actual logic.\n+    // For example, check if the current user has claimed an item from this user.\n+    // Replace with your actual implementation.\n+    // For now, it's set to 'false' for demonstration.\n+    return false; \n+  }\n \n+  void _togglePhoneNumber() async {\n+    if (await _canShowPhoneNumber()) {\n+      setState(() {\n+        _showPhoneNumber = !_showPhoneNumber;\n+      });\n+    } else {\n+      ScaffoldMessenger.of(context).showSnackBar(\n+        const SnackBar(content: Text('You do not have permission to view this phone number.')),\n+      );\n+    }\n+  }\n+\n+\n   @override\n   Widget build(BuildContext context) {\n     return Scaffold(\n       appBar: AppBar(\n@@ -69,9 +92,8 @@\n           final userData = snapshot.data!;\n           final profileImageUrl = userData['profileImage'] ?? '';\n           final warningCount = userData['warningCount'] ?? 0;\n           final bool isBlocked = warningCount >= 2;\n-          // --- NEW: Check if the user is an admin ---\n           final bool isAdmin = userData['email'] == '22bcs007@nith.ac.in';\n \n           return SingleChildScrollView(\n             child: Padding(\n@@ -176,9 +198,13 @@\n                   ),\n                   _buildInfoBox(\n                     icon: Icons.phone_outlined,\n                     title: 'Phone',\n-                    subtitle: userData['phonenumber'] ?? 'Not Provided',\n+                    subtitle: _showPhoneNumber ? (userData['phonenumber'] ?? 'Not Provided') : '**********',\n+                    trailing: IconButton(\n+                      icon: Icon(_showPhoneNumber ? Icons.visibility_off : Icons.visibility),\n+                      onPressed: _togglePhoneNumber,\n+                    ),\n                   ),\n                   const SizedBox(height: 24),\n \n                   // --- User's Posts Section ---\n@@ -229,17 +255,19 @@\n \n   Widget _buildInfoBox(\n       {required IconData icon,\n       required String title,\n-      required String subtitle}) {\n+      required String subtitle,\n+      Widget? trailing}) {\n     return Card(\n       margin: const EdgeInsets.symmetric(vertical: 6),\n       elevation: 2,\n       shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),\n       child: ListTile(\n         leading: Icon(icon, size: 30, color: Colors.deepOrange),\n         title: Text(title, style: const TextStyle(fontWeight: FontWeight.bold)),\n         subtitle: Text(subtitle, style: const TextStyle(fontSize: 16)),\n+        trailing: trailing,\n       ),\n     );\n   }\n \n@@ -260,25 +288,22 @@\n             child: Center(child: Text(\"This user has not made any posts yet.\")),\n           );\n         }\n \n-        // Using a ListView that is not scrollable and expands to its content size\n         return ListView.builder(\n-          shrinkWrap: true, // Important for nesting in SingleChildScrollView\n-          physics:\n-              const NeverScrollableScrollPhysics(), // The parent handles scrolling\n+          shrinkWrap: true,\n+          physics: const NeverScrollableScrollPhysics(),\n           itemCount: snapshot.data!.docs.length,\n           itemBuilder: (context, index) {\n             final postDoc = snapshot.data!.docs[index];\n             final postModel =\n                 PostModel.fromJson(postDoc.data() as Map<String, dynamic>);\n \n-            // Reusing your existing PostCard widget\n             return PostCard(\n               post: postModel,\n-              isOwner: false, // You are viewing someone else's profile\n-              onDelete: () {}, // No action\n-              onReport: () {}, // No action\n+              isOwner: false,\n+              onDelete: () {},\n+              onReport: () {},\n             );\n           },\n         );\n       },\n"
                },
                {
                    "date": 1756128261094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import 'package:cloud_firestore/cloud_firestore.dart';\n import 'package:flutter/material.dart';\n import 'package:l_f/Frontend/Home/Post/post_model.dart'; // Adjust these imports\n-import 'package:l_f/Frontend/Home/home/post_card.dart';\n+import 'package:l_f/Frontend/Home/admin/report/pst_card.dart';\n \n class ProfilePage2 extends StatefulWidget {\n   final String uid;\n   const ProfilePage2({super.key, required this.uid});\n"
                },
                {
                    "date": 1756128729254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,26 @@\n import 'package:cloud_firestore/cloud_firestore.dart';\n+import 'package:firebase_auth/firebase_auth.dart';\n import 'package:flutter/material.dart';\n import 'package:l_f/Frontend/Home/Post/post_model.dart'; // Adjust these imports\n-import 'package:l_f/Frontend/Home/admin/report/pst_card.dart';\n+import 'package:l_f/Frontend/Home/home/post_card.dart';\n \n+// Placeholder for your actual chat page\n+class ChatPage extends StatelessWidget {\n+  final String receiverId;\n+  final String receiverName;\n+  const ChatPage({super.key, required this.receiverId, required this.receiverName});\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      appBar: AppBar(title: Text('Chat with $receiverName')),\n+      body: Center(child: Text('Chatting with user ID: $receiverId')),\n+    );\n+  }\n+}\n+\n+\n class ProfilePage2 extends StatefulWidget {\n   final String uid;\n   const ProfilePage2({super.key, required this.uid});\n \n@@ -20,8 +37,32 @@\n     super.initState();\n     _profileDataFuture = _fetchProfileData();\n   }\n \n+  // Reusable method for smooth page transitions\n+  Route _createSmoothRoute(Widget page) {\n+    return PageRouteBuilder(\n+      pageBuilder: (context, animation, secondaryAnimation) => page,\n+      transitionsBuilder: (context, animation, secondaryAnimation, child) {\n+        const begin = Offset(0.0, 0.1);\n+        const end = Offset.zero;\n+        const curve = Curves.easeOut;\n+\n+        var tween = Tween(begin: begin, end: end).chain(CurveTween(curve: curve));\n+        var slideAnimation = animation.drive(tween);\n+\n+        return FadeTransition(\n+          opacity: animation,\n+          child: SlideTransition(\n+            position: slideAnimation,\n+            child: child,\n+          ),\n+        );\n+      },\n+      transitionDuration: const Duration(milliseconds: 400),\n+    );\n+  }\n+\n   // Fetches all user data and post counts in a single operation\n   Future<Map<String, dynamic>> _fetchProfileData() async {\n     final userDoc = await FirebaseFirestore.instance\n         .collection('users')\n@@ -69,8 +110,10 @@\n \n \n   @override\n   Widget build(BuildContext context) {\n+    final currentUser = FirebaseAuth.instance.currentUser;\n+\n     return Scaffold(\n       appBar: AppBar(\n         title: const Text('User Profile'),\n         backgroundColor: Colors.deepOrange,\n@@ -147,8 +190,33 @@\n                           color: Colors.white, fontWeight: FontWeight.bold),\n                       avatar: const Icon(Icons.block_flipped, color: Colors.white),\n                     ),\n                   ],\n+                  \n+                  // --- NEW: Chat Button ---\n+                  if (currentUser != null && currentUser.uid != widget.uid) ...[\n+                    const SizedBox(height: 16),\n+                    ElevatedButton.icon(\n+                      onPressed: () {\n+                        Navigator.of(context).push(_createSmoothRoute(\n+                          ChatPage(\n+                            receiverId: widget.uid,\n+                            receiverName: userData['name'] ?? 'User',\n+                          ),\n+                        ));\n+                      },\n+                      icon: const Icon(Icons.chat_bubble_outline),\n+                      label: const Text('Chat with this User'),\n+                      style: ElevatedButton.styleFrom(\n+                        backgroundColor: Colors.deepOrange,\n+                        foregroundColor: Colors.white,\n+                        shape: RoundedRectangleBorder(\n+                          borderRadius: BorderRadius.circular(20),\n+                        ),\n+                        padding: const EdgeInsets.symmetric(horizontal: 24, vertical: 12),\n+                      ),\n+                    )\n+                  ],\n \n                   const SizedBox(height: 24),\n \n                   // --- User Statistics ---\n"
                },
                {
                    "date": 1756128736786,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import 'package:cloud_firestore/cloud_firestore.dart';\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:flutter/material.dart';\n import 'package:l_f/Frontend/Home/Post/post_model.dart'; // Adjust these imports\n-import 'package:l_f/Frontend/Home/home/post_card.dart';\n+import 'package:l_f/Frontend/Home/admin/report/pst_card.dart';\n \n // Placeholder for your actual chat page\n class ChatPage extends StatelessWidget {\n   final String receiverId;\n"
                },
                {
                    "date": 1756129119949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -197,12 +197,9 @@\n                     const SizedBox(height: 16),\n                     ElevatedButton.icon(\n                       onPressed: () {\n                         Navigator.of(context).push(_createSmoothRoute(\n-                          ChatPage(\n-                            receiverId: widget.uid,\n-                            receiverName: userData['name'] ?? 'User',\n-                          ),\n+                          \n                         ));\n                       },\n                       icon: const Icon(Icons.chat_bubble_outline),\n                       label: const Text('Chat with this User'),\n"
                },
                {
                    "date": 1756129125772,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import 'package:cloud_firestore/cloud_firestore.dart';\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:flutter/material.dart';\n+import 'package:l_f/Frontend/Home/ChatPage/userchatpage.dart';\n import 'package:l_f/Frontend/Home/Post/post_model.dart'; // Adjust these imports\n import 'package:l_f/Frontend/Home/admin/report/pst_card.dart';\n \n // Placeholder for your actual chat page\n@@ -197,9 +198,9 @@\n                     const SizedBox(height: 16),\n                     ElevatedButton.icon(\n                       onPressed: () {\n                         Navigator.of(context).push(_createSmoothRoute(\n-                          \n+                          ChatDetailPage(otherUserId: )\n                         ));\n                       },\n                       icon: const Icon(Icons.chat_bubble_outline),\n                       label: const Text('Chat with this User'),\n"
                },
                {
                    "date": 1756129135081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -198,9 +198,9 @@\n                     const SizedBox(height: 16),\n                     ElevatedButton.icon(\n                       onPressed: () {\n                         Navigator.of(context).push(_createSmoothRoute(\n-                          ChatDetailPage(otherUserId: )\n+                          ChatDetailPage(otherUserId: widget.uid,)\n                         ));\n                       },\n                       icon: const Icon(Icons.chat_bubble_outline),\n                       label: const Text('Chat with this User'),\n"
                }
            ],
            "date": 1756119099924,
            "name": "Commit-0",
            "content": "// import 'package:cloud_firestore/cloud_firestore.dart';\n// import 'package:flutter/material.dart';\n\n// class ProfilePage2 extends StatefulWidget {\n//   final String uid;\n//   const ProfilePage2({super.key, required this.uid});\n\n//   @override\n//   _ProfilePage2State createState() => _ProfilePage2State();\n// }\n\n// class _ProfilePage2State extends State<ProfilePage2> {\n//   String? _nameController;\n//   String? _emailController;\n//   String? _phoneController;\n//   String? _rollController;\n//   String? _branchController;\n//   String? _degreeController;\n//   String? _gendercontroller;\n\n//   String? year;\n//   String? hostel;\n//   String? degree;\n//   String? rollNumber;\n//   String? gender;\n//   String? department;\n//   String? profileImageUrl;\n\n//   bool _showPhoneNumber = false;\n//   late Future<Map<String, dynamic>?> _userDetails;\n\n//   @override\n//   void initState() {\n//     super.initState();\n//     _userDetails = getUserDetails(widget.uid).then((data) {\n//       if (data != null) {\n//         _nameController = data['name'] ?? '';\n//         _emailController = data['email'] ?? '';\n//         _phoneController = data['phonenumber'] ?? '';\n//         _rollController = data['rollNumber'] ?? '12345678';\n//         _branchController = data['department'] + ' Department' ?? 'NITH';\n//         profileImageUrl = data['profileImage'];\n//         year = data['year'] ?? 'NITH';\n//         hostel = data['hostel'] ?? 'NITH';\n//         gender = data['gender'];\n//         department = data['department'];\n//         degree = data['degree'];\n//         _degreeController = data['degree'];\n//         _gendercontroller = data['gender'];\n//       }\n//       return data;\n//     });\n//   }\n\n//   Future<Map<String, dynamic>?> getUserDetails(String uid) async {\n//     DocumentSnapshot userDoc =\n//         await FirebaseFirestore.instance.collection('users').doc(uid).get();\n\n//     if (userDoc.exists) {\n//       return userDoc.data() as Map<String, dynamic>?;\n//     }\n//     return null;\n//   }\n\n//   Future<bool> _canShowPhoneNumber() async {\n//     // Replace 'claimCollection' with the actual name of your collection\n//     QuerySnapshot claims = await FirebaseFirestore.instance\n//         .collection('posts')\n//         .where('postClaimer', isEqualTo: widget.uid)\n//         .where('isClaimed', isEqualTo: true)\n//         .get();\n\n//     return claims.docs.isNotEmpty;\n//   }\n\n//   void _togglePhoneNumber() async {\n//     if (await _canShowPhoneNumber()) {\n//       setState(() {\n//         _showPhoneNumber = !_showPhoneNumber;\n//       });\n//     } else {\n//       ScaffoldMessenger.of(context).showSnackBar(\n//           const SnackBar(content: Text('You cannot view this phone number.')));\n//     }\n//   }\n\n//   @override\n//   Widget build(BuildContext context) {\n//     bool isMobile = MediaQuery.of(context).size.width < 830;\n//     Size size = MediaQuery.of(context).size;\n//     return Scaffold(\n//       appBar: AppBar(\n//         title: const Text('Profile'),\n//         backgroundColor: Colors.deepOrange,\n//         foregroundColor: Colors.white,\n//         elevation: 4.0,\n//       ),\n//       body: FutureBuilder<Map<String, dynamic>?>(\n//         future: _userDetails,\n//         builder: (context, snapshot) {\n//           if (snapshot.connectionState == ConnectionState.waiting) {\n//             return const Center(child: CircularProgressIndicator());\n//           } else if (snapshot.hasError) {\n//             return Center(child: Text('Error: ${snapshot.error}'));\n//           } else if (!snapshot.hasData || snapshot.data == null) {\n//             return const Center(child: Text('User not found'));\n//           }\n\n//           // When data is fetched successfully\n//           return SingleChildScrollView(\n//             padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 20),\n//             child: Center(\n//               child: SizedBox(\n//                 width: isMobile ? size.width : 500,\n//                 child: Column(\n//                   crossAxisAlignment: CrossAxisAlignment.center,\n//                   children: [\n//                     _buildCard(\n//                       child: Column(\n//                         children: [\n//                           Stack(\n//                             children: [\n//                               GestureDetector(\n//                                 onTap: () {\n//                                   if (profileImageUrl != null) {\n//                                     showDialog(\n//                                       context: context,\n//                                       builder: (BuildContext context) {\n//                                         return Dialog(\n//                                           child: Stack(\n//                                             children: [\n//                                               Image.network(profileImageUrl!),\n//                                               Positioned(\n//                                                 right: 10,\n//                                                 top: 10,\n//                                                 child: IconButton(\n//                                                   icon: const Icon(Icons.cancel,\n//                                                       color: Colors.red),\n//                                                   onPressed: () {\n//                                                     Navigator.of(context).pop();\n//                                                   },\n//                                                 ),\n//                                               ),\n//                                             ],\n//                                           ),\n//                                         );\n//                                       },\n//                                     );\n//                                   }\n//                                 },\n//                                 child: CircleAvatar(\n//                                   radius: 80.0,\n//                                   backgroundColor: Colors.grey[200],\n//                                   backgroundImage: profileImageUrl != null\n//                                       ? NetworkImage(profileImageUrl!)\n//                                       : null,\n//                                 ),\n//                               ),\n//                             ],\n//                           ),\n//                           const SizedBox(height: 20.0),\n//                           _buildNonEditableEmailField(\n//                               \"Name\", _nameController!, false),\n//                           _buildNonEditableEmailField(\n//                               \"Email\", _emailController!, false),\n//                           _buildNonEditableEmailField(\"Phone Number\",\n//                               _phoneController!, !_showPhoneNumber),\n//                           ElevatedButton(\n//                             onPressed: _togglePhoneNumber,\n//                             child: Text(_showPhoneNumber\n//                                 ? 'Hide Number'\n//                                 : 'Show Number'),\n//                           ),\n//                           _buildNonEditableEmailField(\n//                               \"Department\", _branchController!, false),\n//                           Row(\n//                             mainAxisAlignment: MainAxisAlignment.center,\n//                             children: [\n//                               Card(\n//                                 elevation: 3,\n//                                 child: Center(\n//                                   child: Padding(\n//                                     padding: const EdgeInsets.all(8.0),\n//                                     child: SizedBox(\n//                                       child: Text(\n//                                         hostel!,\n//                                         style: const TextStyle(\n//                                             fontSize: 16,\n//                                             color: Colors.black54,\n//                                             fontWeight: FontWeight.bold),\n//                                       ),\n//                                     ),\n//                                   ),\n//                                 ),\n//                               ),\n//                               Card(\n//                                 elevation: 3,\n//                                 child: Center(\n//                                   child: Padding(\n//                                     padding: const EdgeInsets.all(8.0),\n//                                     child: SizedBox(\n//                                       child: Text(\n//                                         year!,\n//                                         style: const TextStyle(\n//                                             fontSize: 16,\n//                                             color: Colors.black54,\n//                                             fontWeight: FontWeight.bold),\n//                                       ),\n//                                     ),\n//                                   ),\n//                                 ),\n//                               ),\n//                               Card(\n//                                 elevation: 3,\n//                                 child: Center(\n//                                   child: Padding(\n//                                     padding: const EdgeInsets.all(8.0),\n//                                     child: SizedBox(\n//                                       child: Text(\n//                                         degree!,\n//                                         style: const TextStyle(\n//                                             fontSize: 16,\n//                                             color: Colors.black54,\n//                                             fontWeight: FontWeight.bold),\n//                                       ),\n//                                     ),\n//                                   ),\n//                                 ),\n//                               ),\n//                             ],\n//                           ),\n//                         ],\n//                       ),\n//                     ),\n//                     const SizedBox(height: 20.0),\n//                   ],\n//                 ),\n//               ),\n//             ),\n//           );\n//         },\n//       ),\n//     );\n//   }\n\n//   Widget _buildCard({required Widget child}) {\n//     return Card(\n//       shape: RoundedRectangleBorder(\n//         borderRadius: BorderRadius.circular(15.0),\n//       ),\n//       elevation: 8.0,\n//       shadowColor: Colors.grey[400],\n//       child: Padding(\n//         padding: const EdgeInsets.all(16.0),\n//         child: child,\n//       ),\n//     );\n//   }\n\n//   Widget _buildNonEditableEmailField(\n//       String label, String value, bool isVisible) {\n//     return Column(\n//       crossAxisAlignment: CrossAxisAlignment.start,\n//       children: [\n//         Text(\n//           label,\n//           style: const TextStyle(\n//             fontSize: 16.0,\n//             fontWeight: FontWeight.bold,\n//           ),\n//         ),\n//         const SizedBox(height: 8.0),\n//         TextFormField(\n//           enabled: false,\n//           obscureText: isVisible,\n//           initialValue: value,\n//           decoration: InputDecoration(\n//             border: OutlineInputBorder(\n//               borderRadius: BorderRadius.circular(8.0),\n//             ),\n//           ),\n//         ),\n//         const SizedBox(height: 16.0),\n//       ],\n//     );\n//   }\n// }\n"
        }
    ]
}