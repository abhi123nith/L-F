{
    "sourceFile": "lib/Frontend/Home/home/post_card.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 9,
            "patches": [
                {
                    "date": 1756124266461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1756124418065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import 'package:flutter/material.dart';\n import 'package:carousel_slider/carousel_slider.dart';\n+import 'package:l_f/Frontend/Profile/user_see_page.dart';\n import '../models/post_model.dart'; // Adjust imports\n import '../pages/profile_page.dart'; // Placeholder for your profile page\n \n class PostCard extends StatelessWidget {\n"
                },
                {
                    "date": 1756124423624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import 'package:flutter/material.dart';\n import 'package:carousel_slider/carousel_slider.dart';\n+import 'package:l_f/Frontend/Home/Post/post_model.dart';\n import 'package:l_f/Frontend/Profile/user_see_page.dart';\n import '../models/post_model.dart'; // Adjust imports\n import '../pages/profile_page.dart'; // Placeholder for your profile page\n \n"
                },
                {
                    "date": 1756124428938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,20 +1,24 @@\n+import 'package:carousel_slider/carousel_slider.dart';\n import 'package:flutter/material.dart';\n-import 'package:carousel_slider/carousel_slider.dart';\n import 'package:l_f/Frontend/Home/Post/post_model.dart';\n import 'package:l_f/Frontend/Profile/user_see_page.dart';\n-import '../models/post_model.dart'; // Adjust imports\n-import '../pages/profile_page.dart'; // Placeholder for your profile page\n+// Placeholder for your profile page\n \n class PostCard extends StatelessWidget {\n   final PostModel post;\n   final bool isOwner;\n   final VoidCallback onDelete;\n \n-  const PostCard({super.key, required this.post, required this.isOwner, required this.onDelete});\n-  \n-  final String _placeholderImage = 'https://placehold.co/600x400/EEE/31343C?text=No+Image';\n+  const PostCard(\n+      {super.key,\n+      required this.post,\n+      required this.isOwner,\n+      required this.onDelete});\n \n+  final String _placeholderImage =\n+      'https://placehold.co/600x400/EEE/31343C?text=No+Image';\n+\n   @override\n   Widget build(BuildContext context) {\n     return Card(\n       elevation: 4,\n@@ -24,21 +28,27 @@\n       child: Column(\n         crossAxisAlignment: CrossAxisAlignment.start,\n         children: [\n           ListTile(\n-            onTap: () => Navigator.push(context, MaterialPageRoute(builder: (_) => ProfilePage2(uid: post.postmakerId))),\n+            onTap: () => Navigator.push(\n+                context,\n+                MaterialPageRoute(\n+                    builder: (_) => ProfilePage2(uid: post.postmakerId))),\n             leading: CircleAvatar(\n               radius: 25,\n-              backgroundImage: NetworkImage(post.profileImageUrl.isNotEmpty ? post.profileImageUrl : _placeholderImage),\n+              backgroundImage: NetworkImage(post.profileImageUrl.isNotEmpty\n+                  ? post.profileImageUrl\n+                  : _placeholderImage),\n               onBackgroundImageError: (_, __) {},\n             ),\n-            title: Text(post.userName, style: const TextStyle(fontWeight: FontWeight.bold)),\n+            title: Text(post.userName,\n+                style: const TextStyle(fontWeight: FontWeight.bold)),\n             subtitle: Text(\"at ${post.location}\"),\n             trailing: isOwner\n-                ? IconButton(icon: const Icon(Icons.more_vert), onPressed: onDelete)\n+                ? IconButton(\n+                    icon: const Icon(Icons.more_vert), onPressed: onDelete)\n                 : null,\n           ),\n-          \n           Stack(\n             children: [\n               if (post.itemImages.isNotEmpty)\n                 CarouselSlider(\n@@ -51,54 +61,78 @@\n                     return Image.network(\n                       imageUrl,\n                       fit: BoxFit.cover,\n                       width: double.infinity,\n-                      loadingBuilder: (context, child, progress) => progress == null ? child : const Center(child: CircularProgressIndicator()),\n-                      errorBuilder: (context, error, stackTrace) => Image.network(_placeholderImage, fit: BoxFit.cover),\n+                      loadingBuilder: (context, child, progress) => progress ==\n+                              null\n+                          ? child\n+                          : const Center(child: CircularProgressIndicator()),\n+                      errorBuilder: (context, error, stackTrace) =>\n+                          Image.network(_placeholderImage, fit: BoxFit.cover),\n                     );\n                   }).toList(),\n                 ),\n               Positioned(\n                 top: 12,\n                 left: 12,\n                 child: Container(\n-                  padding: const EdgeInsets.symmetric(horizontal: 10, vertical: 5),\n+                  padding:\n+                      const EdgeInsets.symmetric(horizontal: 10, vertical: 5),\n                   decoration: BoxDecoration(\n-                    color: post.status == 'Lost' ? Colors.red.shade600 : Colors.green.shade600,\n+                    color: post.status == 'Lost'\n+                        ? Colors.red.shade600\n+                        : Colors.green.shade600,\n                     borderRadius: BorderRadius.circular(20),\n                   ),\n-                  child: Text(post.status, style: const TextStyle(color: Colors.white, fontWeight: FontWeight.bold)),\n+                  child: Text(post.status,\n+                      style: const TextStyle(\n+                          color: Colors.white, fontWeight: FontWeight.bold)),\n                 ),\n               ),\n             ],\n           ),\n-\n           Padding(\n             padding: const EdgeInsets.all(16.0),\n             child: Column(\n               crossAxisAlignment: CrossAxisAlignment.start,\n               children: [\n-                Text(post.title, style: Theme.of(context).textTheme.titleLarge?.copyWith(fontWeight: FontWeight.bold)),\n+                Text(post.title,\n+                    style: Theme.of(context)\n+                        .textTheme\n+                        .titleLarge\n+                        ?.copyWith(fontWeight: FontWeight.bold)),\n                 const SizedBox(height: 4),\n-                Text(\"Posted on: ${post.postTime}\", style: Theme.of(context).textTheme.bodySmall),\n+                Text(\"Posted on: ${post.postTime}\",\n+                    style: Theme.of(context).textTheme.bodySmall),\n                 const SizedBox(height: 12),\n-                Text(post.description, maxLines: 3, overflow: TextOverflow.ellipsis),\n+                Text(post.description,\n+                    maxLines: 3, overflow: TextOverflow.ellipsis),\n               ],\n             ),\n           ),\n-          \n           Padding(\n             padding: const EdgeInsets.symmetric(horizontal: 8.0, vertical: 4.0),\n             child: Row(\n               mainAxisAlignment: MainAxisAlignment.spaceAround,\n               children: [\n-                 TextButton.icon(onPressed: () {}, icon: const Icon(Icons.share_outlined), label: const Text('Share')),\n+                TextButton.icon(\n+                    onPressed: () {},\n+                    icon: const Icon(Icons.share_outlined),\n+                    label: const Text('Share')),\n                 if (!isOwner)\n-                TextButton.icon(onPressed: () {}, icon: const Icon(Icons.reply_outlined), label: const Text('Reply')),\n+                  TextButton.icon(\n+                      onPressed: () {},\n+                      icon: const Icon(Icons.reply_outlined),\n+                      label: const Text('Reply')),\n                 if (!isOwner && post.status == 'Found' && !post.isClaimed)\n-                ElevatedButton.icon(onPressed: () {}, icon: const Icon(Icons.check_circle_outline), label: const Text('Claim')),\n+                  ElevatedButton.icon(\n+                      onPressed: () {},\n+                      icon: const Icon(Icons.check_circle_outline),\n+                      label: const Text('Claim')),\n                 if (post.isClaimed)\n-                const Chip(label: Text('Claimed'), avatar: Icon(Icons.verified_user_outlined)),\n+                  const Chip(\n+                      label: Text('Claimed'),\n+                      avatar: Icon(Icons.verified_user_outlined)),\n               ],\n             ),\n           ),\n         ],\n"
                },
                {
                    "date": 1756124528628,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,14 +122,16 @@\n                   TextButton.icon(\n                       onPressed: () {},\n                       icon: const Icon(Icons.reply_outlined),\n                       label: const Text('Reply')),\n-                if (!isOwner && post.status == 'Found' && !post.isClaimed)\n+                // --- FIX #1 IS HERE ---\n+                if (!isOwner && post.status == 'Found' && !(post.isClaimed ?? false))\n                   ElevatedButton.icon(\n                       onPressed: () {},\n                       icon: const Icon(Icons.check_circle_outline),\n                       label: const Text('Claim')),\n-                if (post.isClaimed)\n+                // --- FIX #2 IS HERE ---\n+                if (post.isClaimed ?? false)\n                   const Chip(\n                       label: Text('Claimed'),\n                       avatar: Icon(Icons.verified_user_outlined)),\n               ],\n"
                },
                {
                    "date": 1756124979097,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n import 'package:carousel_slider/carousel_slider.dart';\n import 'package:flutter/material.dart';\n-import 'package:l_f/Frontend/Home/Post/post_model.dart';\n-import 'package:l_f/Frontend/Profile/user_see_page.dart';\n-// Placeholder for your profile page\n+import '../models/post_model.dart'; // Adjust imports\n+import '../pages/profile_page.dart'; // Placeholder for your profile page\n \n class PostCard extends StatelessWidget {\n   final PostModel post;\n   final bool isOwner;\n@@ -24,121 +23,123 @@\n       elevation: 4,\n       margin: const EdgeInsets.symmetric(vertical: 8.0),\n       shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),\n       clipBehavior: Clip.antiAlias,\n-      child: Column(\n-        crossAxisAlignment: CrossAxisAlignment.start,\n-        children: [\n-          ListTile(\n-            onTap: () => Navigator.push(\n-                context,\n-                MaterialPageRoute(\n-                    builder: (_) => ProfilePage2(uid: post.postmakerId))),\n-            leading: CircleAvatar(\n-              radius: 25,\n-              backgroundImage: NetworkImage(post.profileImageUrl.isNotEmpty\n-                  ? post.profileImageUrl\n-                  : _placeholderImage),\n-              onBackgroundImageError: (_, __) {},\n+      // --- FIX IS HERE ---\n+      // Wrap the Column with a SingleChildScrollView to prevent overflow.\n+      child: SingleChildScrollView(\n+        child: Column(\n+          crossAxisAlignment: CrossAxisAlignment.start,\n+          children: [\n+            ListTile(\n+              onTap: () => Navigator.push(\n+                  context,\n+                  MaterialPageRoute(\n+                      builder: (_) => ProfilePage2(uid: post.postmakerId))),\n+              leading: CircleAvatar(\n+                radius: 25,\n+                backgroundImage: NetworkImage(post.profileImageUrl.isNotEmpty\n+                    ? post.profileImageUrl\n+                    : _placeholderImage),\n+                onBackgroundImageError: (_, __) {},\n+              ),\n+              title: Text(post.userName,\n+                  style: const TextStyle(fontWeight: FontWeight.bold)),\n+              subtitle: Text(\"at ${post.location}\"),\n+              trailing: isOwner\n+                  ? IconButton(\n+                      icon: const Icon(Icons.more_vert), onPressed: onDelete)\n+                  : null,\n             ),\n-            title: Text(post.userName,\n-                style: const TextStyle(fontWeight: FontWeight.bold)),\n-            subtitle: Text(\"at ${post.location}\"),\n-            trailing: isOwner\n-                ? IconButton(\n-                    icon: const Icon(Icons.more_vert), onPressed: onDelete)\n-                : null,\n-          ),\n-          Stack(\n-            children: [\n-              if (post.itemImages.isNotEmpty)\n-                CarouselSlider(\n-                  options: CarouselOptions(\n-                    aspectRatio: 16 / 10,\n-                    viewportFraction: 1.0,\n-                    autoPlay: post.itemImages.length > 1,\n+            Stack(\n+              children: [\n+                if (post.itemImages.isNotEmpty)\n+                  CarouselSlider(\n+                    options: CarouselOptions(\n+                      aspectRatio: 16 / 10,\n+                      viewportFraction: 1.0,\n+                      autoPlay: post.itemImages.length > 1,\n+                    ),\n+                    items: post.itemImages.map((imageUrl) {\n+                      return Image.network(\n+                        imageUrl,\n+                        fit: BoxFit.cover,\n+                        width: double.infinity,\n+                        loadingBuilder: (context, child, progress) =>\n+                            progress == null\n+                                ? child\n+                                : const Center(child: CircularProgressIndicator()),\n+                        errorBuilder: (context, error, stackTrace) =>\n+                            Image.network(_placeholderImage, fit: BoxFit.cover),\n+                      );\n+                    }).toList(),\n                   ),\n-                  items: post.itemImages.map((imageUrl) {\n-                    return Image.network(\n-                      imageUrl,\n-                      fit: BoxFit.cover,\n-                      width: double.infinity,\n-                      loadingBuilder: (context, child, progress) => progress ==\n-                              null\n-                          ? child\n-                          : const Center(child: CircularProgressIndicator()),\n-                      errorBuilder: (context, error, stackTrace) =>\n-                          Image.network(_placeholderImage, fit: BoxFit.cover),\n-                    );\n-                  }).toList(),\n-                ),\n-              Positioned(\n-                top: 12,\n-                left: 12,\n-                child: Container(\n-                  padding:\n-                      const EdgeInsets.symmetric(horizontal: 10, vertical: 5),\n-                  decoration: BoxDecoration(\n-                    color: post.status == 'Lost'\n-                        ? Colors.red.shade600\n-                        : Colors.green.shade600,\n-                    borderRadius: BorderRadius.circular(20),\n+                Positioned(\n+                  top: 12,\n+                  left: 12,\n+                  child: Container(\n+                    padding: const EdgeInsets.symmetric(\n+                        horizontal: 10, vertical: 5),\n+                    decoration: BoxDecoration(\n+                      color: post.status == 'Lost'\n+                          ? Colors.red.shade600\n+                          : Colors.green.shade600,\n+                      borderRadius: BorderRadius.circular(20),\n+                    ),\n+                    child: Text(post.status,\n+                        style: const TextStyle(\n+                            color: Colors.white, fontWeight: FontWeight.bold)),\n                   ),\n-                  child: Text(post.status,\n-                      style: const TextStyle(\n-                          color: Colors.white, fontWeight: FontWeight.bold)),\n                 ),\n-              ),\n-            ],\n-          ),\n-          Padding(\n-            padding: const EdgeInsets.all(16.0),\n-            child: Column(\n-              crossAxisAlignment: CrossAxisAlignment.start,\n-              children: [\n-                Text(post.title,\n-                    style: Theme.of(context)\n-                        .textTheme\n-                        .titleLarge\n-                        ?.copyWith(fontWeight: FontWeight.bold)),\n-                const SizedBox(height: 4),\n-                Text(\"Posted on: ${post.postTime}\",\n-                    style: Theme.of(context).textTheme.bodySmall),\n-                const SizedBox(height: 12),\n-                Text(post.description,\n-                    maxLines: 3, overflow: TextOverflow.ellipsis),\n               ],\n             ),\n-          ),\n-          Padding(\n-            padding: const EdgeInsets.symmetric(horizontal: 8.0, vertical: 4.0),\n-            child: Row(\n-              mainAxisAlignment: MainAxisAlignment.spaceAround,\n-              children: [\n-                TextButton.icon(\n-                    onPressed: () {},\n-                    icon: const Icon(Icons.share_outlined),\n-                    label: const Text('Share')),\n-                if (!isOwner)\n+            Padding(\n+              padding: const EdgeInsets.all(16.0),\n+              child: Column(\n+                crossAxisAlignment: CrossAxisAlignment.start,\n+                children: [\n+                  Text(post.title,\n+                      style: Theme.of(context)\n+                          .textTheme\n+                          .titleLarge\n+                          ?.copyWith(fontWeight: FontWeight.bold)),\n+                  const SizedBox(height: 4),\n+                  Text(\"Posted on: ${post.postTime}\",\n+                      style: Theme.of(context).textTheme.bodySmall),\n+                  const SizedBox(height: 12),\n+                  Text(post.description,\n+                      maxLines: 3, overflow: TextOverflow.ellipsis),\n+                ],\n+              ),\n+            ),\n+            Padding(\n+              padding: const EdgeInsets.symmetric(horizontal: 8.0, vertical: 4.0),\n+              child: Row(\n+                mainAxisAlignment: MainAxisAlignment.spaceAround,\n+                children: [\n                   TextButton.icon(\n                       onPressed: () {},\n-                      icon: const Icon(Icons.reply_outlined),\n-                      label: const Text('Reply')),\n-                // --- FIX #1 IS HERE ---\n-                if (!isOwner && post.status == 'Found' && !(post.isClaimed ?? false))\n-                  ElevatedButton.icon(\n-                      onPressed: () {},\n-                      icon: const Icon(Icons.check_circle_outline),\n-                      label: const Text('Claim')),\n-                // --- FIX #2 IS HERE ---\n-                if (post.isClaimed ?? false)\n-                  const Chip(\n-                      label: Text('Claimed'),\n-                      avatar: Icon(Icons.verified_user_outlined)),\n-              ],\n+                      icon: const Icon(Icons.share_outlined),\n+                      label: const Text('Share')),\n+                  if (!isOwner)\n+                    TextButton.icon(\n+                        onPressed: () {},\n+                        icon: const Icon(Icons.reply_outlined),\n+                        label: const Text('Reply')),\n+                  if (!isOwner && post.status == 'Found' && !(post.isClaimed ?? false))\n+                    ElevatedButton.icon(\n+                        onPressed: () {},\n+                        icon: const Icon(Icons.check_circle_outline),\n+                        label: const Text('Claim')),\n+                  if (post.isClaimed ?? false)\n+                    const Chip(\n+                        label: Text('Claimed'),\n+                        avatar: Icon(Icons.verified_user_outlined)),\n+                ],\n+              ),\n             ),\n-          ),\n-        ],\n+          ],\n+        ),\n       ),\n     );\n   }\n }\n"
                },
                {
                    "date": 1756124987639,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import 'package:carousel_slider/carousel_slider.dart';\n import 'package:flutter/material.dart';\n+import 'package:l_f/Frontend/Profile/user_see_page.dart';\n import '../models/post_model.dart'; // Adjust imports\n import '../pages/profile_page.dart'; // Placeholder for your profile page\n \n class PostCard extends StatelessWidget {\n"
                },
                {
                    "date": 1756124993244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,9 @@\n import 'package:carousel_slider/carousel_slider.dart';\n import 'package:flutter/material.dart';\n import 'package:l_f/Frontend/Profile/user_see_page.dart';\n-import '../models/post_model.dart'; // Adjust imports\n-import '../pages/profile_page.dart'; // Placeholder for your profile page\n \n+\n class PostCard extends StatelessWidget {\n   final PostModel post;\n   final bool isOwner;\n   final VoidCallback onDelete;\n"
                },
                {
                    "date": 1756125002781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import 'package:carousel_slider/carousel_slider.dart';\n import 'package:flutter/material.dart';\n+import 'package:l_f/Frontend/Home/Post/post_model.dart';\n import 'package:l_f/Frontend/Profile/user_see_page.dart';\n \n \n class PostCard extends StatelessWidget {\n"
                },
                {
                    "date": 1756125026861,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,146 +1,146 @@\n-import 'package:carousel_slider/carousel_slider.dart';\n-import 'package:flutter/material.dart';\n-import 'package:l_f/Frontend/Home/Post/post_model.dart';\n-import 'package:l_f/Frontend/Profile/user_see_page.dart';\n+// import 'package:carousel_slider/carousel_slider.dart';\n+// import 'package:flutter/material.dart';\n+// import 'package:l_f/Frontend/Home/Post/post_model.dart';\n+// import 'package:l_f/Frontend/Profile/user_see_page.dart';\n \n \n-class PostCard extends StatelessWidget {\n-  final PostModel post;\n-  final bool isOwner;\n-  final VoidCallback onDelete;\n+// class PostCard extends StatelessWidget {\n+//   final PostModel post;\n+//   final bool isOwner;\n+//   final VoidCallback onDelete;\n \n-  const PostCard(\n-      {super.key,\n-      required this.post,\n-      required this.isOwner,\n-      required this.onDelete});\n+//   const PostCard(\n+//       {super.key,\n+//       required this.post,\n+//       required this.isOwner,\n+//       required this.onDelete});\n \n-  final String _placeholderImage =\n-      'https://placehold.co/600x400/EEE/31343C?text=No+Image';\n+//   final String _placeholderImage =\n+//       'https://placehold.co/600x400/EEE/31343C?text=No+Image';\n \n-  @override\n-  Widget build(BuildContext context) {\n-    return Card(\n-      elevation: 4,\n-      margin: const EdgeInsets.symmetric(vertical: 8.0),\n-      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),\n-      clipBehavior: Clip.antiAlias,\n-      // --- FIX IS HERE ---\n-      // Wrap the Column with a SingleChildScrollView to prevent overflow.\n-      child: SingleChildScrollView(\n-        child: Column(\n-          crossAxisAlignment: CrossAxisAlignment.start,\n-          children: [\n-            ListTile(\n-              onTap: () => Navigator.push(\n-                  context,\n-                  MaterialPageRoute(\n-                      builder: (_) => ProfilePage2(uid: post.postmakerId))),\n-              leading: CircleAvatar(\n-                radius: 25,\n-                backgroundImage: NetworkImage(post.profileImageUrl.isNotEmpty\n-                    ? post.profileImageUrl\n-                    : _placeholderImage),\n-                onBackgroundImageError: (_, __) {},\n-              ),\n-              title: Text(post.userName,\n-                  style: const TextStyle(fontWeight: FontWeight.bold)),\n-              subtitle: Text(\"at ${post.location}\"),\n-              trailing: isOwner\n-                  ? IconButton(\n-                      icon: const Icon(Icons.more_vert), onPressed: onDelete)\n-                  : null,\n-            ),\n-            Stack(\n-              children: [\n-                if (post.itemImages.isNotEmpty)\n-                  CarouselSlider(\n-                    options: CarouselOptions(\n-                      aspectRatio: 16 / 10,\n-                      viewportFraction: 1.0,\n-                      autoPlay: post.itemImages.length > 1,\n-                    ),\n-                    items: post.itemImages.map((imageUrl) {\n-                      return Image.network(\n-                        imageUrl,\n-                        fit: BoxFit.cover,\n-                        width: double.infinity,\n-                        loadingBuilder: (context, child, progress) =>\n-                            progress == null\n-                                ? child\n-                                : const Center(child: CircularProgressIndicator()),\n-                        errorBuilder: (context, error, stackTrace) =>\n-                            Image.network(_placeholderImage, fit: BoxFit.cover),\n-                      );\n-                    }).toList(),\n-                  ),\n-                Positioned(\n-                  top: 12,\n-                  left: 12,\n-                  child: Container(\n-                    padding: const EdgeInsets.symmetric(\n-                        horizontal: 10, vertical: 5),\n-                    decoration: BoxDecoration(\n-                      color: post.status == 'Lost'\n-                          ? Colors.red.shade600\n-                          : Colors.green.shade600,\n-                      borderRadius: BorderRadius.circular(20),\n-                    ),\n-                    child: Text(post.status,\n-                        style: const TextStyle(\n-                            color: Colors.white, fontWeight: FontWeight.bold)),\n-                  ),\n-                ),\n-              ],\n-            ),\n-            Padding(\n-              padding: const EdgeInsets.all(16.0),\n-              child: Column(\n-                crossAxisAlignment: CrossAxisAlignment.start,\n-                children: [\n-                  Text(post.title,\n-                      style: Theme.of(context)\n-                          .textTheme\n-                          .titleLarge\n-                          ?.copyWith(fontWeight: FontWeight.bold)),\n-                  const SizedBox(height: 4),\n-                  Text(\"Posted on: ${post.postTime}\",\n-                      style: Theme.of(context).textTheme.bodySmall),\n-                  const SizedBox(height: 12),\n-                  Text(post.description,\n-                      maxLines: 3, overflow: TextOverflow.ellipsis),\n-                ],\n-              ),\n-            ),\n-            Padding(\n-              padding: const EdgeInsets.symmetric(horizontal: 8.0, vertical: 4.0),\n-              child: Row(\n-                mainAxisAlignment: MainAxisAlignment.spaceAround,\n-                children: [\n-                  TextButton.icon(\n-                      onPressed: () {},\n-                      icon: const Icon(Icons.share_outlined),\n-                      label: const Text('Share')),\n-                  if (!isOwner)\n-                    TextButton.icon(\n-                        onPressed: () {},\n-                        icon: const Icon(Icons.reply_outlined),\n-                        label: const Text('Reply')),\n-                  if (!isOwner && post.status == 'Found' && !(post.isClaimed ?? false))\n-                    ElevatedButton.icon(\n-                        onPressed: () {},\n-                        icon: const Icon(Icons.check_circle_outline),\n-                        label: const Text('Claim')),\n-                  if (post.isClaimed ?? false)\n-                    const Chip(\n-                        label: Text('Claimed'),\n-                        avatar: Icon(Icons.verified_user_outlined)),\n-                ],\n-              ),\n-            ),\n-          ],\n-        ),\n-      ),\n-    );\n-  }\n-}\n+//   @override\n+//   Widget build(BuildContext context) {\n+//     return Card(\n+//       elevation: 4,\n+//       margin: const EdgeInsets.symmetric(vertical: 8.0),\n+//       shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),\n+//       clipBehavior: Clip.antiAlias,\n+//       // --- FIX IS HERE ---\n+//       // Wrap the Column with a SingleChildScrollView to prevent overflow.\n+//       child: SingleChildScrollView(\n+//         child: Column(\n+//           crossAxisAlignment: CrossAxisAlignment.start,\n+//           children: [\n+//             ListTile(\n+//               onTap: () => Navigator.push(\n+//                   context,\n+//                   MaterialPageRoute(\n+//                       builder: (_) => ProfilePage2(uid: post.postmakerId))),\n+//               leading: CircleAvatar(\n+//                 radius: 25,\n+//                 backgroundImage: NetworkImage(post.profileImageUrl.isNotEmpty\n+//                     ? post.profileImageUrl\n+//                     : _placeholderImage),\n+//                 onBackgroundImageError: (_, __) {},\n+//               ),\n+//               title: Text(post.userName,\n+//                   style: const TextStyle(fontWeight: FontWeight.bold)),\n+//               subtitle: Text(\"at ${post.location}\"),\n+//               trailing: isOwner\n+//                   ? IconButton(\n+//                       icon: const Icon(Icons.more_vert), onPressed: onDelete)\n+//                   : null,\n+//             ),\n+//             Stack(\n+//               children: [\n+//                 if (post.itemImages.isNotEmpty)\n+//                   CarouselSlider(\n+//                     options: CarouselOptions(\n+//                       aspectRatio: 16 / 10,\n+//                       viewportFraction: 1.0,\n+//                       autoPlay: post.itemImages.length > 1,\n+//                     ),\n+//                     items: post.itemImages.map((imageUrl) {\n+//                       return Image.network(\n+//                         imageUrl,\n+//                         fit: BoxFit.cover,\n+//                         width: double.infinity,\n+//                         loadingBuilder: (context, child, progress) =>\n+//                             progress == null\n+//                                 ? child\n+//                                 : const Center(child: CircularProgressIndicator()),\n+//                         errorBuilder: (context, error, stackTrace) =>\n+//                             Image.network(_placeholderImage, fit: BoxFit.cover),\n+//                       );\n+//                     }).toList(),\n+//                   ),\n+//                 Positioned(\n+//                   top: 12,\n+//                   left: 12,\n+//                   child: Container(\n+//                     padding: const EdgeInsets.symmetric(\n+//                         horizontal: 10, vertical: 5),\n+//                     decoration: BoxDecoration(\n+//                       color: post.status == 'Lost'\n+//                           ? Colors.red.shade600\n+//                           : Colors.green.shade600,\n+//                       borderRadius: BorderRadius.circular(20),\n+//                     ),\n+//                     child: Text(post.status,\n+//                         style: const TextStyle(\n+//                             color: Colors.white, fontWeight: FontWeight.bold)),\n+//                   ),\n+//                 ),\n+//               ],\n+//             ),\n+//             Padding(\n+//               padding: const EdgeInsets.all(16.0),\n+//               child: Column(\n+//                 crossAxisAlignment: CrossAxisAlignment.start,\n+//                 children: [\n+//                   Text(post.title,\n+//                       style: Theme.of(context)\n+//                           .textTheme\n+//                           .titleLarge\n+//                           ?.copyWith(fontWeight: FontWeight.bold)),\n+//                   const SizedBox(height: 4),\n+//                   Text(\"Posted on: ${post.postTime}\",\n+//                       style: Theme.of(context).textTheme.bodySmall),\n+//                   const SizedBox(height: 12),\n+//                   Text(post.description,\n+//                       maxLines: 3, overflow: TextOverflow.ellipsis),\n+//                 ],\n+//               ),\n+//             ),\n+//             Padding(\n+//               padding: const EdgeInsets.symmetric(horizontal: 8.0, vertical: 4.0),\n+//               child: Row(\n+//                 mainAxisAlignment: MainAxisAlignment.spaceAround,\n+//                 children: [\n+//                   TextButton.icon(\n+//                       onPressed: () {},\n+//                       icon: const Icon(Icons.share_outlined),\n+//                       label: const Text('Share')),\n+//                   if (!isOwner)\n+//                     TextButton.icon(\n+//                         onPressed: () {},\n+//                         icon: const Icon(Icons.reply_outlined),\n+//                         label: const Text('Reply')),\n+//                   if (!isOwner && post.status == 'Found' && !(post.isClaimed ?? false))\n+//                     ElevatedButton.icon(\n+//                         onPressed: () {},\n+//                         icon: const Icon(Icons.check_circle_outline),\n+//                         label: const Text('Claim')),\n+//                   if (post.isClaimed ?? false)\n+//                     const Chip(\n+//                         label: Text('Claimed'),\n+//                         avatar: Icon(Icons.verified_user_outlined)),\n+//                 ],\n+//               ),\n+//             ),\n+//           ],\n+//         ),\n+//       ),\n+//     );\n+//   }\n+// }\n"
                }
            ],
            "date": 1756124266461,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\nimport 'package:carousel_slider/carousel_slider.dart';\nimport '../models/post_model.dart'; // Adjust imports\nimport '../pages/profile_page.dart'; // Placeholder for your profile page\n\nclass PostCard extends StatelessWidget {\n  final PostModel post;\n  final bool isOwner;\n  final VoidCallback onDelete;\n\n  const PostCard({super.key, required this.post, required this.isOwner, required this.onDelete});\n  \n  final String _placeholderImage = 'https://placehold.co/600x400/EEE/31343C?text=No+Image';\n\n  @override\n  Widget build(BuildContext context) {\n    return Card(\n      elevation: 4,\n      margin: const EdgeInsets.symmetric(vertical: 8.0),\n      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),\n      clipBehavior: Clip.antiAlias,\n      child: Column(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          ListTile(\n            onTap: () => Navigator.push(context, MaterialPageRoute(builder: (_) => ProfilePage2(uid: post.postmakerId))),\n            leading: CircleAvatar(\n              radius: 25,\n              backgroundImage: NetworkImage(post.profileImageUrl.isNotEmpty ? post.profileImageUrl : _placeholderImage),\n              onBackgroundImageError: (_, __) {},\n            ),\n            title: Text(post.userName, style: const TextStyle(fontWeight: FontWeight.bold)),\n            subtitle: Text(\"at ${post.location}\"),\n            trailing: isOwner\n                ? IconButton(icon: const Icon(Icons.more_vert), onPressed: onDelete)\n                : null,\n          ),\n          \n          Stack(\n            children: [\n              if (post.itemImages.isNotEmpty)\n                CarouselSlider(\n                  options: CarouselOptions(\n                    aspectRatio: 16 / 10,\n                    viewportFraction: 1.0,\n                    autoPlay: post.itemImages.length > 1,\n                  ),\n                  items: post.itemImages.map((imageUrl) {\n                    return Image.network(\n                      imageUrl,\n                      fit: BoxFit.cover,\n                      width: double.infinity,\n                      loadingBuilder: (context, child, progress) => progress == null ? child : const Center(child: CircularProgressIndicator()),\n                      errorBuilder: (context, error, stackTrace) => Image.network(_placeholderImage, fit: BoxFit.cover),\n                    );\n                  }).toList(),\n                ),\n              Positioned(\n                top: 12,\n                left: 12,\n                child: Container(\n                  padding: const EdgeInsets.symmetric(horizontal: 10, vertical: 5),\n                  decoration: BoxDecoration(\n                    color: post.status == 'Lost' ? Colors.red.shade600 : Colors.green.shade600,\n                    borderRadius: BorderRadius.circular(20),\n                  ),\n                  child: Text(post.status, style: const TextStyle(color: Colors.white, fontWeight: FontWeight.bold)),\n                ),\n              ),\n            ],\n          ),\n\n          Padding(\n            padding: const EdgeInsets.all(16.0),\n            child: Column(\n              crossAxisAlignment: CrossAxisAlignment.start,\n              children: [\n                Text(post.title, style: Theme.of(context).textTheme.titleLarge?.copyWith(fontWeight: FontWeight.bold)),\n                const SizedBox(height: 4),\n                Text(\"Posted on: ${post.postTime}\", style: Theme.of(context).textTheme.bodySmall),\n                const SizedBox(height: 12),\n                Text(post.description, maxLines: 3, overflow: TextOverflow.ellipsis),\n              ],\n            ),\n          ),\n          \n          Padding(\n            padding: const EdgeInsets.symmetric(horizontal: 8.0, vertical: 4.0),\n            child: Row(\n              mainAxisAlignment: MainAxisAlignment.spaceAround,\n              children: [\n                 TextButton.icon(onPressed: () {}, icon: const Icon(Icons.share_outlined), label: const Text('Share')),\n                if (!isOwner)\n                TextButton.icon(onPressed: () {}, icon: const Icon(Icons.reply_outlined), label: const Text('Reply')),\n                if (!isOwner && post.status == 'Found' && !post.isClaimed)\n                ElevatedButton.icon(onPressed: () {}, icon: const Icon(Icons.check_circle_outline), label: const Text('Claim')),\n                if (post.isClaimed)\n                const Chip(label: Text('Claimed'), avatar: Icon(Icons.verified_user_outlined)),\n              ],\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n"
        }
    ]
}