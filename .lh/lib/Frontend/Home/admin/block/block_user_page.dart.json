{
    "sourceFile": "lib/Frontend/Home/admin/block/block_user_page.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1756127648045,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1756127724039,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import 'package:flutter/material.dart';\n import 'package:cloud_firestore/cloud_firestore.dart';\n+import 'package:l_f/Frontend/Profile/user_see_page.dart'; // Import the profile page\n \n class BlockedUsersPage extends StatelessWidget {\n   const BlockedUsersPage({super.key});\n \n@@ -24,8 +25,18 @@\n       );\n     }\n   }\n \n+  // --- NEW: Method to navigate to the user's profile ---\n+  void _viewUserProfile(BuildContext context, String userId) {\n+    Navigator.push(\n+      context,\n+      MaterialPageRoute(\n+        builder: (context) => ProfilePage2(uid: userId),\n+      ),\n+    );\n+  }\n+\n   @override\n   Widget build(BuildContext context) {\n     return Scaffold(\n       appBar: AppBar(\n@@ -65,9 +76,11 @@\n \n               return Card(\n                 margin: const EdgeInsets.symmetric(horizontal: 12, vertical: 6),\n                 elevation: 3,\n+                // --- CHANGE IS HERE: The ListTile is now tappable ---\n                 child: ListTile(\n+                  onTap: () => _viewUserProfile(context, userDoc.id),\n                   leading: CircleAvatar(\n                     radius: 25,\n                     backgroundColor: Colors.grey.shade300,\n                     backgroundImage: profileImageUrl.isNotEmpty ? NetworkImage(profileImageUrl) : null,\n"
                }
            ],
            "date": 1756127648045,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\nimport 'package:cloud_firestore/cloud_firestore.dart';\n\nclass BlockedUsersPage extends StatelessWidget {\n  const BlockedUsersPage({super.key});\n\n  Future<void> _unblockUser(BuildContext context, String userId) async {\n    try {\n      await FirebaseFirestore.instance.collection('users').doc(userId).update({\n        'warningCount': 1, // Reset warning count to 1 instead of 0\n      });\n      ScaffoldMessenger.of(context).showSnackBar(\n        const SnackBar(\n          content: Text(\"User has been unblocked.\"),\n          backgroundColor: Colors.green,\n        ),\n      );\n    } catch (e) {\n      ScaffoldMessenger.of(context).showSnackBar(\n        SnackBar(\n          content: Text(\"Error unblocking user: $e\"),\n          backgroundColor: Colors.red,\n        ),\n      );\n    }\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: const Text(\"Admin - Blocked Users\"),\n        backgroundColor: Colors.deepOrange,\n        foregroundColor: Colors.white,\n      ),\n      body: StreamBuilder<QuerySnapshot>(\n        stream: FirebaseFirestore.instance\n            .collection('users')\n            .where('warningCount', isGreaterThanOrEqualTo: 2)\n            .snapshots(),\n        builder: (context, snapshot) {\n          if (snapshot.connectionState == ConnectionState.waiting) {\n            return const Center(child: CircularProgressIndicator());\n          }\n          if (snapshot.hasError) {\n            return Center(child: Text(\"Error: ${snapshot.error}\"));\n          }\n          if (!snapshot.hasData || snapshot.data!.docs.isEmpty) {\n            return const Center(\n              child: Text(\n                \"No users are currently blocked. âœ…\",\n                style: TextStyle(fontSize: 18, color: Colors.grey),\n              ),\n            );\n          }\n\n          final blockedUsers = snapshot.data!.docs;\n\n          return ListView.builder(\n            itemCount: blockedUsers.length,\n            itemBuilder: (context, index) {\n              final userDoc = blockedUsers[index];\n              final userData = userDoc.data() as Map<String, dynamic>;\n              final profileImageUrl = userData['profileImage'] ?? '';\n\n              return Card(\n                margin: const EdgeInsets.symmetric(horizontal: 12, vertical: 6),\n                elevation: 3,\n                child: ListTile(\n                  leading: CircleAvatar(\n                    radius: 25,\n                    backgroundColor: Colors.grey.shade300,\n                    backgroundImage: profileImageUrl.isNotEmpty ? NetworkImage(profileImageUrl) : null,\n                    child: profileImageUrl.isEmpty ? const Icon(Icons.person, color: Colors.grey) : null,\n                  ),\n                  title: Text(userData['name'] ?? 'No Name', style: const TextStyle(fontWeight: FontWeight.bold)),\n                  subtitle: Text(userData['email'] ?? 'No Email'),\n                  trailing: ElevatedButton(\n                    onPressed: () => _unblockUser(context, userDoc.id),\n                    style: ElevatedButton.styleFrom(backgroundColor: Colors.blue),\n                    child: const Text('Unblock'),\n                  ),\n                ),\n              );\n            },\n          );\n        },\n      ),\n    );\n  }\n}\n"
        }
    ]
}