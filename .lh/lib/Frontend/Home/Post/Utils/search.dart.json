{
    "sourceFile": "lib/Frontend/Home/Post/Utils/search.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1756119015815,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1756122837723,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,89 +1,89 @@\n-// import 'package:flutter/material.dart';\n+import 'package:flutter/material.dart';\n \n-// class SearchFilterWidget extends StatefulWidget {\n-//   final Function(String status, String location, DateTime? uploadDate, String title) onSearch;\n+class SearchFilterWidget extends StatefulWidget {\n+  final Function(String status, String location, DateTime? uploadDate, String title) onSearch;\n \n-//   const SearchFilterWidget({super.key, required this.onSearch});\n+  const SearchFilterWidget({super.key, required this.onSearch});\n \n-//   @override\n-//   _SearchFilterWidgetState createState() => _SearchFilterWidgetState();\n-// }\n+  @override\n+  _SearchFilterWidgetState createState() => _SearchFilterWidgetState();\n+}\n \n-// class _SearchFilterWidgetState extends State<SearchFilterWidget> {\n-//   String _selectedStatus = 'Lost'; // Initial value for status\n-//   String _location = '';\n-//   DateTime? _selectedDate;\n-//   String _title = '';\n+class _SearchFilterWidgetState extends State<SearchFilterWidget> {\n+  String _selectedStatus = 'Lost'; // Initial value for status\n+  String _location = '';\n+  DateTime? _selectedDate;\n+  String _title = '';\n \n-//   void _selectDate(BuildContext context) async {\n-//     final DateTime? picked = await showDatePicker(\n-//       context: context,\n-//       initialDate: DateTime.now(),\n-//       firstDate: DateTime(2020),\n-//       lastDate: DateTime.now(),\n-//     );\n-//     if (picked != null && picked != _selectedDate) {\n-//       setState(() {\n-//         _selectedDate = picked;\n-//       });\n-//     }\n-//   }\n+  void _selectDate(BuildContext context) async {\n+    final DateTime? picked = await showDatePicker(\n+      context: context,\n+      initialDate: DateTime.now(),\n+      firstDate: DateTime(2020),\n+      lastDate: DateTime.now(),\n+    );\n+    if (picked != null && picked != _selectedDate) {\n+      setState(() {\n+        _selectedDate = picked;\n+      });\n+    }\n+  }\n \n-//   @override\n-//   Widget build(BuildContext context) {\n-//     return Column(\n-//       children: [\n-//         // Status dropdown (Lost/Found)\n-//         DropdownButton<String>(\n-//           value: _selectedStatus,\n-//           items: ['Lost', 'Found'].map((String value) {\n-//             return DropdownMenuItem<String>(\n-//               value: value,\n-//               child: Text(value),\n-//             );\n-//           }).toList(),\n-//           onChanged: (newValue) {\n-//             setState(() {\n-//               _selectedStatus = newValue!;\n-//             });\n-//           },\n-//         ),\n-//         // Location input\n-//         TextField(\n-//           decoration: const InputDecoration(labelText: 'Location'),\n-//           onChanged: (value) {\n-//             setState(() {\n-//               _location = value;\n-//             });\n-//           },\n-//         ),\n-//         // Date picker for upload date\n-//         Row(\n-//           children: [\n-//             Text(_selectedDate == null ? 'Select Date' : _selectedDate!.toLocal().toString().split(' ')[0]),\n-//             IconButton(\n-//               onPressed: () => _selectDate(context),\n-//               icon: const Icon(Icons.calendar_today),\n-//             ),\n-//           ],\n-//         ),\n-//         // Item title input\n-//         TextField(\n-//           decoration: const InputDecoration(labelText: 'Item Title'),\n-//           onChanged: (value) {\n-//             setState(() {\n-//               _title = value;\n-//             });\n-//           },\n-//         ),\n-//         // Search button\n-//         ElevatedButton(\n-//           onPressed: () {\n-//             widget.onSearch(_selectedStatus, _location, _selectedDate, _title);\n-//           },\n-//           child: const Text('Search'),\n-//         ),\n-//       ],\n-//     );\n-//   }\n-// }\n+  @override\n+  Widget build(BuildContext context) {\n+    return Column(\n+      children: [\n+        // Status dropdown (Lost/Found)\n+        DropdownButton<String>(\n+          value: _selectedStatus,\n+          items: ['Lost', 'Found'].map((String value) {\n+            return DropdownMenuItem<String>(\n+              value: value,\n+              child: Text(value),\n+            );\n+          }).toList(),\n+          onChanged: (newValue) {\n+            setState(() {\n+              _selectedStatus = newValue!;\n+            });\n+          },\n+        ),\n+        // Location input\n+        TextField(\n+          decoration: const InputDecoration(labelText: 'Location'),\n+          onChanged: (value) {\n+            setState(() {\n+              _location = value;\n+            });\n+          },\n+        ),\n+        // Date picker for upload date\n+        Row(\n+          children: [\n+            Text(_selectedDate == null ? 'Select Date' : _selectedDate!.toLocal().toString().split(' ')[0]),\n+            IconButton(\n+              onPressed: () => _selectDate(context),\n+              icon: const Icon(Icons.calendar_today),\n+            ),\n+          ],\n+        ),\n+        // Item title input\n+        TextField(\n+          decoration: const InputDecoration(labelText: 'Item Title'),\n+          onChanged: (value) {\n+            setState(() {\n+              _title = value;\n+            });\n+          },\n+        ),\n+        // Search button\n+        ElevatedButton(\n+          onPressed: () {\n+            widget.onSearch(_selectedStatus, _location, _selectedDate, _title);\n+          },\n+          child: const Text('Search'),\n+        ),\n+      ],\n+    );\n+  }\n+}\n"
                }
            ],
            "date": 1756119015815,
            "name": "Commit-0",
            "content": "// import 'package:flutter/material.dart';\n\n// class SearchFilterWidget extends StatefulWidget {\n//   final Function(String status, String location, DateTime? uploadDate, String title) onSearch;\n\n//   const SearchFilterWidget({super.key, required this.onSearch});\n\n//   @override\n//   _SearchFilterWidgetState createState() => _SearchFilterWidgetState();\n// }\n\n// class _SearchFilterWidgetState extends State<SearchFilterWidget> {\n//   String _selectedStatus = 'Lost'; // Initial value for status\n//   String _location = '';\n//   DateTime? _selectedDate;\n//   String _title = '';\n\n//   void _selectDate(BuildContext context) async {\n//     final DateTime? picked = await showDatePicker(\n//       context: context,\n//       initialDate: DateTime.now(),\n//       firstDate: DateTime(2020),\n//       lastDate: DateTime.now(),\n//     );\n//     if (picked != null && picked != _selectedDate) {\n//       setState(() {\n//         _selectedDate = picked;\n//       });\n//     }\n//   }\n\n//   @override\n//   Widget build(BuildContext context) {\n//     return Column(\n//       children: [\n//         // Status dropdown (Lost/Found)\n//         DropdownButton<String>(\n//           value: _selectedStatus,\n//           items: ['Lost', 'Found'].map((String value) {\n//             return DropdownMenuItem<String>(\n//               value: value,\n//               child: Text(value),\n//             );\n//           }).toList(),\n//           onChanged: (newValue) {\n//             setState(() {\n//               _selectedStatus = newValue!;\n//             });\n//           },\n//         ),\n//         // Location input\n//         TextField(\n//           decoration: const InputDecoration(labelText: 'Location'),\n//           onChanged: (value) {\n//             setState(() {\n//               _location = value;\n//             });\n//           },\n//         ),\n//         // Date picker for upload date\n//         Row(\n//           children: [\n//             Text(_selectedDate == null ? 'Select Date' : _selectedDate!.toLocal().toString().split(' ')[0]),\n//             IconButton(\n//               onPressed: () => _selectDate(context),\n//               icon: const Icon(Icons.calendar_today),\n//             ),\n//           ],\n//         ),\n//         // Item title input\n//         TextField(\n//           decoration: const InputDecoration(labelText: 'Item Title'),\n//           onChanged: (value) {\n//             setState(() {\n//               _title = value;\n//             });\n//           },\n//         ),\n//         // Search button\n//         ElevatedButton(\n//           onPressed: () {\n//             widget.onSearch(_selectedStatus, _location, _selectedDate, _title);\n//           },\n//           child: const Text('Search'),\n//         ),\n//       ],\n//     );\n//   }\n// }\n"
        }
    ]
}