{
    "sourceFile": "lib/Frontend/Home/Post/Utils/dialog_boxes.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1756118748554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1756122830028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,93 +1,93 @@\n-// import 'package:cloud_firestore/cloud_firestore.dart';\n-// import 'package:flutter/material.dart';\n-// import 'package:l_f/Frontend/Home/Post/post_model.dart';\n+import 'package:cloud_firestore/cloud_firestore.dart';\n+import 'package:flutter/material.dart';\n+import 'package:l_f/Frontend/Home/Post/post_model.dart';\n \n-// class DialogBox {\n-//   void showFullImageDialog(BuildContext context, String imageUrl) {\n-//     showDialog(\n-//       context: context,\n-//       builder: (BuildContext context) {\n-//         return Dialog(\n-//           child: Stack(\n-//             children: [\n-//               Image.network(imageUrl),\n-//               Positioned(\n-//                 right: 10,\n-//                 top: 10,\n-//                 child: IconButton(\n-//                   icon: const Icon(Icons.cancel, color: Colors.red),\n-//                   onPressed: () {\n-//                     Navigator.of(context).pop();\n-//                   },\n-//                 ),\n-//               ),\n-//             ],\n-//           ),\n-//         );\n-//       },\n-//     );\n-//   }\n-//   Future<void> deletePost(BuildContext context, String postId) async {\n-//     try {\n-//       await FirebaseFirestore.instance.collection('posts').doc(postId).delete();\n-//       ScaffoldMessenger.of(context).showSnackBar(\n-//         const SnackBar(\n-//           backgroundColor: Colors.green,\n-//           content: Text('Post deleted successfully'),\n-//           behavior: SnackBarBehavior.floating,\n-//           margin: EdgeInsets.all(16.0),\n-//           duration: Duration(seconds: 2),\n-//         ),\n-//       );\n-//     } catch (e) {\n-//       ScaffoldMessenger.of(context).showSnackBar(\n-//         SnackBar(\n-//             backgroundColor: Colors.red,\n-//             content: Text('Failed to delete post: $e')),\n-//       );\n-//     }\n-//   }\n+class DialogBox {\n+  void showFullImageDialog(BuildContext context, String imageUrl) {\n+    showDialog(\n+      context: context,\n+      builder: (BuildContext context) {\n+        return Dialog(\n+          child: Stack(\n+            children: [\n+              Image.network(imageUrl),\n+              Positioned(\n+                right: 10,\n+                top: 10,\n+                child: IconButton(\n+                  icon: const Icon(Icons.cancel, color: Colors.red),\n+                  onPressed: () {\n+                    Navigator.of(context).pop();\n+                  },\n+                ),\n+              ),\n+            ],\n+          ),\n+        );\n+      },\n+    );\n+  }\n+  Future<void> deletePost(BuildContext context, String postId) async {\n+    try {\n+      await FirebaseFirestore.instance.collection('posts').doc(postId).delete();\n+      ScaffoldMessenger.of(context).showSnackBar(\n+        const SnackBar(\n+          backgroundColor: Colors.green,\n+          content: Text('Post deleted successfully'),\n+          behavior: SnackBarBehavior.floating,\n+          margin: EdgeInsets.all(16.0),\n+          duration: Duration(seconds: 2),\n+        ),\n+      );\n+    } catch (e) {\n+      ScaffoldMessenger.of(context).showSnackBar(\n+        SnackBar(\n+            backgroundColor: Colors.red,\n\\ No newline at end of file\n+            content: Text('Failed to delete post: $e')),\n+      );\n+    }\n+  }\n \n-//   void showDeleteConfirmation(BuildContext context, PostModel post) {\n-//     // postId = post.postId;\n-//     showDialog(\n-//       context: context,\n-//       builder: (BuildContext context) {\n-//         return AlertDialog(\n-//           title: const Text('Delete Post'),\n-//           content: const Text(\n-//             'Are you sure you want to delete this post?',\n-//             style: TextStyle(fontWeight: FontWeight.w700),\n-//           ),\n-//           actions: [\n-//             TextButton(\n-//               onPressed: () async {\n-//                 // Call your delete functionality here\n-//                 ScaffoldMessenger.of(context).showSnackBar(\n-//                   const SnackBar(\n-//                       backgroundColor: Colors.deepOrange,\n-//                       content: Text('Post deleted successfully')),\n-//                 );\n+  void showDeleteConfirmation(BuildContext context, PostModel post) {\n+    // postId = post.postId;\n+    showDialog(\n+      context: context,\n+      builder: (BuildContext context) {\n+        return AlertDialog(\n+          title: const Text('Delete Post'),\n+          content: const Text(\n+            'Are you sure you want to delete this post?',\n+            style: TextStyle(fontWeight: FontWeight.w700),\n+          ),\n+          actions: [\n+            TextButton(\n+              onPressed: () async {\n+                // Call your delete functionality here\n+                ScaffoldMessenger.of(context).showSnackBar(\n+                  const SnackBar(\n+                      backgroundColor: Colors.deepOrange,\n+                      content: Text('Post deleted successfully')),\n+                );\n \n-//                 await deletePost(context, post.postId);\n+                await deletePost(context, post.postId);\n \n-//                 Navigator.of(context).pop();\n-//               },\n-//               child: const Text(\n-//                 'Yes',\n-//                 style: TextStyle(fontWeight: FontWeight.bold),\n-//               ),\n-//             ),\n-//             TextButton(\n-//               onPressed: () => Navigator.of(context).pop(),\n-//               child: const Text(\n-//                 'No',\n-//                 style: TextStyle(fontWeight: FontWeight.bold),\n-//               ),\n-//             ),\n-//           ],\n-//         );\n-//       },\n-//     );\n-//   }\n-// }\n+                Navigator.of(context).pop();\n+              },\n+              child: const Text(\n+                'Yes',\n+                style: TextStyle(fontWeight: FontWeight.bold),\n+              ),\n+            ),\n+            TextButton(\n+              onPressed: () => Navigator.of(context).pop(),\n+              child: const Text(\n+                'No',\n+                style: TextStyle(fontWeight: FontWeight.bold),\n+              ),\n+            ),\n+          ],\n+        );\n+      },\n+    );\n+  }\n+}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1756118748554,
            "name": "Commit-0",
            "content": "// import 'package:cloud_firestore/cloud_firestore.dart';\n// import 'package:flutter/material.dart';\n// import 'package:l_f/Frontend/Home/Post/post_model.dart';\n\n// class DialogBox {\n//   void showFullImageDialog(BuildContext context, String imageUrl) {\n//     showDialog(\n//       context: context,\n//       builder: (BuildContext context) {\n//         return Dialog(\n//           child: Stack(\n//             children: [\n//               Image.network(imageUrl),\n//               Positioned(\n//                 right: 10,\n//                 top: 10,\n//                 child: IconButton(\n//                   icon: const Icon(Icons.cancel, color: Colors.red),\n//                   onPressed: () {\n//                     Navigator.of(context).pop();\n//                   },\n//                 ),\n//               ),\n//             ],\n//           ),\n//         );\n//       },\n//     );\n//   }\n//   Future<void> deletePost(BuildContext context, String postId) async {\n//     try {\n//       await FirebaseFirestore.instance.collection('posts').doc(postId).delete();\n//       ScaffoldMessenger.of(context).showSnackBar(\n//         const SnackBar(\n//           backgroundColor: Colors.green,\n//           content: Text('Post deleted successfully'),\n//           behavior: SnackBarBehavior.floating,\n//           margin: EdgeInsets.all(16.0),\n//           duration: Duration(seconds: 2),\n//         ),\n//       );\n//     } catch (e) {\n//       ScaffoldMessenger.of(context).showSnackBar(\n//         SnackBar(\n//             backgroundColor: Colors.red,\n//             content: Text('Failed to delete post: $e')),\n//       );\n//     }\n//   }\n\n//   void showDeleteConfirmation(BuildContext context, PostModel post) {\n//     // postId = post.postId;\n//     showDialog(\n//       context: context,\n//       builder: (BuildContext context) {\n//         return AlertDialog(\n//           title: const Text('Delete Post'),\n//           content: const Text(\n//             'Are you sure you want to delete this post?',\n//             style: TextStyle(fontWeight: FontWeight.w700),\n//           ),\n//           actions: [\n//             TextButton(\n//               onPressed: () async {\n//                 // Call your delete functionality here\n//                 ScaffoldMessenger.of(context).showSnackBar(\n//                   const SnackBar(\n//                       backgroundColor: Colors.deepOrange,\n//                       content: Text('Post deleted successfully')),\n//                 );\n\n//                 await deletePost(context, post.postId);\n\n//                 Navigator.of(context).pop();\n//               },\n//               child: const Text(\n//                 'Yes',\n//                 style: TextStyle(fontWeight: FontWeight.bold),\n//               ),\n//             ),\n//             TextButton(\n//               onPressed: () => Navigator.of(context).pop(),\n//               child: const Text(\n//                 'No',\n//                 style: TextStyle(fontWeight: FontWeight.bold),\n//               ),\n//             ),\n//           ],\n//         );\n//       },\n//     );\n//   }\n// }"
        }
    ]
}