{
    "sourceFile": "lib/Backend/Reset_Password/reset_password.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1756118462783,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1756122794160,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,119 +1,119 @@\n-// import 'package:firebase_auth/firebase_auth.dart';\n-// import 'package:flutter/material.dart';\n+import 'package:firebase_auth/firebase_auth.dart';\n+import 'package:flutter/material.dart';\n \n-// class ResetPasswordPage extends StatefulWidget {\n-//   const ResetPasswordPage({super.key});\n+class ResetPasswordPage extends StatefulWidget {\n+  const ResetPasswordPage({super.key});\n \n-//   @override\n-//   _ResetPasswordPageState createState() => _ResetPasswordPageState();\n-// }\n+  @override\n+  _ResetPasswordPageState createState() => _ResetPasswordPageState();\n+}\n \n-// class _ResetPasswordPageState extends State<ResetPasswordPage> {\n-//   final FirebaseAuth _auth = FirebaseAuth.instance;\n-//   final TextEditingController _emailController = TextEditingController();\n-//   final _formKey = GlobalKey<FormState>();\n-//   bool _isLoading = false;\n+class _ResetPasswordPageState extends State<ResetPasswordPage> {\n+  final FirebaseAuth _auth = FirebaseAuth.instance;\n+  final TextEditingController _emailController = TextEditingController();\n+  final _formKey = GlobalKey<FormState>();\n+  bool _isLoading = false;\n \n-//   Future<void> _resetPassword() async {\n-//     if (_formKey.currentState!.validate()) {\n-//       setState(() {\n-//         _isLoading = true;\n-//       });\n+  Future<void> _resetPassword() async {\n+    if (_formKey.currentState!.validate()) {\n+      setState(() {\n+        _isLoading = true;\n+      });\n \n-//       try {\n-//         await _auth.sendPasswordResetEmail(email: _emailController.text.trim());\n+      try {\n+        await _auth.sendPasswordResetEmail(email: _emailController.text.trim());\n \n-//         ScaffoldMessenger.of(context).showSnackBar(\n-//           const SnackBar(\n-//             content: Text('Password reset email sent. Check your inbox.'),\n-//             backgroundColor: Colors.deepOrange,\n-//             duration: Duration(seconds: 5),\n-//           ),\n-//         );\n-//       } on FirebaseAuthException catch (e) {\n-//         ScaffoldMessenger.of(context).showSnackBar(\n-//           SnackBar(content: Text('Error: ${e.message}')),\n-//         );\n-//       } finally {\n-//         setState(() {\n-//           _isLoading = false;\n-//         });\n-//       }\n-//     }\n-//   }\n+        ScaffoldMessenger.of(context).showSnackBar(\n+          const SnackBar(\n+            content: Text('Password reset email sent. Check your inbox.'),\n+            backgroundColor: Colors.deepOrange,\n+            duration: Duration(seconds: 5),\n+          ),\n+        );\n+      } on FirebaseAuthException catch (e) {\n+        ScaffoldMessenger.of(context).showSnackBar(\n+          SnackBar(content: Text('Error: ${e.message}')),\n+        );\n+      } finally {\n+        setState(() {\n+          _isLoading = false;\n+        });\n+      }\n+    }\n+  }\n \n-//   @override\n-//   Widget build(BuildContext context) {\n-//     bool isMobile = MediaQuery.of(context).size.width < 830;\n-//     Size size = MediaQuery.of(context).size;\n-//     return Scaffold(\n-//       appBar: AppBar(\n-//         title: const Text('Reset Password'),\n-//         backgroundColor: Colors.deepOrange,\n-//         foregroundColor: Colors.white,\n-//       ),\n-//       body: _isLoading\n-//           ? const Center(child: CircularProgressIndicator())\n-//           : Padding(\n-//               padding: const EdgeInsets.all(16.0),\n-//               child: Form(\n-//                 key: _formKey,\n-//                 child: Column(\n-//                   mainAxisAlignment: MainAxisAlignment.center,\n-//                   children: [\n-//                     const Text(\n-//                       'Reset Password',\n-//                       style: TextStyle(\n-//                         fontSize: 24,\n-//                         fontWeight: FontWeight.bold,\n-//                       ),\n-//                     ),\n-//                     SizedBox(height: isMobile ? 10 : 20),\n-//                     Padding(\n-//                       padding: EdgeInsets.symmetric(\n-//                           horizontal:\n-//                               isMobile ? size.width * 0.1 : size.width * 0.3),\n-//                       child: Center(\n-//                         child: TextFormField(\n-//                           controller: _emailController,\n-//                           decoration: InputDecoration(\n-//                             labelText: 'Email',\n-//                             border: OutlineInputBorder(\n-//                               borderRadius: BorderRadius.circular(12),\n-//                             ),\n-//                           ),\n-//                           validator: (value) {\n-//                             if (value == null || value.isEmpty) {\n-//                               return 'Please enter your email';\n-//                             }\n-//                             return null;\n-//                           },\n-//                         ),\n-//                       ),\n-//                     ),\n-//                     const SizedBox(height: 20),\n-//                     ElevatedButton(\n-//                       onPressed: _resetPassword,\n-//                       style: ElevatedButton.styleFrom(\n-//                         backgroundColor: Colors.deepOrange,\n-//                         padding: const EdgeInsets.symmetric(\n-//                             horizontal: 32, vertical: 12),\n-//                         shape: RoundedRectangleBorder(\n-//                           borderRadius: BorderRadius.circular(12),\n-//                         ),\n-//                       ),\n-//                       child: const Text(\n-//                         'Send Reset Link',\n-//                         style: TextStyle(\n-//                             color: Colors.white,\n-//                             fontSize: 16,\n-//                             fontWeight: FontWeight.bold),\n-//                       ),\n-//                     ),\n-//                   ],\n-//                 ),\n-//               ),\n-//             ),\n-//     );\n-//   }\n-// }\n+  @override\n+  Widget build(BuildContext context) {\n+    bool isMobile = MediaQuery.of(context).size.width < 830;\n+    Size size = MediaQuery.of(context).size;\n+    return Scaffold(\n+      appBar: AppBar(\n+        title: const Text('Reset Password'),\n+        backgroundColor: Colors.deepOrange,\n+        foregroundColor: Colors.white,\n+      ),\n+      body: _isLoading\n+          ? const Center(child: CircularProgressIndicator())\n+          : Padding(\n+              padding: const EdgeInsets.all(16.0),\n+              child: Form(\n+                key: _formKey,\n+                child: Column(\n+                  mainAxisAlignment: MainAxisAlignment.center,\n+                  children: [\n+                    const Text(\n+                      'Reset Password',\n+                      style: TextStyle(\n+                        fontSize: 24,\n+                        fontWeight: FontWeight.bold,\n+                      ),\n+                    ),\n+                    SizedBox(height: isMobile ? 10 : 20),\n+                    Padding(\n+                      padding: EdgeInsets.symmetric(\n+                          horizontal:\n+                              isMobile ? size.width * 0.1 : size.width * 0.3),\n+                      child: Center(\n+                        child: TextFormField(\n+                          controller: _emailController,\n+                          decoration: InputDecoration(\n+                            labelText: 'Email',\n+                            border: OutlineInputBorder(\n+                              borderRadius: BorderRadius.circular(12),\n+                            ),\n+                          ),\n+                          validator: (value) {\n+                            if (value == null || value.isEmpty) {\n+                              return 'Please enter your email';\n+                            }\n+                            return null;\n+                          },\n+                        ),\n+                      ),\n+                    ),\n+                    const SizedBox(height: 20),\n+                    ElevatedButton(\n+                      onPressed: _resetPassword,\n+                      style: ElevatedButton.styleFrom(\n+                        backgroundColor: Colors.deepOrange,\n+                        padding: const EdgeInsets.symmetric(\n+                            horizontal: 32, vertical: 12),\n+                        shape: RoundedRectangleBorder(\n+                          borderRadius: BorderRadius.circular(12),\n+                        ),\n+                      ),\n+                      child: const Text(\n+                        'Send Reset Link',\n+                        style: TextStyle(\n+                            color: Colors.white,\n+                            fontSize: 16,\n+                            fontWeight: FontWeight.bold),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+            ),\n+    );\n+  }\n+}\n"
                }
            ],
            "date": 1756118462783,
            "name": "Commit-0",
            "content": "// import 'package:firebase_auth/firebase_auth.dart';\n// import 'package:flutter/material.dart';\n\n// class ResetPasswordPage extends StatefulWidget {\n//   const ResetPasswordPage({super.key});\n\n//   @override\n//   _ResetPasswordPageState createState() => _ResetPasswordPageState();\n// }\n\n// class _ResetPasswordPageState extends State<ResetPasswordPage> {\n//   final FirebaseAuth _auth = FirebaseAuth.instance;\n//   final TextEditingController _emailController = TextEditingController();\n//   final _formKey = GlobalKey<FormState>();\n//   bool _isLoading = false;\n\n//   Future<void> _resetPassword() async {\n//     if (_formKey.currentState!.validate()) {\n//       setState(() {\n//         _isLoading = true;\n//       });\n\n//       try {\n//         await _auth.sendPasswordResetEmail(email: _emailController.text.trim());\n\n//         ScaffoldMessenger.of(context).showSnackBar(\n//           const SnackBar(\n//             content: Text('Password reset email sent. Check your inbox.'),\n//             backgroundColor: Colors.deepOrange,\n//             duration: Duration(seconds: 5),\n//           ),\n//         );\n//       } on FirebaseAuthException catch (e) {\n//         ScaffoldMessenger.of(context).showSnackBar(\n//           SnackBar(content: Text('Error: ${e.message}')),\n//         );\n//       } finally {\n//         setState(() {\n//           _isLoading = false;\n//         });\n//       }\n//     }\n//   }\n\n//   @override\n//   Widget build(BuildContext context) {\n//     bool isMobile = MediaQuery.of(context).size.width < 830;\n//     Size size = MediaQuery.of(context).size;\n//     return Scaffold(\n//       appBar: AppBar(\n//         title: const Text('Reset Password'),\n//         backgroundColor: Colors.deepOrange,\n//         foregroundColor: Colors.white,\n//       ),\n//       body: _isLoading\n//           ? const Center(child: CircularProgressIndicator())\n//           : Padding(\n//               padding: const EdgeInsets.all(16.0),\n//               child: Form(\n//                 key: _formKey,\n//                 child: Column(\n//                   mainAxisAlignment: MainAxisAlignment.center,\n//                   children: [\n//                     const Text(\n//                       'Reset Password',\n//                       style: TextStyle(\n//                         fontSize: 24,\n//                         fontWeight: FontWeight.bold,\n//                       ),\n//                     ),\n//                     SizedBox(height: isMobile ? 10 : 20),\n//                     Padding(\n//                       padding: EdgeInsets.symmetric(\n//                           horizontal:\n//                               isMobile ? size.width * 0.1 : size.width * 0.3),\n//                       child: Center(\n//                         child: TextFormField(\n//                           controller: _emailController,\n//                           decoration: InputDecoration(\n//                             labelText: 'Email',\n//                             border: OutlineInputBorder(\n//                               borderRadius: BorderRadius.circular(12),\n//                             ),\n//                           ),\n//                           validator: (value) {\n//                             if (value == null || value.isEmpty) {\n//                               return 'Please enter your email';\n//                             }\n//                             return null;\n//                           },\n//                         ),\n//                       ),\n//                     ),\n//                     const SizedBox(height: 20),\n//                     ElevatedButton(\n//                       onPressed: _resetPassword,\n//                       style: ElevatedButton.styleFrom(\n//                         backgroundColor: Colors.deepOrange,\n//                         padding: const EdgeInsets.symmetric(\n//                             horizontal: 32, vertical: 12),\n//                         shape: RoundedRectangleBorder(\n//                           borderRadius: BorderRadius.circular(12),\n//                         ),\n//                       ),\n//                       child: const Text(\n//                         'Send Reset Link',\n//                         style: TextStyle(\n//                             color: Colors.white,\n//                             fontSize: 16,\n//                             fontWeight: FontWeight.bold),\n//                       ),\n//                     ),\n//                   ],\n//                 ),\n//               ),\n//             ),\n//     );\n//   }\n// }\n"
        }
    ]
}