{
    "sourceFile": "lib/Backend/SignUp/signup.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1756118457340,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1756122800191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,493 +1,493 @@\n-// import 'package:cloud_firestore/cloud_firestore.dart';\n-// import 'package:firebase_auth/firebase_auth.dart';\n-// import 'package:flutter/material.dart';\n-// import 'package:l_f/Backend/Login/login.dart';\n-// import 'package:l_f/Frontend/Contants/lists.dart';\n+import 'package:cloud_firestore/cloud_firestore.dart';\n+import 'package:firebase_auth/firebase_auth.dart';\n+import 'package:flutter/material.dart';\n+import 'package:l_f/Backend/Login/login.dart';\n+import 'package:l_f/Frontend/Contants/lists.dart';\n \n-// //Sign Up PAGE\n-// class SignUpPage extends StatefulWidget {\n-//   const SignUpPage({super.key});\n+//Sign Up PAGE\n+class SignUpPage extends StatefulWidget {\n+  const SignUpPage({super.key});\n \n-//   @override\n-//   _SignUpPageState createState() => _SignUpPageState();\n-// }\n+  @override\n+  _SignUpPageState createState() => _SignUpPageState();\n+}\n \n-// class _SignUpPageState extends State<SignUpPage> {\n-//   final FirebaseAuth _auth = FirebaseAuth.instance;\n-//   final FirebaseFirestore _firestore = FirebaseFirestore.instance;\n+class _SignUpPageState extends State<SignUpPage> {\n+  final FirebaseAuth _auth = FirebaseAuth.instance;\n+  final FirebaseFirestore _firestore = FirebaseFirestore.instance;\n \n-//   final _formKey = GlobalKey<FormState>();\n+  final _formKey = GlobalKey<FormState>();\n \n-//   // Text controllers to retrieve input\n-//   final TextEditingController _emailController = TextEditingController();\n-//   final TextEditingController _passwordController = TextEditingController();\n-//   final TextEditingController _nameController = TextEditingController();\n-//   final TextEditingController _phoneController = TextEditingController();\n+  // Text controllers to retrieve input\n+  final TextEditingController _emailController = TextEditingController();\n+  final TextEditingController _passwordController = TextEditingController();\n+  final TextEditingController _nameController = TextEditingController();\n+  final TextEditingController _phoneController = TextEditingController();\n \n-//   String? _selectedDegree;\n-//   String? _selectedGender;\n-//   String? _selectYear;\n-//   String? _selectedHostel;\n-//   String? _selectedDepartment;\n+  String? _selectedDegree;\n+  String? _selectedGender;\n+  String? _selectYear;\n+  String? _selectedHostel;\n+  String? _selectedDepartment;\n \n-//   bool _isLoading = false;\n+  bool _isLoading = false;\n \n-//   Future<void> _signUpUser() async {\n-//     if (_formKey.currentState!.validate()) {\n-//       // Check if the email domain is @nith.ac.in\n-//       if (!_emailController.text.trim().endsWith('@nith.ac.in')) {\n-//         ScaffoldMessenger.of(context).showSnackBar(\n-//           const SnackBar(\n-//             content: Text('Please use your college email id'),\n-//             backgroundColor: Colors.deepOrange,\n-//             duration: Duration(seconds: 5),\n-//           ),\n-//         );\n-//         return;\n-//       }\n-//       if (_phoneController.text.trim().length < 10) {\n-//         ScaffoldMessenger.of(context).showSnackBar(\n-//           const SnackBar(\n-//             content: Text('Invalid Mobile Number'),\n-//             backgroundColor: Colors.deepOrange,\n-//             duration: Duration(seconds: 5),\n-//           ),\n-//         );\n-//         return;\n-//       }\n+  Future<void> _signUpUser() async {\n+    if (_formKey.currentState!.validate()) {\n+      // Check if the email domain is @nith.ac.in\n+      if (!_emailController.text.trim().endsWith('@nith.ac.in')) {\n+        ScaffoldMessenger.of(context).showSnackBar(\n+          const SnackBar(\n+            content: Text('Please use your college email id'),\n+            backgroundColor: Colors.deepOrange,\n+            duration: Duration(seconds: 5),\n+          ),\n+        );\n+        return;\n+      }\n+      if (_phoneController.text.trim().length < 10) {\n+        ScaffoldMessenger.of(context).showSnackBar(\n+          const SnackBar(\n+            content: Text('Invalid Mobile Number'),\n+            backgroundColor: Colors.deepOrange,\n+            duration: Duration(seconds: 5),\n+          ),\n+        );\n+        return;\n+      }\n \n-//       setState(() {\n-//         _isLoading = true;\n-//       });\n+      setState(() {\n+        _isLoading = true;\n+      });\n \n-//       try {\n-//         // Create user with email and password\n-//         UserCredential userCredential =\n-//             await _auth.createUserWithEmailAndPassword(\n-//           email: _emailController.text.trim(),\n-//           password: _passwordController.text.trim(),\n-//         );\n+      try {\n+        // Create user with email and password\n+        UserCredential userCredential =\n+            await _auth.createUserWithEmailAndPassword(\n+          email: _emailController.text.trim(),\n+          password: _passwordController.text.trim(),\n+        );\n \n-//         User? user = userCredential.user;\n-//         const userProfilePicUrl = 'https://avatar.iran.liara.run/public/24';\n+        User? user = userCredential.user;\n+        const userProfilePicUrl = 'https://avatar.iran.liara.run/public/24';\n \n-//         // Send verification email\n-//         if (user != null && !user.emailVerified) {\n-//           await user.sendEmailVerification();\n-//         }\n+        // Send verification email\n+        if (user != null && !user.emailVerified) {\n+          await user.sendEmailVerification();\n+        }\n \n-//         // Save user information to Firestore\n-//         await _firestore.collection('users').doc(user!.uid).set({\n-//           'uid': user.uid,\n-//           'name': _nameController.text.trim(),\n-//           'email': user.email,\n-//           'joinedDate': DateTime.now(),\n-//           'profileImage': userProfilePicUrl,\n-//           'phonenumber': _phoneController.text.trim(),\n-//           'gender': _selectedGender,\n-//           'degree': _selectedDegree,\n-//           'hostel': _selectedHostel,\n-//           'year': _selectYear,\n-//           'department': _selectedDepartment,\n-//         });\n+        // Save user information to Firestore\n+        await _firestore.collection('users').doc(user!.uid).set({\n+          'uid': user.uid,\n+          'name': _nameController.text.trim(),\n+          'email': user.email,\n+          'joinedDate': DateTime.now(),\n+          'profileImage': userProfilePicUrl,\n+          'phonenumber': _phoneController.text.trim(),\n+          'gender': _selectedGender,\n+          'degree': _selectedDegree,\n+          'hostel': _selectedHostel,\n+          'year': _selectYear,\n+          'department': _selectedDepartment,\n+        });\n \n-//         ScaffoldMessenger.of(context).showSnackBar(\n-//           const SnackBar(\n-//             content: Text('Verification email has been sent.'),\n-//             backgroundColor: Colors.deepOrange,\n-//             duration: Duration(seconds: 5),\n-//           ),\n-//         );\n+        ScaffoldMessenger.of(context).showSnackBar(\n+          const SnackBar(\n+            content: Text('Verification email has been sent.'),\n+            backgroundColor: Colors.deepOrange,\n+            duration: Duration(seconds: 5),\n+          ),\n+        );\n \n-//         // Redirect to login page\n-//         Navigator.pushReplacement(\n-//             context, MaterialPageRoute(builder: (_) => const LoginPage()));\n-//       } on FirebaseAuthException catch (e) {\n-//         ScaffoldMessenger.of(context).showSnackBar(\n-//           SnackBar(content: Text('Error: ${e.message}')),\n-//         );\n-//       } finally {\n-//         setState(() {\n-//           _isLoading = false;\n-//         });\n-//       }\n-//     }\n-//   }\n+        // Redirect to login page\n+        Navigator.pushReplacement(\n+            context, MaterialPageRoute(builder: (_) => const LoginPage()));\n+      } on FirebaseAuthException catch (e) {\n+        ScaffoldMessenger.of(context).showSnackBar(\n+          SnackBar(content: Text('Error: ${e.message}')),\n+        );\n+      } finally {\n+        setState(() {\n+          _isLoading = false;\n+        });\n+      }\n+    }\n+  }\n \n-//   @override\n-//   Widget build(BuildContext context) {\n-//     bool isMobile = MediaQuery.of(context).size.width < 830;\n-//     Size size = MediaQuery.of(context).size;\n-//     return Scaffold(\n-//       body: _isLoading\n-//           ? const Center(child: CircularProgressIndicator())\n-//           : Center(\n-//               child: SingleChildScrollView(\n-//                 padding: const EdgeInsets.all(16.0),\n-//                 child: Form(\n-//                   key: _formKey,\n-//                   child: Column(\n-//                     mainAxisAlignment: MainAxisAlignment.center,\n-//                     children: [\n-//                       SizedBox(height: isMobile ? 30 : 0),\n-//                       const Text(\n-//                         'Create an Account',\n-//                         style: TextStyle(\n-//                           fontSize: 32,\n-//                           fontWeight: FontWeight.bold,\n-//                           color: Colors.black,\n-//                         ),\n-//                       ),\n-//                       SizedBox(height: isMobile ? 17 : 32),\n-//                       Container(\n-//                         width: isMobile ? size.width * 0.8 : size.width * 0.6,\n-//                         decoration: BoxDecoration(\n-//                           color: Colors.white.withOpacity(0.1),\n-//                           borderRadius: BorderRadius.circular(12),\n-//                           boxShadow: [\n-//                             BoxShadow(\n-//                               color: Colors.black.withOpacity(0.1),\n-//                               blurRadius: 10,\n-//                               offset: const Offset(0, 4),\n-//                             ),\n-//                           ],\n-//                         ),\n-//                         padding: const EdgeInsets.all(16.0),\n-//                         child: Column(\n-//                           children: [\n-//                             TextFormField(\n-//                               controller: _nameController,\n-//                               decoration: InputDecoration(\n-//                                 filled: true,\n-//                                 fillColor: Colors.white.withOpacity(0.2),\n-//                                 labelText: 'Name',\n-//                                 border: OutlineInputBorder(\n-//                                   borderRadius: BorderRadius.circular(10),\n-//                                 ),\n-//                                 labelStyle:\n-//                                     const TextStyle(color: Colors.black),\n-//                               ),\n-//                               validator: (value) {\n-//                                 if (value == null || value.isEmpty) {\n-//                                   return 'Please enter your name';\n-//                                 }\n-//                                 return null;\n-//                               },\n-//                             ),\n-//                             const SizedBox(height: 16),\n+  @override\n+  Widget build(BuildContext context) {\n+    bool isMobile = MediaQuery.of(context).size.width < 830;\n+    Size size = MediaQuery.of(context).size;\n+    return Scaffold(\n+      body: _isLoading\n+          ? const Center(child: CircularProgressIndicator())\n+          : Center(\n+              child: SingleChildScrollView(\n+                padding: const EdgeInsets.all(16.0),\n+                child: Form(\n+                  key: _formKey,\n+                  child: Column(\n+                    mainAxisAlignment: MainAxisAlignment.center,\n+                    children: [\n+                      SizedBox(height: isMobile ? 30 : 0),\n+                      const Text(\n+                        'Create an Account',\n+                        style: TextStyle(\n+                          fontSize: 32,\n+                          fontWeight: FontWeight.bold,\n+                          color: Colors.black,\n+                        ),\n+                      ),\n+                      SizedBox(height: isMobile ? 17 : 32),\n+                      Container(\n+                        width: isMobile ? size.width * 0.8 : size.width * 0.6,\n+                        decoration: BoxDecoration(\n+                          color: Colors.white.withOpacity(0.1),\n+                          borderRadius: BorderRadius.circular(12),\n+                          boxShadow: [\n+                            BoxShadow(\n+                              color: Colors.black.withOpacity(0.1),\n+                              blurRadius: 10,\n+                              offset: const Offset(0, 4),\n+                            ),\n+                          ],\n+                        ),\n+                        padding: const EdgeInsets.all(16.0),\n+                        child: Column(\n+                          children: [\n+                            TextFormField(\n+                              controller: _nameController,\n+                              decoration: InputDecoration(\n+                                filled: true,\n+                                fillColor: Colors.white.withOpacity(0.2),\n+                                labelText: 'Name',\n+                                border: OutlineInputBorder(\n+                                  borderRadius: BorderRadius.circular(10),\n+                                ),\n+                                labelStyle:\n+                                    const TextStyle(color: Colors.black),\n+                              ),\n+                              validator: (value) {\n+                                if (value == null || value.isEmpty) {\n+                                  return 'Please enter your name';\n+                                }\n+                                return null;\n+                              },\n+                            ),\n+                            const SizedBox(height: 16),\n \n-//                             // Email Field\n-//                             _buildTextFormField(\n-//                                 emailController: _emailController),\n-//                             const SizedBox(height: 16),\n-//                             TextFormField(\n-//                               controller: _phoneController,\n-//                               decoration: InputDecoration(\n-//                                 filled: true,\n-//                                 fillColor: Colors.white.withOpacity(0.2),\n-//                                 labelText: 'Phone Number',\n-//                                 border: OutlineInputBorder(\n-//                                   borderRadius: BorderRadius.circular(10),\n-//                                 ),\n-//                                 labelStyle:\n-//                                     const TextStyle(color: Colors.black),\n-//                               ),\n-//                               validator: (value) {\n-//                                 if (value == null || value.isEmpty) {\n-//                                   return 'Please enter your phone number';\n-//                                 }\n-//                                 return null;\n-//                               },\n-//                             ),\n-//                             const SizedBox(height: 16),\n+                            // Email Field\n+                            _buildTextFormField(\n+                                emailController: _emailController),\n+                            const SizedBox(height: 16),\n+                            TextFormField(\n+                              controller: _phoneController,\n+                              decoration: InputDecoration(\n+                                filled: true,\n+                                fillColor: Colors.white.withOpacity(0.2),\n+                                labelText: 'Phone Number',\n+                                border: OutlineInputBorder(\n+                                  borderRadius: BorderRadius.circular(10),\n+                                ),\n+                                labelStyle:\n+                                    const TextStyle(color: Colors.black),\n+                              ),\n+                              validator: (value) {\n+                                if (value == null || value.isEmpty) {\n+                                  return 'Please enter your phone number';\n+                                }\n+                                return null;\n+                              },\n+                            ),\n+                            const SizedBox(height: 16),\n \n-//                             // Password Field\n-//                             TextFormField(\n-//                               controller: _passwordController,\n-//                               obscureText: true,\n-//                               decoration: InputDecoration(\n-//                                 filled: true,\n-//                                 fillColor: Colors.white.withOpacity(0.2),\n-//                                 labelText: 'Password',\n-//                                 border: OutlineInputBorder(\n-//                                   borderRadius: BorderRadius.circular(12),\n-//                                 ),\n-//                                 labelStyle:\n-//                                     const TextStyle(color: Colors.black),\n-//                               ),\n-//                               validator: (value) {\n-//                                 if (value == null || value.isEmpty) {\n-//                                   return 'Please enter your password';\n-//                                 }\n-//                                 if (value.length < 6) {\n-//                                   return 'Password must be at least 6 characters long';\n-//                                 }\n-//                                 return null;\n-//                               },\n-//                             ),\n-//                             const SizedBox(height: 22),\n-//                             DropdownButtonFormField<String>(\n-//                               value: _selectedDegree,\n-//                               decoration: InputDecoration(\n-//                                 filled: true,\n-//                                 fillColor: Colors.white.withOpacity(0.2),\n-//                                 labelText: 'Degree',\n-//                                 border: OutlineInputBorder(\n-//                                   borderRadius: BorderRadius.circular(12),\n-//                                 ),\n-//                                 labelStyle:\n-//                                     const TextStyle(color: Colors.black),\n-//                               ),\n-//                               items: degreesList.map((String degree) {\n-//                                 return DropdownMenuItem<String>(\n-//                                   value: degree,\n-//                                   child: Text(degree),\n-//                                 );\n-//                               }).toList(),\n-//                               onChanged: (newValue) {\n-//                                 setState(() {\n-//                                   _selectedDegree = newValue;\n-//                                 });\n-//                               },\n-//                               validator: (value) {\n-//                                 if (value == null) {\n-//                                   return 'Please select your degree';\n-//                                 }\n-//                                 return null;\n-//                               },\n-//                             ),\n-//                             const SizedBox(height: 16),\n-//                             DropdownButtonFormField<String>(\n-//                               value: _selectedDepartment,\n-//                               decoration: InputDecoration(\n-//                                 filled: true,\n-//                                 fillColor: Colors.white.withOpacity(0.2),\n-//                                 labelText: 'Department',\n-//                                 border: OutlineInputBorder(\n-//                                   borderRadius: BorderRadius.circular(12),\n-//                                 ),\n-//                                 labelStyle:\n-//                                     const TextStyle(color: Colors.black),\n-//                               ),\n-//                               items: departmentList.map((String deptartment) {\n-//                                 return DropdownMenuItem<String>(\n-//                                   value: deptartment,\n-//                                   child: Text(deptartment),\n-//                                 );\n-//                               }).toList(),\n-//                               onChanged: (newValue) {\n-//                                 setState(() {\n-//                                   _selectedDepartment = newValue;\n-//                                 });\n-//                               },\n-//                               validator: (value) {\n-//                                 if (value == null) {\n-//                                   return 'Please select your department';\n-//                                 }\n-//                                 return null;\n-//                               },\n-//                             ),\n-//                             const SizedBox(height: 16),\n-//                             if (_selectedDegree != 'PhD')\n-//                               DropdownButtonFormField<String>(\n-//                                 value: _selectYear,\n-//                                 decoration: InputDecoration(\n-//                                   filled: true,\n-//                                   fillColor: Colors.white.withOpacity(0.2),\n-//                                   labelText: 'Year',\n-//                                   border: OutlineInputBorder(\n-//                                     borderRadius: BorderRadius.circular(12),\n-//                                   ),\n-//                                   labelStyle:\n-//                                       const TextStyle(color: Colors.black),\n-//                                 ),\n-//                                 items: _selectedDegree == 'MSc' ||\n-//                                         _selectedDegree == 'MTech'\n-//                                     ? mscMtechList.map((String year) {\n-//                                         return DropdownMenuItem<String>(\n-//                                           value: year,\n-//                                           child: Text(year),\n-//                                         );\n-//                                       }).toList()\n-//                                     : btechyearsList.map((String year) {\n-//                                         return DropdownMenuItem<String>(\n-//                                           value: year,\n-//                                           child: Text(year),\n-//                                         );\n-//                                       }).toList(),\n-//                                 onChanged: (newValue) {\n-//                                   setState(() {\n-//                                     _selectYear = newValue;\n-//                                   });\n-//                                 },\n-//                                 validator: (value) {\n-//                                   if (value == null) {\n-//                                     return 'Please select your year';\n-//                                   }\n-//                                   return null;\n-//                                 },\n-//                               ),\n-//                             const SizedBox(height: 16),\n+                            // Password Field\n+                            TextFormField(\n+                              controller: _passwordController,\n+                              obscureText: true,\n+                              decoration: InputDecoration(\n+                                filled: true,\n+                                fillColor: Colors.white.withOpacity(0.2),\n+                                labelText: 'Password',\n+                                border: OutlineInputBorder(\n+                                  borderRadius: BorderRadius.circular(12),\n+                                ),\n+                                labelStyle:\n+                                    const TextStyle(color: Colors.black),\n+                              ),\n+                              validator: (value) {\n+                                if (value == null || value.isEmpty) {\n+                                  return 'Please enter your password';\n+                                }\n+                                if (value.length < 6) {\n+                                  return 'Password must be at least 6 characters long';\n+                                }\n+                                return null;\n+                              },\n+                            ),\n+                            const SizedBox(height: 22),\n+                            DropdownButtonFormField<String>(\n+                              value: _selectedDegree,\n+                              decoration: InputDecoration(\n+                                filled: true,\n+                                fillColor: Colors.white.withOpacity(0.2),\n+                                labelText: 'Degree',\n+                                border: OutlineInputBorder(\n+                                  borderRadius: BorderRadius.circular(12),\n+                                ),\n+                                labelStyle:\n+                                    const TextStyle(color: Colors.black),\n+                              ),\n+                              items: degreesList.map((String degree) {\n+                                return DropdownMenuItem<String>(\n+                                  value: degree,\n+                                  child: Text(degree),\n+                                );\n+                              }).toList(),\n+                              onChanged: (newValue) {\n+                                setState(() {\n+                                  _selectedDegree = newValue;\n+                                });\n+                              },\n+                              validator: (value) {\n+                                if (value == null) {\n+                                  return 'Please select your degree';\n+                                }\n+                                return null;\n+                              },\n+                            ),\n+                            const SizedBox(height: 16),\n+                            DropdownButtonFormField<String>(\n+                              value: _selectedDepartment,\n+                              decoration: InputDecoration(\n+                                filled: true,\n+                                fillColor: Colors.white.withOpacity(0.2),\n+                                labelText: 'Department',\n+                                border: OutlineInputBorder(\n+                                  borderRadius: BorderRadius.circular(12),\n+                                ),\n+                                labelStyle:\n+                                    const TextStyle(color: Colors.black),\n+                              ),\n+                              items: departmentList.map((String deptartment) {\n+                                return DropdownMenuItem<String>(\n+                                  value: deptartment,\n+                                  child: Text(deptartment),\n+                                );\n+                              }).toList(),\n+                              onChanged: (newValue) {\n+                                setState(() {\n+                                  _selectedDepartment = newValue;\n+                                });\n+                              },\n+                              validator: (value) {\n+                                if (value == null) {\n+                                  return 'Please select your department';\n+                                }\n+                                return null;\n+                              },\n+                            ),\n+                            const SizedBox(height: 16),\n+                            if (_selectedDegree != 'PhD')\n+                              DropdownButtonFormField<String>(\n+                                value: _selectYear,\n+                                decoration: InputDecoration(\n+                                  filled: true,\n+                                  fillColor: Colors.white.withOpacity(0.2),\n+                                  labelText: 'Year',\n+                                  border: OutlineInputBorder(\n+                                    borderRadius: BorderRadius.circular(12),\n+                                  ),\n+                                  labelStyle:\n+                                      const TextStyle(color: Colors.black),\n+                                ),\n+                                items: _selectedDegree == 'MSc' ||\n+                                        _selectedDegree == 'MTech'\n+                                    ? mscMtechList.map((String year) {\n+                                        return DropdownMenuItem<String>(\n+                                          value: year,\n+                                          child: Text(year),\n+                                        );\n+                                      }).toList()\n+                                    : btechyearsList.map((String year) {\n+                                        return DropdownMenuItem<String>(\n+                                          value: year,\n+                                          child: Text(year),\n+                                        );\n+                                      }).toList(),\n+                                onChanged: (newValue) {\n+                                  setState(() {\n+                                    _selectYear = newValue;\n+                                  });\n+                                },\n+                                validator: (value) {\n+                                  if (value == null) {\n+                                    return 'Please select your year';\n+                                  }\n+                                  return null;\n+                                },\n+                              ),\n+                            const SizedBox(height: 16),\n \n-//                             // Gender Dropdown\n-//                             DropdownButtonFormField<String>(\n-//                               value: _selectedGender,\n-//                               decoration: InputDecoration(\n-//                                 filled: true,\n-//                                 fillColor: Colors.white.withOpacity(0.2),\n-//                                 labelText: 'Gender',\n-//                                 border: OutlineInputBorder(\n-//                                   borderRadius: BorderRadius.circular(12),\n-//                                 ),\n-//                                 labelStyle:\n-//                                     const TextStyle(color: Colors.black),\n-//                               ),\n-//                               items: ['Male', 'Female'].map((String gender) {\n-//                                 return DropdownMenuItem<String>(\n-//                                   value: gender,\n-//                                   child: Text(gender),\n-//                                 );\n-//                               }).toList(),\n-//                               onChanged: (newValue) {\n-//                                 setState(() {\n-//                                   _selectedGender = newValue;\n-//                                   _selectedHostel =\n-//                                       null; // Reset hostel selection when gender changes\n-//                                 });\n-//                               },\n-//                               validator: (value) {\n-//                                 if (value == null) {\n-//                                   return 'Please select your gender';\n-//                                 }\n-//                                 return null;\n-//                               },\n-//                             ),\n-//                             const SizedBox(height: 16),\n+                            // Gender Dropdown\n+                            DropdownButtonFormField<String>(\n+                              value: _selectedGender,\n+                              decoration: InputDecoration(\n+                                filled: true,\n+                                fillColor: Colors.white.withOpacity(0.2),\n+                                labelText: 'Gender',\n+                                border: OutlineInputBorder(\n+                                  borderRadius: BorderRadius.circular(12),\n+                                ),\n+                                labelStyle:\n+                                    const TextStyle(color: Colors.black),\n+                              ),\n+                              items: ['Male', 'Female'].map((String gender) {\n+                                return DropdownMenuItem<String>(\n+                                  value: gender,\n+                                  child: Text(gender),\n+                                );\n+                              }).toList(),\n+                              onChanged: (newValue) {\n+                                setState(() {\n+                                  _selectedGender = newValue;\n+                                  _selectedHostel =\n+                                      null; // Reset hostel selection when gender changes\n+                                });\n+                              },\n+                              validator: (value) {\n+                                if (value == null) {\n+                                  return 'Please select your gender';\n+                                }\n+                                return null;\n+                              },\n+                            ),\n+                            const SizedBox(height: 16),\n \n-//                             // Hostel Dropdown (conditional based on gender)\n-//                             DropdownButtonFormField<String>(\n-//                               value: _selectedHostel,\n-//                               decoration: InputDecoration(\n-//                                 filled: true,\n-//                                 fillColor: Colors.white.withOpacity(0.2),\n-//                                 labelText: 'Hostel',\n-//                                 border: OutlineInputBorder(\n-//                                   borderRadius: BorderRadius.circular(12),\n-//                                 ),\n-//                                 labelStyle:\n-//                                     const TextStyle(color: Colors.black),\n-//                               ),\n-//                               items: (_selectedGender == 'Female'\n-//                                       ? girlshostelsList\n-//                                       : boyshostelsList)\n-//                                   .map((String hostel) {\n-//                                 return DropdownMenuItem<String>(\n-//                                   value: hostel,\n-//                                   child: Text(hostel),\n-//                                 );\n-//                               }).toList(),\n-//                               onChanged: (newValue) {\n-//                                 setState(() {\n-//                                   _selectedHostel = newValue;\n-//                                 });\n-//                               },\n-//                               validator: (value) {\n-//                                 if (value == null) {\n-//                                   return 'Please select your hostel';\n-//                                 }\n-//                                 return null;\n-//                               },\n-//                             ),\n-//                             const SizedBox(height: 32),\n+                            // Hostel Dropdown (conditional based on gender)\n+                            DropdownButtonFormField<String>(\n+                              value: _selectedHostel,\n+                              decoration: InputDecoration(\n+                                filled: true,\n+                                fillColor: Colors.white.withOpacity(0.2),\n+                                labelText: 'Hostel',\n+                                border: OutlineInputBorder(\n+                                  borderRadius: BorderRadius.circular(12),\n+                                ),\n+                                labelStyle:\n+                                    const TextStyle(color: Colors.black),\n+                              ),\n+                              items: (_selectedGender == 'Female'\n+                                      ? girlshostelsList\n+                                      : boyshostelsList)\n+                                  .map((String hostel) {\n+                                return DropdownMenuItem<String>(\n+                                  value: hostel,\n+                                  child: Text(hostel),\n+                                );\n+                              }).toList(),\n+                              onChanged: (newValue) {\n+                                setState(() {\n+                                  _selectedHostel = newValue;\n+                                });\n+                              },\n+                              validator: (value) {\n+                                if (value == null) {\n+                                  return 'Please select your hostel';\n+                                }\n+                                return null;\n+                              },\n+                            ),\n+                            const SizedBox(height: 32),\n \n-//                             // Sign-Up Button\n-//                             Center(\n-//                               child: ElevatedButton(\n-//                                 onPressed: _signUpUser,\n-//                                 style: ElevatedButton.styleFrom(\n-//                                   backgroundColor: Colors.deepOrange,\n-//                                   padding: const EdgeInsets.symmetric(\n-//                                       horizontal: 32, vertical: 12),\n-//                                   shape: RoundedRectangleBorder(\n-//                                     borderRadius: BorderRadius.circular(12),\n-//                                   ),\n-//                                   textStyle: const TextStyle(\n-//                                       fontSize: 18,\n-//                                       fontWeight: FontWeight.bold),\n-//                                 ),\n-//                                 child: const Text(\n-//                                   'Sign Up',\n-//                                   style: TextStyle(\n-//                                       color: Colors.white,\n-//                                       fontWeight: FontWeight.bold),\n-//                                 ),\n-//                               ),\n-//                             ),\n-//                             const SizedBox(height: 16),\n-//                             TextButton(\n-//                               onPressed: () {\n-//                                 Navigator.push(\n-//                                     context,\n-//                                     MaterialPageRoute(\n-//                                         builder: (_) => const LoginPage()));\n-//                               },\n-//                               child: const Row(\n-//                                 children: [\n-//                                   Text(\n-//                                     'Already have an account? ',\n-//                                     style: TextStyle(\n-//                                         color: Colors.black,\n-//                                         fontWeight: FontWeight.bold),\n-//                                   ),\n-//                                   Text(\n-//                                     'Sign In ',\n-//                                     style: TextStyle(\n-//                                         decoration: TextDecoration.underline,\n-//                                         color: Colors.black,\n-//                                         fontWeight: FontWeight.bold),\n-//                                   ),\n-//                                 ],\n-//                               ),\n-//                             ),\n-//                           ],\n-//                         ),\n-//                       ),\n-//                     ],\n-//                   ),\n-//                 ),\n-//               ),\n-//             ),\n-//     );\n-//   }\n-// }\n+                            // Sign-Up Button\n+                            Center(\n+                              child: ElevatedButton(\n+                                onPressed: _signUpUser,\n+                                style: ElevatedButton.styleFrom(\n+                                  backgroundColor: Colors.deepOrange,\n+                                  padding: const EdgeInsets.symmetric(\n+                                      horizontal: 32, vertical: 12),\n+                                  shape: RoundedRectangleBorder(\n+                                    borderRadius: BorderRadius.circular(12),\n+                                  ),\n+                                  textStyle: const TextStyle(\n+                                      fontSize: 18,\n+                                      fontWeight: FontWeight.bold),\n+                                ),\n+                                child: const Text(\n+                                  'Sign Up',\n+                                  style: TextStyle(\n+                                      color: Colors.white,\n+                                      fontWeight: FontWeight.bold),\n+                                ),\n+                              ),\n+                            ),\n+                            const SizedBox(height: 16),\n+                            TextButton(\n+                              onPressed: () {\n+                                Navigator.push(\n+                                    context,\n+                                    MaterialPageRoute(\n+                                        builder: (_) => const LoginPage()));\n+                              },\n+                              child: const Row(\n+                                children: [\n+                                  Text(\n+                                    'Already have an account? ',\n+                                    style: TextStyle(\n+                                        color: Colors.black,\n+                                        fontWeight: FontWeight.bold),\n+                                  ),\n+                                  Text(\n+                                    'Sign In ',\n+                                    style: TextStyle(\n+                                        decoration: TextDecoration.underline,\n+                                        color: Colors.black,\n+                                        fontWeight: FontWeight.bold),\n+                                  ),\n+                                ],\n+                              ),\n+                            ),\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                ),\n+              ),\n+            ),\n+    );\n+  }\n+}\n \n-// class _buildTextFormField extends StatelessWidget {\n-//   const _buildTextFormField({\n-//     super.key,\n-//     required TextEditingController emailController,\n-//   }) : _emailController = emailController;\n+class _buildTextFormField extends StatelessWidget {\n+  const _buildTextFormField({\n+    super.key,\n+    required TextEditingController emailController,\n+  }) : _emailController = emailController;\n \n-//   final TextEditingController _emailController;\n+  final TextEditingController _emailController;\n \n-//   @override\n-//   Widget build(BuildContext context) {\n-//     return TextFormField(\n-//       controller: _emailController,\n-//       decoration: InputDecoration(\n-//         filled: true,\n-//         fillColor: Colors.white.withOpacity(0.2),\n-//         labelText: 'Email',\n-//         border: OutlineInputBorder(\n-//           borderRadius: BorderRadius.circular(12),\n-//         ),\n-//         labelStyle: const TextStyle(color: Colors.black),\n-//       ),\n-//       validator: (value) {\n-//         if (value == null || value.isEmpty) {\n-//           return 'Please enter your email';\n-//         }\n-//         return null;\n-//       },\n-//     );\n-//   }\n-// }\n+  @override\n+  Widget build(BuildContext context) {\n+    return TextFormField(\n+      controller: _emailController,\n+      decoration: InputDecoration(\n+        filled: true,\n+        fillColor: Colors.white.withOpacity(0.2),\n+        labelText: 'Email',\n+        border: OutlineInputBorder(\n+          borderRadius: BorderRadius.circular(12),\n+        ),\n+        labelStyle: const TextStyle(color: Colors.black),\n+      ),\n+      validator: (value) {\n+        if (value == null || value.isEmpty) {\n+          return 'Please enter your email';\n+        }\n+        return null;\n+      },\n+    );\n+  }\n+}\n"
                },
                {
                    "date": 1756123270551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -425,12 +425,9 @@\n                             ),\n                             const SizedBox(height: 16),\n                             TextButton(\n                               onPressed: () {\n-                                Navigator.push(\n-                                    context,\n-                                    MaterialPageRoute(\n-                                        builder: (_) => const LoginPage()));\n+                              \n                               },\n                               child: const Row(\n                                 children: [\n                                   Text(\n"
                },
                {
                    "date": 1756123286104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -426,8 +426,21 @@\n                             const SizedBox(height: 16),\n                             TextButton(\n                               onPressed: () {\n                               \n+                                Navigator.push(\n+                        context,\n+                        PageRouteBuilder(\n+                          transitionDuration: const Duration(milliseconds: 500),\n+                          pageBuilder: (_, __, ___) => UserSeePage(uid: postmakerId),\n+                          transitionsBuilder: (context, animation, secondaryAnimation, child) {\n+                            return FadeTransition(\n+                              opacity: animation,\n+                              child: child,\n+                            );\n+                          },\n+                        ),\n+                      );\n                               },\n                               child: const Row(\n                                 children: [\n                                   Text(\n"
                },
                {
                    "date": 1756123292064,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -425,22 +425,23 @@\n                             ),\n                             const SizedBox(height: 16),\n                             TextButton(\n                               onPressed: () {\n-                              \n                                 Navigator.push(\n-                        context,\n-                        PageRouteBuilder(\n-                          transitionDuration: const Duration(milliseconds: 500),\n-                          pageBuilder: (_, __, ___) => UserSeePage(uid: postmakerId),\n-                          transitionsBuilder: (context, animation, secondaryAnimation, child) {\n-                            return FadeTransition(\n-                              opacity: animation,\n-                              child: child,\n-                            );\n-                          },\n-                        ),\n-                      );\n+                                  context,\n+                                  PageRouteBuilder(\n+                                    transitionDuration:\n+                                        const Duration(milliseconds: 500),\n+                                    pageBuilder: (_, __, ___) => LoginPage(),\n+                                    transitionsBuilder: (context, animation,\n+                                        secondaryAnimation, child) {\n+                                      return FadeTransition(\n+                                        opacity: animation,\n+                                        child: child,\n+                                      );\n+                                    },\n+                                  ),\n+                                );\n                               },\n                               child: const Row(\n                                 children: [\n                                   Text(\n"
                }
            ],
            "date": 1756118457340,
            "name": "Commit-0",
            "content": "// import 'package:cloud_firestore/cloud_firestore.dart';\n// import 'package:firebase_auth/firebase_auth.dart';\n// import 'package:flutter/material.dart';\n// import 'package:l_f/Backend/Login/login.dart';\n// import 'package:l_f/Frontend/Contants/lists.dart';\n\n// //Sign Up PAGE\n// class SignUpPage extends StatefulWidget {\n//   const SignUpPage({super.key});\n\n//   @override\n//   _SignUpPageState createState() => _SignUpPageState();\n// }\n\n// class _SignUpPageState extends State<SignUpPage> {\n//   final FirebaseAuth _auth = FirebaseAuth.instance;\n//   final FirebaseFirestore _firestore = FirebaseFirestore.instance;\n\n//   final _formKey = GlobalKey<FormState>();\n\n//   // Text controllers to retrieve input\n//   final TextEditingController _emailController = TextEditingController();\n//   final TextEditingController _passwordController = TextEditingController();\n//   final TextEditingController _nameController = TextEditingController();\n//   final TextEditingController _phoneController = TextEditingController();\n\n//   String? _selectedDegree;\n//   String? _selectedGender;\n//   String? _selectYear;\n//   String? _selectedHostel;\n//   String? _selectedDepartment;\n\n//   bool _isLoading = false;\n\n//   Future<void> _signUpUser() async {\n//     if (_formKey.currentState!.validate()) {\n//       // Check if the email domain is @nith.ac.in\n//       if (!_emailController.text.trim().endsWith('@nith.ac.in')) {\n//         ScaffoldMessenger.of(context).showSnackBar(\n//           const SnackBar(\n//             content: Text('Please use your college email id'),\n//             backgroundColor: Colors.deepOrange,\n//             duration: Duration(seconds: 5),\n//           ),\n//         );\n//         return;\n//       }\n//       if (_phoneController.text.trim().length < 10) {\n//         ScaffoldMessenger.of(context).showSnackBar(\n//           const SnackBar(\n//             content: Text('Invalid Mobile Number'),\n//             backgroundColor: Colors.deepOrange,\n//             duration: Duration(seconds: 5),\n//           ),\n//         );\n//         return;\n//       }\n\n//       setState(() {\n//         _isLoading = true;\n//       });\n\n//       try {\n//         // Create user with email and password\n//         UserCredential userCredential =\n//             await _auth.createUserWithEmailAndPassword(\n//           email: _emailController.text.trim(),\n//           password: _passwordController.text.trim(),\n//         );\n\n//         User? user = userCredential.user;\n//         const userProfilePicUrl = 'https://avatar.iran.liara.run/public/24';\n\n//         // Send verification email\n//         if (user != null && !user.emailVerified) {\n//           await user.sendEmailVerification();\n//         }\n\n//         // Save user information to Firestore\n//         await _firestore.collection('users').doc(user!.uid).set({\n//           'uid': user.uid,\n//           'name': _nameController.text.trim(),\n//           'email': user.email,\n//           'joinedDate': DateTime.now(),\n//           'profileImage': userProfilePicUrl,\n//           'phonenumber': _phoneController.text.trim(),\n//           'gender': _selectedGender,\n//           'degree': _selectedDegree,\n//           'hostel': _selectedHostel,\n//           'year': _selectYear,\n//           'department': _selectedDepartment,\n//         });\n\n//         ScaffoldMessenger.of(context).showSnackBar(\n//           const SnackBar(\n//             content: Text('Verification email has been sent.'),\n//             backgroundColor: Colors.deepOrange,\n//             duration: Duration(seconds: 5),\n//           ),\n//         );\n\n//         // Redirect to login page\n//         Navigator.pushReplacement(\n//             context, MaterialPageRoute(builder: (_) => const LoginPage()));\n//       } on FirebaseAuthException catch (e) {\n//         ScaffoldMessenger.of(context).showSnackBar(\n//           SnackBar(content: Text('Error: ${e.message}')),\n//         );\n//       } finally {\n//         setState(() {\n//           _isLoading = false;\n//         });\n//       }\n//     }\n//   }\n\n//   @override\n//   Widget build(BuildContext context) {\n//     bool isMobile = MediaQuery.of(context).size.width < 830;\n//     Size size = MediaQuery.of(context).size;\n//     return Scaffold(\n//       body: _isLoading\n//           ? const Center(child: CircularProgressIndicator())\n//           : Center(\n//               child: SingleChildScrollView(\n//                 padding: const EdgeInsets.all(16.0),\n//                 child: Form(\n//                   key: _formKey,\n//                   child: Column(\n//                     mainAxisAlignment: MainAxisAlignment.center,\n//                     children: [\n//                       SizedBox(height: isMobile ? 30 : 0),\n//                       const Text(\n//                         'Create an Account',\n//                         style: TextStyle(\n//                           fontSize: 32,\n//                           fontWeight: FontWeight.bold,\n//                           color: Colors.black,\n//                         ),\n//                       ),\n//                       SizedBox(height: isMobile ? 17 : 32),\n//                       Container(\n//                         width: isMobile ? size.width * 0.8 : size.width * 0.6,\n//                         decoration: BoxDecoration(\n//                           color: Colors.white.withOpacity(0.1),\n//                           borderRadius: BorderRadius.circular(12),\n//                           boxShadow: [\n//                             BoxShadow(\n//                               color: Colors.black.withOpacity(0.1),\n//                               blurRadius: 10,\n//                               offset: const Offset(0, 4),\n//                             ),\n//                           ],\n//                         ),\n//                         padding: const EdgeInsets.all(16.0),\n//                         child: Column(\n//                           children: [\n//                             TextFormField(\n//                               controller: _nameController,\n//                               decoration: InputDecoration(\n//                                 filled: true,\n//                                 fillColor: Colors.white.withOpacity(0.2),\n//                                 labelText: 'Name',\n//                                 border: OutlineInputBorder(\n//                                   borderRadius: BorderRadius.circular(10),\n//                                 ),\n//                                 labelStyle:\n//                                     const TextStyle(color: Colors.black),\n//                               ),\n//                               validator: (value) {\n//                                 if (value == null || value.isEmpty) {\n//                                   return 'Please enter your name';\n//                                 }\n//                                 return null;\n//                               },\n//                             ),\n//                             const SizedBox(height: 16),\n\n//                             // Email Field\n//                             _buildTextFormField(\n//                                 emailController: _emailController),\n//                             const SizedBox(height: 16),\n//                             TextFormField(\n//                               controller: _phoneController,\n//                               decoration: InputDecoration(\n//                                 filled: true,\n//                                 fillColor: Colors.white.withOpacity(0.2),\n//                                 labelText: 'Phone Number',\n//                                 border: OutlineInputBorder(\n//                                   borderRadius: BorderRadius.circular(10),\n//                                 ),\n//                                 labelStyle:\n//                                     const TextStyle(color: Colors.black),\n//                               ),\n//                               validator: (value) {\n//                                 if (value == null || value.isEmpty) {\n//                                   return 'Please enter your phone number';\n//                                 }\n//                                 return null;\n//                               },\n//                             ),\n//                             const SizedBox(height: 16),\n\n//                             // Password Field\n//                             TextFormField(\n//                               controller: _passwordController,\n//                               obscureText: true,\n//                               decoration: InputDecoration(\n//                                 filled: true,\n//                                 fillColor: Colors.white.withOpacity(0.2),\n//                                 labelText: 'Password',\n//                                 border: OutlineInputBorder(\n//                                   borderRadius: BorderRadius.circular(12),\n//                                 ),\n//                                 labelStyle:\n//                                     const TextStyle(color: Colors.black),\n//                               ),\n//                               validator: (value) {\n//                                 if (value == null || value.isEmpty) {\n//                                   return 'Please enter your password';\n//                                 }\n//                                 if (value.length < 6) {\n//                                   return 'Password must be at least 6 characters long';\n//                                 }\n//                                 return null;\n//                               },\n//                             ),\n//                             const SizedBox(height: 22),\n//                             DropdownButtonFormField<String>(\n//                               value: _selectedDegree,\n//                               decoration: InputDecoration(\n//                                 filled: true,\n//                                 fillColor: Colors.white.withOpacity(0.2),\n//                                 labelText: 'Degree',\n//                                 border: OutlineInputBorder(\n//                                   borderRadius: BorderRadius.circular(12),\n//                                 ),\n//                                 labelStyle:\n//                                     const TextStyle(color: Colors.black),\n//                               ),\n//                               items: degreesList.map((String degree) {\n//                                 return DropdownMenuItem<String>(\n//                                   value: degree,\n//                                   child: Text(degree),\n//                                 );\n//                               }).toList(),\n//                               onChanged: (newValue) {\n//                                 setState(() {\n//                                   _selectedDegree = newValue;\n//                                 });\n//                               },\n//                               validator: (value) {\n//                                 if (value == null) {\n//                                   return 'Please select your degree';\n//                                 }\n//                                 return null;\n//                               },\n//                             ),\n//                             const SizedBox(height: 16),\n//                             DropdownButtonFormField<String>(\n//                               value: _selectedDepartment,\n//                               decoration: InputDecoration(\n//                                 filled: true,\n//                                 fillColor: Colors.white.withOpacity(0.2),\n//                                 labelText: 'Department',\n//                                 border: OutlineInputBorder(\n//                                   borderRadius: BorderRadius.circular(12),\n//                                 ),\n//                                 labelStyle:\n//                                     const TextStyle(color: Colors.black),\n//                               ),\n//                               items: departmentList.map((String deptartment) {\n//                                 return DropdownMenuItem<String>(\n//                                   value: deptartment,\n//                                   child: Text(deptartment),\n//                                 );\n//                               }).toList(),\n//                               onChanged: (newValue) {\n//                                 setState(() {\n//                                   _selectedDepartment = newValue;\n//                                 });\n//                               },\n//                               validator: (value) {\n//                                 if (value == null) {\n//                                   return 'Please select your department';\n//                                 }\n//                                 return null;\n//                               },\n//                             ),\n//                             const SizedBox(height: 16),\n//                             if (_selectedDegree != 'PhD')\n//                               DropdownButtonFormField<String>(\n//                                 value: _selectYear,\n//                                 decoration: InputDecoration(\n//                                   filled: true,\n//                                   fillColor: Colors.white.withOpacity(0.2),\n//                                   labelText: 'Year',\n//                                   border: OutlineInputBorder(\n//                                     borderRadius: BorderRadius.circular(12),\n//                                   ),\n//                                   labelStyle:\n//                                       const TextStyle(color: Colors.black),\n//                                 ),\n//                                 items: _selectedDegree == 'MSc' ||\n//                                         _selectedDegree == 'MTech'\n//                                     ? mscMtechList.map((String year) {\n//                                         return DropdownMenuItem<String>(\n//                                           value: year,\n//                                           child: Text(year),\n//                                         );\n//                                       }).toList()\n//                                     : btechyearsList.map((String year) {\n//                                         return DropdownMenuItem<String>(\n//                                           value: year,\n//                                           child: Text(year),\n//                                         );\n//                                       }).toList(),\n//                                 onChanged: (newValue) {\n//                                   setState(() {\n//                                     _selectYear = newValue;\n//                                   });\n//                                 },\n//                                 validator: (value) {\n//                                   if (value == null) {\n//                                     return 'Please select your year';\n//                                   }\n//                                   return null;\n//                                 },\n//                               ),\n//                             const SizedBox(height: 16),\n\n//                             // Gender Dropdown\n//                             DropdownButtonFormField<String>(\n//                               value: _selectedGender,\n//                               decoration: InputDecoration(\n//                                 filled: true,\n//                                 fillColor: Colors.white.withOpacity(0.2),\n//                                 labelText: 'Gender',\n//                                 border: OutlineInputBorder(\n//                                   borderRadius: BorderRadius.circular(12),\n//                                 ),\n//                                 labelStyle:\n//                                     const TextStyle(color: Colors.black),\n//                               ),\n//                               items: ['Male', 'Female'].map((String gender) {\n//                                 return DropdownMenuItem<String>(\n//                                   value: gender,\n//                                   child: Text(gender),\n//                                 );\n//                               }).toList(),\n//                               onChanged: (newValue) {\n//                                 setState(() {\n//                                   _selectedGender = newValue;\n//                                   _selectedHostel =\n//                                       null; // Reset hostel selection when gender changes\n//                                 });\n//                               },\n//                               validator: (value) {\n//                                 if (value == null) {\n//                                   return 'Please select your gender';\n//                                 }\n//                                 return null;\n//                               },\n//                             ),\n//                             const SizedBox(height: 16),\n\n//                             // Hostel Dropdown (conditional based on gender)\n//                             DropdownButtonFormField<String>(\n//                               value: _selectedHostel,\n//                               decoration: InputDecoration(\n//                                 filled: true,\n//                                 fillColor: Colors.white.withOpacity(0.2),\n//                                 labelText: 'Hostel',\n//                                 border: OutlineInputBorder(\n//                                   borderRadius: BorderRadius.circular(12),\n//                                 ),\n//                                 labelStyle:\n//                                     const TextStyle(color: Colors.black),\n//                               ),\n//                               items: (_selectedGender == 'Female'\n//                                       ? girlshostelsList\n//                                       : boyshostelsList)\n//                                   .map((String hostel) {\n//                                 return DropdownMenuItem<String>(\n//                                   value: hostel,\n//                                   child: Text(hostel),\n//                                 );\n//                               }).toList(),\n//                               onChanged: (newValue) {\n//                                 setState(() {\n//                                   _selectedHostel = newValue;\n//                                 });\n//                               },\n//                               validator: (value) {\n//                                 if (value == null) {\n//                                   return 'Please select your hostel';\n//                                 }\n//                                 return null;\n//                               },\n//                             ),\n//                             const SizedBox(height: 32),\n\n//                             // Sign-Up Button\n//                             Center(\n//                               child: ElevatedButton(\n//                                 onPressed: _signUpUser,\n//                                 style: ElevatedButton.styleFrom(\n//                                   backgroundColor: Colors.deepOrange,\n//                                   padding: const EdgeInsets.symmetric(\n//                                       horizontal: 32, vertical: 12),\n//                                   shape: RoundedRectangleBorder(\n//                                     borderRadius: BorderRadius.circular(12),\n//                                   ),\n//                                   textStyle: const TextStyle(\n//                                       fontSize: 18,\n//                                       fontWeight: FontWeight.bold),\n//                                 ),\n//                                 child: const Text(\n//                                   'Sign Up',\n//                                   style: TextStyle(\n//                                       color: Colors.white,\n//                                       fontWeight: FontWeight.bold),\n//                                 ),\n//                               ),\n//                             ),\n//                             const SizedBox(height: 16),\n//                             TextButton(\n//                               onPressed: () {\n//                                 Navigator.push(\n//                                     context,\n//                                     MaterialPageRoute(\n//                                         builder: (_) => const LoginPage()));\n//                               },\n//                               child: const Row(\n//                                 children: [\n//                                   Text(\n//                                     'Already have an account? ',\n//                                     style: TextStyle(\n//                                         color: Colors.black,\n//                                         fontWeight: FontWeight.bold),\n//                                   ),\n//                                   Text(\n//                                     'Sign In ',\n//                                     style: TextStyle(\n//                                         decoration: TextDecoration.underline,\n//                                         color: Colors.black,\n//                                         fontWeight: FontWeight.bold),\n//                                   ),\n//                                 ],\n//                               ),\n//                             ),\n//                           ],\n//                         ),\n//                       ),\n//                     ],\n//                   ),\n//                 ),\n//               ),\n//             ),\n//     );\n//   }\n// }\n\n// class _buildTextFormField extends StatelessWidget {\n//   const _buildTextFormField({\n//     super.key,\n//     required TextEditingController emailController,\n//   }) : _emailController = emailController;\n\n//   final TextEditingController _emailController;\n\n//   @override\n//   Widget build(BuildContext context) {\n//     return TextFormField(\n//       controller: _emailController,\n//       decoration: InputDecoration(\n//         filled: true,\n//         fillColor: Colors.white.withOpacity(0.2),\n//         labelText: 'Email',\n//         border: OutlineInputBorder(\n//           borderRadius: BorderRadius.circular(12),\n//         ),\n//         labelStyle: const TextStyle(color: Colors.black),\n//       ),\n//       validator: (value) {\n//         if (value == null || value.isEmpty) {\n//           return 'Please enter your email';\n//         }\n//         return null;\n//       },\n//     );\n//   }\n// }\n"
        }
    ]
}