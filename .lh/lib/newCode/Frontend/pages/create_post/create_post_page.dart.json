{
    "sourceFile": "lib/newCode/Frontend/pages/create_post/create_post_page.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 13,
            "patches": [
                {
                    "date": 1756115938217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1756115947553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,13 @@\n // lib/Frontend/pages/create_post_page.dart\n+import 'package:flutter/foundation.dart';\n import 'package:flutter/material.dart';\n-import 'package:flutter/foundation.dart';\n import 'package:l_f/Backend/firestore_service.dart';\n+import 'package:l_f/Frontend/Contants/lists.dart';\n+import 'package:l_f/Frontend/components/custom_dropdown_field.dart';\n import 'package:l_f/Frontend/components/custom_text_field.dart';\n-import 'package:l_f/Frontend/components/custom_dropdown_field.dart';\n import 'package:l_f/Frontend/components/status_selector.dart';\n-import 'package:l_f/Frontend/Contants/lists.dart';\n+import 'package:l_f/newCode/Frontend/components/custom_text_field.dart';\n \n class CreatePostPage extends StatefulWidget {\n   const CreatePostPage({super.key});\n \n@@ -116,14 +117,16 @@\n                         children: [\n                           StatusSelector(\n                             status: 'Lost',\n                             selectedStatus: _status,\n-                            onSelected: (status) => setState(() => _status = status),\n+                            onSelected: (status) =>\n+                                setState(() => _status = status),\n                           ),\n                           StatusSelector(\n                             status: 'Found',\n                             selectedStatus: _status,\n-                            onSelected: (status) => setState(() => _status = status),\n+                            onSelected: (status) =>\n+                                setState(() => _status = status),\n                           ),\n                         ],\n                       ),\n                       const SizedBox(height: 16),\n@@ -131,9 +134,10 @@\n                         label: 'Item Title',\n                         value: _title,\n                         items: itemsList,\n                         onChanged: (value) => setState(() => _title = value),\n-                        validator: (value) => value == null ? 'Please select a title' : null,\n+                        validator: (value) =>\n+                            value == null ? 'Please select a title' : null,\n                       ),\n                       const SizedBox(height: 16),\n                       CustomDropdownField<String>(\n                         label: 'Location',\n@@ -141,49 +145,61 @@\n                         items: locationsList,\n                         onChanged: (value) {\n                           setState(() {\n                             _location = value;\n-                            if (value != 'Boys Hostel' && value != 'Girls Hostel') {\n+                            if (value != 'Boys Hostel' &&\n+                                value != 'Girls Hostel') {\n                               _hostel = null;\n                             }\n                           });\n                         },\n-                        validator: (value) => value == null ? 'Please select a location' : null,\n+                        validator: (value) =>\n+                            value == null ? 'Please select a location' : null,\n                       ),\n                       const SizedBox(height: 16),\n-                      if (_location == 'Boys Hostel' || _location == 'Girls Hostel')\n+                      if (_location == 'Boys Hostel' ||\n+                          _location == 'Girls Hostel')\n                         CustomDropdownField<String>(\n                           label: 'Hostel Name',\n                           value: _hostel,\n-                          items: _location == 'Boys Hostel' ? boyshostelsList : girlshostelsList,\n+                          items: _location == 'Boys Hostel'\n+                              ? boyshostelsList\n+                              : girlshostelsList,\n                           onChanged: (value) => setState(() => _hostel = value),\n-                          validator: (value) => value == null ? 'Please select a hostel' : null,\n+                          validator: (value) =>\n+                              value == null ? 'Please select a hostel' : null,\n                         ),\n                       const SizedBox(height: 16),\n                       CustomTextField(\n                         label: 'Description',\n                         controller: TextEditingController(text: _description),\n                         icon: Icons.description,\n-                        validator: (value) => value!.isEmpty ? 'Please enter a description' : null,\n+                        validator: (value) => value!.isEmpty\n+                            ? 'Please enter a description'\n+                            : null,\n                         onSaved: (value) => _description = value,\n                       ),\n                       const SizedBox(height: 16),\n                       if (_status == 'Found')\n                         CustomTextField(\n                           label: 'Verification Question',\n                           controller: TextEditingController(text: _question),\n                           icon: Icons.help_outline,\n-                          validator: (value) => value!.isEmpty ? 'Please provide a verification question' : null,\n+                          validator: (value) => value!.isEmpty\n+                              ? 'Please provide a verification question'\n+                              : null,\n                           onSaved: (value) => _question = value,\n                         ),\n                       const SizedBox(height: 16),\n                       ElevatedButton.icon(\n                         onPressed: () async {\n                           _imageBytes = await _firestoreService.pickImages();\n                           setState(() {});\n                         },\n-                        icon: const Icon(Icons.photo_library, color: Colors.white),\n-                        label: const Text('Select Images', style: TextStyle(color: Colors.white)),\n+                        icon: const Icon(Icons.photo_library,\n+                            color: Colors.white),\n+                        label: const Text('Select Images',\n+                            style: TextStyle(color: Colors.white)),\n                         style: ElevatedButton.styleFrom(\n                           backgroundColor: Colors.deepOrange,\n                         ),\n                       ),\n@@ -195,9 +211,10 @@\n                             scrollDirection: Axis.horizontal,\n                             itemCount: _imageBytes!.length,\n                             itemBuilder: (context, index) {\n                               return Padding(\n-                                padding: const EdgeInsets.symmetric(horizontal: 8.0),\n+                                padding:\n+                                    const EdgeInsets.symmetric(horizontal: 8.0),\n                                 child: Stack(\n                                   children: [\n                                     ClipRRect(\n                                       borderRadius: BorderRadius.circular(12),\n@@ -211,9 +228,10 @@\n                                     Positioned(\n                                       top: 0,\n                                       right: 0,\n                                       child: IconButton(\n-                                        icon: const Icon(Icons.cancel, color: Colors.red),\n+                                        icon: const Icon(Icons.cancel,\n+                                            color: Colors.red),\n                                         onPressed: () => _removeImage(index),\n                                       ),\n                                     ),\n                                   ],\n@@ -227,9 +245,11 @@\n                         child: ElevatedButton(\n                           onPressed: _isLoading ? null : _submitData,\n                           child: Text(\n                             _isLoading ? 'Uploading...' : 'Submit',\n-                            style: const TextStyle(color: Colors.white, fontWeight: FontWeight.bold),\n+                            style: const TextStyle(\n+                                color: Colors.white,\n+                                fontWeight: FontWeight.bold),\n                           ),\n                           style: ElevatedButton.styleFrom(\n                             backgroundColor: Colors.deepOrange,\n                           ),\n"
                },
                {
                    "date": 1756115959011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n import 'package:l_f/Frontend/Contants/lists.dart';\n import 'package:l_f/Frontend/components/custom_dropdown_field.dart';\n import 'package:l_f/Frontend/components/custom_text_field.dart';\n import 'package:l_f/Frontend/components/status_selector.dart';\n+import 'package:l_f/newCode/Frontend/components/custom_dropdown_field.dart';\n import 'package:l_f/newCode/Frontend/components/custom_text_field.dart';\n \n class CreatePostPage extends StatefulWidget {\n   const CreatePostPage({super.key});\n"
                },
                {
                    "date": 1756115964584,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n import 'package:l_f/Frontend/components/custom_text_field.dart';\n import 'package:l_f/Frontend/components/status_selector.dart';\n import 'package:l_f/newCode/Frontend/components/custom_dropdown_field.dart';\n import 'package:l_f/newCode/Frontend/components/custom_text_field.dart';\n+import 'package:l_f/newCode/Frontend/components/status_selector.dart';\n \n class CreatePostPage extends StatefulWidget {\n   const CreatePostPage({super.key});\n \n"
                },
                {
                    "date": 1756115970203,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n import 'package:l_f/Frontend/Contants/lists.dart';\n import 'package:l_f/Frontend/components/custom_dropdown_field.dart';\n import 'package:l_f/Frontend/components/custom_text_field.dart';\n import 'package:l_f/Frontend/components/status_selector.dart';\n+import 'package:l_f/newCode/Backend/firestore_service.dart';\n import 'package:l_f/newCode/Frontend/components/custom_dropdown_field.dart';\n import 'package:l_f/newCode/Frontend/components/custom_text_field.dart';\n import 'package:l_f/newCode/Frontend/components/status_selector.dart';\n \n"
                },
                {
                    "date": 1756115981027,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,9 @@\n // lib/Frontend/pages/create_post_page.dart\n import 'package:flutter/foundation.dart';\n import 'package:flutter/material.dart';\n-import 'package:l_f/Backend/firestore_service.dart';\n import 'package:l_f/Frontend/Contants/lists.dart';\n-import 'package:l_f/Frontend/components/custom_dropdown_field.dart';\n-import 'package:l_f/Frontend/components/custom_text_field.dart';\n-import 'package:l_f/Frontend/components/status_selector.dart';\n+\n import 'package:l_f/newCode/Backend/firestore_service.dart';\n import 'package:l_f/newCode/Frontend/components/custom_dropdown_field.dart';\n import 'package:l_f/newCode/Frontend/components/custom_text_field.dart';\n import 'package:l_f/newCode/Frontend/components/status_selector.dart';\n"
                },
                {
                    "date": 1756115993587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,7 @@\n // lib/Frontend/pages/create_post_page.dart\n import 'package:flutter/foundation.dart';\n import 'package:flutter/material.dart';\n-import 'package:l_f/Frontend/Contants/lists.dart';\n \n import 'package:l_f/newCode/Backend/firestore_service.dart';\n import 'package:l_f/newCode/Frontend/components/custom_dropdown_field.dart';\n import 'package:l_f/newCode/Frontend/components/custom_text_field.dart';\n"
                },
                {
                    "date": 1756116005451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n // lib/Frontend/pages/create_post_page.dart\n import 'package:flutter/foundation.dart';\n import 'package:flutter/material.dart';\n+import 'package:l_f/Frontend/Contants/lists.dart';\n \n import 'package:l_f/newCode/Backend/firestore_service.dart';\n import 'package:l_f/newCode/Frontend/components/custom_dropdown_field.dart';\n import 'package:l_f/newCode/Frontend/components/custom_text_field.dart';\n"
                },
                {
                    "date": 1756116121281,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,7 @@\n // lib/Frontend/pages/create_post_page.dart\n import 'package:flutter/foundation.dart';\n import 'package:flutter/material.dart';\n-import 'package:l_f/Frontend/Contants/lists.dart';\n \n import 'package:l_f/newCode/Backend/firestore_service.dart';\n import 'package:l_f/newCode/Frontend/components/custom_dropdown_field.dart';\n import 'package:l_f/newCode/Frontend/components/custom_text_field.dart';\n"
                },
                {
                    "date": 1756116154205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n // lib/Frontend/pages/create_post_page.dart\n import 'package:flutter/foundation.dart';\n import 'package:flutter/material.dart';\n+import 'package:l_f/Frontend/Contants/lists.dart';\n \n import 'package:l_f/newCode/Backend/firestore_service.dart';\n import 'package:l_f/newCode/Frontend/components/custom_dropdown_field.dart';\n import 'package:l_f/newCode/Frontend/components/custom_text_field.dart';\n"
                },
                {
                    "date": 1756118171806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n // lib/Frontend/pages/create_post_page.dart\n import 'package:flutter/foundation.dart';\n import 'package:flutter/material.dart';\n import 'package:l_f/Frontend/Contants/lists.dart';\n-\n import 'package:l_f/newCode/Backend/firestore_service.dart';\n import 'package:l_f/newCode/Frontend/components/custom_dropdown_field.dart';\n import 'package:l_f/newCode/Frontend/components/custom_text_field.dart';\n import 'package:l_f/newCode/Frontend/components/status_selector.dart';\n@@ -243,17 +242,17 @@\n                       const SizedBox(height: 20),\n                       Center(\n                         child: ElevatedButton(\n                           onPressed: _isLoading ? null : _submitData,\n+                          style: ElevatedButton.styleFrom(\n+                            backgroundColor: Colors.deepOrange,\n+                          ),\n                           child: Text(\n                             _isLoading ? 'Uploading...' : 'Submit',\n                             style: const TextStyle(\n                                 color: Colors.white,\n                                 fontWeight: FontWeight.bold),\n                           ),\n-                          style: ElevatedButton.styleFrom(\n-                            backgroundColor: Colors.deepOrange,\n-                          ),\n                         ),\n                       ),\n                     ],\n                   ),\n"
                },
                {
                    "date": 1756118607933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n import 'package:l_f/newCode/Backend/firestore_service.dart';\n import 'package:l_f/newCode/Frontend/components/custom_dropdown_field.dart';\n import 'package:l_f/newCode/Frontend/components/custom_text_field.dart';\n import 'package:l_f/newCode/Frontend/components/status_selector.dart';\n+import 'package:l_f/newCode/constants/lists.dart';\n \n class CreatePostPage extends StatefulWidget {\n   const CreatePostPage({super.key});\n \n"
                },
                {
                    "date": 1756118614509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,7 @@\n // lib/Frontend/pages/create_post_page.dart\n import 'package:flutter/foundation.dart';\n import 'package:flutter/material.dart';\n-import 'package:l_f/Frontend/Contants/lists.dart';\n import 'package:l_f/newCode/Backend/firestore_service.dart';\n import 'package:l_f/newCode/Frontend/components/custom_dropdown_field.dart';\n import 'package:l_f/newCode/Frontend/components/custom_text_field.dart';\n import 'package:l_f/newCode/Frontend/components/status_selector.dart';\n"
                },
                {
                    "date": 1756123000769,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,267 +1,267 @@\n-// lib/Frontend/pages/create_post_page.dart\n-import 'package:flutter/foundation.dart';\n-import 'package:flutter/material.dart';\n-import 'package:l_f/newCode/Backend/firestore_service.dart';\n-import 'package:l_f/newCode/Frontend/components/custom_dropdown_field.dart';\n-import 'package:l_f/newCode/Frontend/components/custom_text_field.dart';\n-import 'package:l_f/newCode/Frontend/components/status_selector.dart';\n-import 'package:l_f/newCode/constants/lists.dart';\n+// // lib/Frontend/pages/create_post_page.dart\n+// import 'package:flutter/foundation.dart';\n+// import 'package:flutter/material.dart';\n+// import 'package:l_f/newCode/Backend/firestore_service.dart';\n+// import 'package:l_f/newCode/Frontend/components/custom_dropdown_field.dart';\n+// import 'package:l_f/newCode/Frontend/components/custom_text_field.dart';\n+// import 'package:l_f/newCode/Frontend/components/status_selector.dart';\n+// import 'package:l_f/newCode/constants/lists.dart';\n \n-class CreatePostPage extends StatefulWidget {\n-  const CreatePostPage({super.key});\n+// class CreatePostPage extends StatefulWidget {\n+//   const CreatePostPage({super.key});\n \n-  @override\n-  _CreatePostPageState createState() => _CreatePostPageState();\n-}\n+//   @override\n+//   _CreatePostPageState createState() => _CreatePostPageState();\n+// }\n \n-class _CreatePostPageState extends State<CreatePostPage> {\n-  final _formKey = GlobalKey<FormState>();\n-  final FirestoreService _firestoreService = FirestoreService();\n+// class _CreatePostPageState extends State<CreatePostPage> {\n+//   final _formKey = GlobalKey<FormState>();\n+//   final FirestoreService _firestoreService = FirestoreService();\n \n-  String _status = 'Lost';\n-  String? _title;\n-  String? _location;\n-  String? _hostel;\n-  String? _description;\n-  String? _question;\n-  List<Uint8List>? _imageBytes;\n-  bool _isLoading = false;\n+//   String _status = 'Lost';\n+//   String? _title;\n+//   String? _location;\n+//   String? _hostel;\n+//   String? _description;\n+//   String? _question;\n+//   List<Uint8List>? _imageBytes;\n+//   bool _isLoading = false;\n \n-  @override\n-  void initState() {\n-    super.initState();\n-    _firestoreService.fetchUserData(); // Fetch user data on page load\n-  }\n+//   @override\n+//   void initState() {\n+//     super.initState();\n+//     _firestoreService.fetchUserData(); // Fetch user data on page load\n+//   }\n \n-  Future<void> _submitData() async {\n-    if (_formKey.currentState?.validate() == false) {\n-      return;\n-    }\n-    _formKey.currentState?.save();\n+//   Future<void> _submitData() async {\n+//     if (_formKey.currentState?.validate() == false) {\n+//       return;\n+//     }\n+//     _formKey.currentState?.save();\n \n-    if (_imageBytes == null || _imageBytes!.isEmpty) {\n-      ScaffoldMessenger.of(context).showSnackBar(\n-        const SnackBar(\n-          backgroundColor: Colors.deepOrange,\n-          content: Text('Please select at least one image'),\n-        ),\n-      );\n-      return;\n-    }\n+//     if (_imageBytes == null || _imageBytes!.isEmpty) {\n+//       ScaffoldMessenger.of(context).showSnackBar(\n+//         const SnackBar(\n+//           backgroundColor: Colors.deepOrange,\n+//           content: Text('Please select at least one image'),\n+//         ),\n+//       );\n+//       return;\n+//     }\n \n-    setState(() {\n-      _isLoading = true;\n-    });\n+//     setState(() {\n+//       _isLoading = true;\n+//     });\n \n-    try {\n-      await _firestoreService.createPost(\n-        status: _status,\n-        title: _title!,\n-        location: _location!,\n-        description: _description!,\n-        imageBytes: _imageBytes!,\n-        hostel: _hostel,\n-        question: _question,\n-      );\n+//     try {\n+//       await _firestoreService.createPost(\n+//         status: _status,\n+//         title: _title!,\n+//         location: _location!,\n+//         description: _description!,\n+//         imageBytes: _imageBytes!,\n+//         hostel: _hostel,\n+//         question: _question,\n+//       );\n \n-      ScaffoldMessenger.of(context).showSnackBar(\n-        const SnackBar(\n-          backgroundColor: Colors.green,\n-          content: Text('Item uploaded successfully!'),\n-        ),\n-      );\n-      Navigator.of(context).pop();\n-    } catch (e) {\n-      ScaffoldMessenger.of(context).showSnackBar(\n-        SnackBar(\n-          backgroundColor: Colors.red,\n-          content: Text('Error uploading item: $e'),\n-        ),\n-      );\n-    } finally {\n-      setState(() {\n-        _isLoading = false;\n-      });\n-    }\n-  }\n+//       ScaffoldMessenger.of(context).showSnackBar(\n+//         const SnackBar(\n+//           backgroundColor: Colors.green,\n+//           content: Text('Item uploaded successfully!'),\n+//         ),\n+//       );\n+//       Navigator.of(context).pop();\n+//     } catch (e) {\n+//       ScaffoldMessenger.of(context).showSnackBar(\n+//         SnackBar(\n+//           backgroundColor: Colors.red,\n+//           content: Text('Error uploading item: $e'),\n+//         ),\n+//       );\n+//     } finally {\n+//       setState(() {\n+//         _isLoading = false;\n+//       });\n+//     }\n+//   }\n \n-  void _removeImage(int index) {\n-    setState(() {\n-      _imageBytes!.removeAt(index);\n-    });\n-  }\n+//   void _removeImage(int index) {\n+//     setState(() {\n+//       _imageBytes!.removeAt(index);\n+//     });\n+//   }\n \n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      appBar: AppBar(\n-        backgroundColor: Colors.deepOrange,\n-        foregroundColor: Colors.white,\n-        title: const Text('Create New Post'),\n-      ),\n-      body: Center(\n-        child: SizedBox(\n-          width: 500,\n-          child: Card(\n-            child: Padding(\n-              padding: const EdgeInsets.all(16.0),\n-              child: Form(\n-                key: _formKey,\n-                child: SingleChildScrollView(\n-                  child: Column(\n-                    crossAxisAlignment: CrossAxisAlignment.start,\n-                    children: [\n-                      Row(\n-                        mainAxisAlignment: MainAxisAlignment.spaceEvenly,\n-                        children: [\n-                          StatusSelector(\n-                            status: 'Lost',\n-                            selectedStatus: _status,\n-                            onSelected: (status) =>\n-                                setState(() => _status = status),\n-                          ),\n-                          StatusSelector(\n-                            status: 'Found',\n-                            selectedStatus: _status,\n-                            onSelected: (status) =>\n-                                setState(() => _status = status),\n-                          ),\n-                        ],\n-                      ),\n-                      const SizedBox(height: 16),\n-                      CustomDropdownField<String>(\n-                        label: 'Item Title',\n-                        value: _title,\n-                        items: itemsList,\n-                        onChanged: (value) => setState(() => _title = value),\n-                        validator: (value) =>\n-                            value == null ? 'Please select a title' : null,\n-                      ),\n-                      const SizedBox(height: 16),\n-                      CustomDropdownField<String>(\n-                        label: 'Location',\n-                        value: _location,\n-                        items: locationsList,\n-                        onChanged: (value) {\n-                          setState(() {\n-                            _location = value;\n-                            if (value != 'Boys Hostel' &&\n-                                value != 'Girls Hostel') {\n-                              _hostel = null;\n-                            }\n-                          });\n-                        },\n-                        validator: (value) =>\n-                            value == null ? 'Please select a location' : null,\n-                      ),\n-                      const SizedBox(height: 16),\n-                      if (_location == 'Boys Hostel' ||\n-                          _location == 'Girls Hostel')\n-                        CustomDropdownField<String>(\n-                          label: 'Hostel Name',\n-                          value: _hostel,\n-                          items: _location == 'Boys Hostel'\n-                              ? boyshostelsList\n-                              : girlshostelsList,\n-                          onChanged: (value) => setState(() => _hostel = value),\n-                          validator: (value) =>\n-                              value == null ? 'Please select a hostel' : null,\n-                        ),\n-                      const SizedBox(height: 16),\n-                      CustomTextField(\n-                        label: 'Description',\n-                        controller: TextEditingController(text: _description),\n-                        icon: Icons.description,\n-                        validator: (value) => value!.isEmpty\n-                            ? 'Please enter a description'\n-                            : null,\n-                        onSaved: (value) => _description = value,\n-                      ),\n-                      const SizedBox(height: 16),\n-                      if (_status == 'Found')\n-                        CustomTextField(\n-                          label: 'Verification Question',\n-                          controller: TextEditingController(text: _question),\n-                          icon: Icons.help_outline,\n-                          validator: (value) => value!.isEmpty\n-                              ? 'Please provide a verification question'\n-                              : null,\n-                          onSaved: (value) => _question = value,\n-                        ),\n-                      const SizedBox(height: 16),\n-                      ElevatedButton.icon(\n-                        onPressed: () async {\n-                          _imageBytes = await _firestoreService.pickImages();\n-                          setState(() {});\n-                        },\n-                        icon: const Icon(Icons.photo_library,\n-                            color: Colors.white),\n-                        label: const Text('Select Images',\n-                            style: TextStyle(color: Colors.white)),\n-                        style: ElevatedButton.styleFrom(\n-                          backgroundColor: Colors.deepOrange,\n-                        ),\n-                      ),\n-                      const SizedBox(height: 16),\n-                      if (_imageBytes != null && _imageBytes!.isNotEmpty)\n-                        SizedBox(\n-                          height: 110,\n-                          child: ListView.builder(\n-                            scrollDirection: Axis.horizontal,\n-                            itemCount: _imageBytes!.length,\n-                            itemBuilder: (context, index) {\n-                              return Padding(\n-                                padding:\n-                                    const EdgeInsets.symmetric(horizontal: 8.0),\n-                                child: Stack(\n-                                  children: [\n-                                    ClipRRect(\n-                                      borderRadius: BorderRadius.circular(12),\n-                                      child: Image.memory(\n-                                        _imageBytes![index],\n-                                        width: 90,\n-                                        height: 100,\n-                                        fit: BoxFit.cover,\n-                                      ),\n-                                    ),\n-                                    Positioned(\n-                                      top: 0,\n-                                      right: 0,\n-                                      child: IconButton(\n-                                        icon: const Icon(Icons.cancel,\n-                                            color: Colors.red),\n-                                        onPressed: () => _removeImage(index),\n-                                      ),\n-                                    ),\n-                                  ],\n-                                ),\n-                              );\n-                            },\n-                          ),\n-                        ),\n-                      const SizedBox(height: 20),\n-                      Center(\n-                        child: ElevatedButton(\n-                          onPressed: _isLoading ? null : _submitData,\n-                          style: ElevatedButton.styleFrom(\n-                            backgroundColor: Colors.deepOrange,\n-                          ),\n-                          child: Text(\n-                            _isLoading ? 'Uploading...' : 'Submit',\n-                            style: const TextStyle(\n-                                color: Colors.white,\n-                                fontWeight: FontWeight.bold),\n-                          ),\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                ),\n-              ),\n-            ),\n-          ),\n-        ),\n-      ),\n-    );\n-  }\n-}\n+//   @override\n+//   Widget build(BuildContext context) {\n+//     return Scaffold(\n+//       appBar: AppBar(\n+//         backgroundColor: Colors.deepOrange,\n+//         foregroundColor: Colors.white,\n+//         title: const Text('Create New Post'),\n+//       ),\n+//       body: Center(\n+//         child: SizedBox(\n+//           width: 500,\n+//           child: Card(\n+//             child: Padding(\n+//               padding: const EdgeInsets.all(16.0),\n+//               child: Form(\n+//                 key: _formKey,\n+//                 child: SingleChildScrollView(\n+//                   child: Column(\n+//                     crossAxisAlignment: CrossAxisAlignment.start,\n+//                     children: [\n+//                       Row(\n+//                         mainAxisAlignment: MainAxisAlignment.spaceEvenly,\n+//                         children: [\n+//                           StatusSelector(\n+//                             status: 'Lost',\n+//                             selectedStatus: _status,\n+//                             onSelected: (status) =>\n+//                                 setState(() => _status = status),\n+//                           ),\n+//                           StatusSelector(\n+//                             status: 'Found',\n+//                             selectedStatus: _status,\n+//                             onSelected: (status) =>\n+//                                 setState(() => _status = status),\n+//                           ),\n+//                         ],\n+//                       ),\n+//                       const SizedBox(height: 16),\n+//                       CustomDropdownField<String>(\n+//                         label: 'Item Title',\n+//                         value: _title,\n+//                         items: itemsList,\n+//                         onChanged: (value) => setState(() => _title = value),\n+//                         validator: (value) =>\n+//                             value == null ? 'Please select a title' : null,\n+//                       ),\n+//                       const SizedBox(height: 16),\n+//                       CustomDropdownField<String>(\n+//                         label: 'Location',\n+//                         value: _location,\n+//                         items: locationsList,\n+//                         onChanged: (value) {\n+//                           setState(() {\n+//                             _location = value;\n+//                             if (value != 'Boys Hostel' &&\n+//                                 value != 'Girls Hostel') {\n+//                               _hostel = null;\n+//                             }\n+//                           });\n+//                         },\n+//                         validator: (value) =>\n+//                             value == null ? 'Please select a location' : null,\n+//                       ),\n+//                       const SizedBox(height: 16),\n+//                       if (_location == 'Boys Hostel' ||\n+//                           _location == 'Girls Hostel')\n+//                         CustomDropdownField<String>(\n+//                           label: 'Hostel Name',\n+//                           value: _hostel,\n+//                           items: _location == 'Boys Hostel'\n+//                               ? boyshostelsList\n+//                               : girlshostelsList,\n+//                           onChanged: (value) => setState(() => _hostel = value),\n+//                           validator: (value) =>\n+//                               value == null ? 'Please select a hostel' : null,\n+//                         ),\n+//                       const SizedBox(height: 16),\n+//                       CustomTextField(\n+//                         label: 'Description',\n+//                         controller: TextEditingController(text: _description),\n+//                         icon: Icons.description,\n+//                         validator: (value) => value!.isEmpty\n+//                             ? 'Please enter a description'\n+//                             : null,\n+//                         onSaved: (value) => _description = value,\n+//                       ),\n+//                       const SizedBox(height: 16),\n+//                       if (_status == 'Found')\n+//                         CustomTextField(\n+//                           label: 'Verification Question',\n+//                           controller: TextEditingController(text: _question),\n+//                           icon: Icons.help_outline,\n+//                           validator: (value) => value!.isEmpty\n+//                               ? 'Please provide a verification question'\n+//                               : null,\n+//                           onSaved: (value) => _question = value,\n+//                         ),\n+//                       const SizedBox(height: 16),\n+//                       ElevatedButton.icon(\n+//                         onPressed: () async {\n+//                           _imageBytes = await _firestoreService.pickImages();\n+//                           setState(() {});\n+//                         },\n+//                         icon: const Icon(Icons.photo_library,\n+//                             color: Colors.white),\n+//                         label: const Text('Select Images',\n+//                             style: TextStyle(color: Colors.white)),\n+//                         style: ElevatedButton.styleFrom(\n+//                           backgroundColor: Colors.deepOrange,\n+//                         ),\n+//                       ),\n+//                       const SizedBox(height: 16),\n+//                       if (_imageBytes != null && _imageBytes!.isNotEmpty)\n+//                         SizedBox(\n+//                           height: 110,\n+//                           child: ListView.builder(\n+//                             scrollDirection: Axis.horizontal,\n+//                             itemCount: _imageBytes!.length,\n+//                             itemBuilder: (context, index) {\n+//                               return Padding(\n+//                                 padding:\n+//                                     const EdgeInsets.symmetric(horizontal: 8.0),\n+//                                 child: Stack(\n+//                                   children: [\n+//                                     ClipRRect(\n+//                                       borderRadius: BorderRadius.circular(12),\n+//                                       child: Image.memory(\n+//                                         _imageBytes![index],\n+//                                         width: 90,\n+//                                         height: 100,\n+//                                         fit: BoxFit.cover,\n+//                                       ),\n+//                                     ),\n+//                                     Positioned(\n+//                                       top: 0,\n+//                                       right: 0,\n+//                                       child: IconButton(\n+//                                         icon: const Icon(Icons.cancel,\n+//                                             color: Colors.red),\n+//                                         onPressed: () => _removeImage(index),\n+//                                       ),\n+//                                     ),\n+//                                   ],\n+//                                 ),\n+//                               );\n+//                             },\n+//                           ),\n+//                         ),\n+//                       const SizedBox(height: 20),\n+//                       Center(\n+//                         child: ElevatedButton(\n+//                           onPressed: _isLoading ? null : _submitData,\n+//                           style: ElevatedButton.styleFrom(\n+//                             backgroundColor: Colors.deepOrange,\n+//                           ),\n+//                           child: Text(\n+//                             _isLoading ? 'Uploading...' : 'Submit',\n+//                             style: const TextStyle(\n+//                                 color: Colors.white,\n+//                                 fontWeight: FontWeight.bold),\n+//                           ),\n+//                         ),\n+//                       ),\n+//                     ],\n+//                   ),\n+//                 ),\n+//               ),\n+//             ),\n+//           ),\n+//         ),\n+//       ),\n+//     );\n+//   }\n+// }\n"
                }
            ],
            "date": 1756115938217,
            "name": "Commit-0",
            "content": "// lib/Frontend/pages/create_post_page.dart\nimport 'package:flutter/material.dart';\nimport 'package:flutter/foundation.dart';\nimport 'package:l_f/Backend/firestore_service.dart';\nimport 'package:l_f/Frontend/components/custom_text_field.dart';\nimport 'package:l_f/Frontend/components/custom_dropdown_field.dart';\nimport 'package:l_f/Frontend/components/status_selector.dart';\nimport 'package:l_f/Frontend/Contants/lists.dart';\n\nclass CreatePostPage extends StatefulWidget {\n  const CreatePostPage({super.key});\n\n  @override\n  _CreatePostPageState createState() => _CreatePostPageState();\n}\n\nclass _CreatePostPageState extends State<CreatePostPage> {\n  final _formKey = GlobalKey<FormState>();\n  final FirestoreService _firestoreService = FirestoreService();\n\n  String _status = 'Lost';\n  String? _title;\n  String? _location;\n  String? _hostel;\n  String? _description;\n  String? _question;\n  List<Uint8List>? _imageBytes;\n  bool _isLoading = false;\n\n  @override\n  void initState() {\n    super.initState();\n    _firestoreService.fetchUserData(); // Fetch user data on page load\n  }\n\n  Future<void> _submitData() async {\n    if (_formKey.currentState?.validate() == false) {\n      return;\n    }\n    _formKey.currentState?.save();\n\n    if (_imageBytes == null || _imageBytes!.isEmpty) {\n      ScaffoldMessenger.of(context).showSnackBar(\n        const SnackBar(\n          backgroundColor: Colors.deepOrange,\n          content: Text('Please select at least one image'),\n        ),\n      );\n      return;\n    }\n\n    setState(() {\n      _isLoading = true;\n    });\n\n    try {\n      await _firestoreService.createPost(\n        status: _status,\n        title: _title!,\n        location: _location!,\n        description: _description!,\n        imageBytes: _imageBytes!,\n        hostel: _hostel,\n        question: _question,\n      );\n\n      ScaffoldMessenger.of(context).showSnackBar(\n        const SnackBar(\n          backgroundColor: Colors.green,\n          content: Text('Item uploaded successfully!'),\n        ),\n      );\n      Navigator.of(context).pop();\n    } catch (e) {\n      ScaffoldMessenger.of(context).showSnackBar(\n        SnackBar(\n          backgroundColor: Colors.red,\n          content: Text('Error uploading item: $e'),\n        ),\n      );\n    } finally {\n      setState(() {\n        _isLoading = false;\n      });\n    }\n  }\n\n  void _removeImage(int index) {\n    setState(() {\n      _imageBytes!.removeAt(index);\n    });\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        backgroundColor: Colors.deepOrange,\n        foregroundColor: Colors.white,\n        title: const Text('Create New Post'),\n      ),\n      body: Center(\n        child: SizedBox(\n          width: 500,\n          child: Card(\n            child: Padding(\n              padding: const EdgeInsets.all(16.0),\n              child: Form(\n                key: _formKey,\n                child: SingleChildScrollView(\n                  child: Column(\n                    crossAxisAlignment: CrossAxisAlignment.start,\n                    children: [\n                      Row(\n                        mainAxisAlignment: MainAxisAlignment.spaceEvenly,\n                        children: [\n                          StatusSelector(\n                            status: 'Lost',\n                            selectedStatus: _status,\n                            onSelected: (status) => setState(() => _status = status),\n                          ),\n                          StatusSelector(\n                            status: 'Found',\n                            selectedStatus: _status,\n                            onSelected: (status) => setState(() => _status = status),\n                          ),\n                        ],\n                      ),\n                      const SizedBox(height: 16),\n                      CustomDropdownField<String>(\n                        label: 'Item Title',\n                        value: _title,\n                        items: itemsList,\n                        onChanged: (value) => setState(() => _title = value),\n                        validator: (value) => value == null ? 'Please select a title' : null,\n                      ),\n                      const SizedBox(height: 16),\n                      CustomDropdownField<String>(\n                        label: 'Location',\n                        value: _location,\n                        items: locationsList,\n                        onChanged: (value) {\n                          setState(() {\n                            _location = value;\n                            if (value != 'Boys Hostel' && value != 'Girls Hostel') {\n                              _hostel = null;\n                            }\n                          });\n                        },\n                        validator: (value) => value == null ? 'Please select a location' : null,\n                      ),\n                      const SizedBox(height: 16),\n                      if (_location == 'Boys Hostel' || _location == 'Girls Hostel')\n                        CustomDropdownField<String>(\n                          label: 'Hostel Name',\n                          value: _hostel,\n                          items: _location == 'Boys Hostel' ? boyshostelsList : girlshostelsList,\n                          onChanged: (value) => setState(() => _hostel = value),\n                          validator: (value) => value == null ? 'Please select a hostel' : null,\n                        ),\n                      const SizedBox(height: 16),\n                      CustomTextField(\n                        label: 'Description',\n                        controller: TextEditingController(text: _description),\n                        icon: Icons.description,\n                        validator: (value) => value!.isEmpty ? 'Please enter a description' : null,\n                        onSaved: (value) => _description = value,\n                      ),\n                      const SizedBox(height: 16),\n                      if (_status == 'Found')\n                        CustomTextField(\n                          label: 'Verification Question',\n                          controller: TextEditingController(text: _question),\n                          icon: Icons.help_outline,\n                          validator: (value) => value!.isEmpty ? 'Please provide a verification question' : null,\n                          onSaved: (value) => _question = value,\n                        ),\n                      const SizedBox(height: 16),\n                      ElevatedButton.icon(\n                        onPressed: () async {\n                          _imageBytes = await _firestoreService.pickImages();\n                          setState(() {});\n                        },\n                        icon: const Icon(Icons.photo_library, color: Colors.white),\n                        label: const Text('Select Images', style: TextStyle(color: Colors.white)),\n                        style: ElevatedButton.styleFrom(\n                          backgroundColor: Colors.deepOrange,\n                        ),\n                      ),\n                      const SizedBox(height: 16),\n                      if (_imageBytes != null && _imageBytes!.isNotEmpty)\n                        SizedBox(\n                          height: 110,\n                          child: ListView.builder(\n                            scrollDirection: Axis.horizontal,\n                            itemCount: _imageBytes!.length,\n                            itemBuilder: (context, index) {\n                              return Padding(\n                                padding: const EdgeInsets.symmetric(horizontal: 8.0),\n                                child: Stack(\n                                  children: [\n                                    ClipRRect(\n                                      borderRadius: BorderRadius.circular(12),\n                                      child: Image.memory(\n                                        _imageBytes![index],\n                                        width: 90,\n                                        height: 100,\n                                        fit: BoxFit.cover,\n                                      ),\n                                    ),\n                                    Positioned(\n                                      top: 0,\n                                      right: 0,\n                                      child: IconButton(\n                                        icon: const Icon(Icons.cancel, color: Colors.red),\n                                        onPressed: () => _removeImage(index),\n                                      ),\n                                    ),\n                                  ],\n                                ),\n                              );\n                            },\n                          ),\n                        ),\n                      const SizedBox(height: 20),\n                      Center(\n                        child: ElevatedButton(\n                          onPressed: _isLoading ? null : _submitData,\n                          child: Text(\n                            _isLoading ? 'Uploading...' : 'Submit',\n                            style: const TextStyle(color: Colors.white, fontWeight: FontWeight.bold),\n                          ),\n                          style: ElevatedButton.styleFrom(\n                            backgroundColor: Colors.deepOrange,\n                          ),\n                        ),\n                      ),\n                    ],\n                  ),\n                ),\n              ),\n            ),\n          ),\n        ),\n      ),\n    );\n  }\n}\n"
        }
    ]
}