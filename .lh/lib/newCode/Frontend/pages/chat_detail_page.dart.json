{
    "sourceFile": "lib/newCode/Frontend/pages/chat_detail_page.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1756118390303,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1756118404026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n import 'package:flutter/material.dart';\n import 'package:image_picker/image_picker.dart';\n import 'package:intl/intl.dart';\n import 'package:l_f/Backend/chat_service.dart';\n+import 'package:l_f/newCode/Frontend/components/message_bubble.dart';\n import 'package:l_f/services/user_service.dart';\n import 'package:l_f/Frontend/components/message_bubble.dart';\n import 'package:l_f/Frontend/components/shimmer_skeleton.dart';\n import 'package:l_f/Frontend/Profile/user_see_page.dart';\n"
                },
                {
                    "date": 1756118410069,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n import 'package:image_picker/image_picker.dart';\n import 'package:intl/intl.dart';\n import 'package:l_f/Backend/chat_service.dart';\n import 'package:l_f/newCode/Frontend/components/message_bubble.dart';\n+import 'package:l_f/newCode/Frontend/components/shimmer_skeleton.dart';\n import 'package:l_f/services/user_service.dart';\n import 'package:l_f/Frontend/components/message_bubble.dart';\n import 'package:l_f/Frontend/components/shimmer_skeleton.dart';\n import 'package:l_f/Frontend/Profile/user_see_page.dart';\n"
                },
                {
                    "date": 1756118416286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n import 'package:intl/intl.dart';\n import 'package:l_f/Backend/chat_service.dart';\n import 'package:l_f/newCode/Frontend/components/message_bubble.dart';\n import 'package:l_f/newCode/Frontend/components/shimmer_skeleton.dart';\n+import 'package:l_f/newCode/service/user_service.dart';\n import 'package:l_f/services/user_service.dart';\n import 'package:l_f/Frontend/components/message_bubble.dart';\n import 'package:l_f/Frontend/components/shimmer_skeleton.dart';\n import 'package:l_f/Frontend/Profile/user_see_page.dart';\n"
                },
                {
                    "date": 1756118423989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,14 +5,13 @@\n import 'package:flutter/material.dart';\n import 'package:image_picker/image_picker.dart';\n import 'package:intl/intl.dart';\n import 'package:l_f/Backend/chat_service.dart';\n+import 'package:l_f/newCode/Backend/chat_service.dart';\n import 'package:l_f/newCode/Frontend/components/message_bubble.dart';\n import 'package:l_f/newCode/Frontend/components/shimmer_skeleton.dart';\n import 'package:l_f/newCode/service/user_service.dart';\n-import 'package:l_f/services/user_service.dart';\n-import 'package:l_f/Frontend/components/message_bubble.dart';\n-import 'package:l_f/Frontend/components/shimmer_skeleton.dart';\n+\n import 'package:l_f/Frontend/Profile/user_see_page.dart';\n \n class ChatDetailPage extends StatefulWidget {\n   final String otherUserId;\n"
                },
                {
                    "date": 1756119110363,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,19 +1,17 @@\n // lib/Frontend/pages/chat_detail_page.dart\n import 'dart:io';\n+\n import 'package:cloud_firestore/cloud_firestore.dart';\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:flutter/material.dart';\n import 'package:image_picker/image_picker.dart';\n-import 'package:intl/intl.dart';\n-import 'package:l_f/Backend/chat_service.dart';\n+import 'package:l_f/Frontend/Profile/user_see_page.dart';\n import 'package:l_f/newCode/Backend/chat_service.dart';\n import 'package:l_f/newCode/Frontend/components/message_bubble.dart';\n import 'package:l_f/newCode/Frontend/components/shimmer_skeleton.dart';\n import 'package:l_f/newCode/service/user_service.dart';\n \n-import 'package:l_f/Frontend/Profile/user_see_page.dart';\n-\n class ChatDetailPage extends StatefulWidget {\n   final String otherUserId;\n   const ChatDetailPage({required this.otherUserId, super.key});\n \n@@ -46,9 +44,10 @@\n           }\n \n           var userData = snapshot.data!;\n           String name = userData['name'] ?? 'Unknown User';\n-          String profileImage = userData['profileImage'] ?? 'https://placehold.co/100x100/png';\n+          String profileImage =\n+              userData['profileImage'] ?? 'https://placehold.co/100x100/png';\n \n           return Column(\n             children: [\n               _buildUserProfileSection(name, profileImage),\n@@ -65,9 +64,10 @@\n     return GestureDetector(\n       onTap: () {\n         Navigator.push(\n           context,\n-          MaterialPageRoute(builder: (_) => ProfilePage2(uid: widget.otherUserId)),\n+          MaterialPageRoute(\n+              builder: (_) => 2(uid: widget.otherUserId)),\n         );\n       },\n       child: Card(\n         elevation: 2,\n@@ -75,10 +75,12 @@\n           leading: CircleAvatar(\n             radius: 30,\n             backgroundImage: NetworkImage(profileImage),\n           ),\n-          title: Text(name, style: const TextStyle(fontWeight: FontWeight.bold)),\n-          subtitle: const Text('...'), // You can display online status here if implemented\n+          title:\n+              Text(name, style: const TextStyle(fontWeight: FontWeight.bold)),\n+          subtitle: const Text(\n+              '...'), // You can display online status here if implemented\n         ),\n       ),\n     );\n   }\n@@ -98,19 +100,21 @@\n         }\n \n         final messages = snapshot.data!.docs.where((doc) {\n           var data = doc.data() as Map<String, dynamic>;\n-          return (data['senderId'] == currentUser!.uid && data['receiverId'] == widget.otherUserId) ||\n-                 (data['senderId'] == widget.otherUserId && data['receiverId'] == currentUser!.uid);\n+          return (data['senderId'] == currentUser!.uid &&\n+                  data['receiverId'] == widget.otherUserId) ||\n+              (data['senderId'] == widget.otherUserId &&\n+                  data['receiverId'] == currentUser!.uid);\n         }).toList();\n \n         return ListView.builder(\n           reverse: true,\n           itemCount: messages.length,\n           itemBuilder: (context, index) {\n             var message = messages[index];\n             var data = message.data() as Map<String, dynamic>;\n-            \n+\n             final isSentByUser = data['senderId'] == currentUser!.uid;\n             final messageText = data['message'] ?? '';\n             final mediaUrl = data['mediaUrl'] ?? '';\n             final mediaType = data['mediaType'] ?? '';\n@@ -121,9 +125,12 @@\n               mediaUrl: mediaUrl,\n               mediaType: mediaType,\n               isSentByUser: isSentByUser,\n               timestamp: timestamp,\n-              onLongPress: isSentByUser ? () => _showEditDeleteDialog(message.id, messageText, mediaUrl) : null,\n+              onLongPress: isSentByUser\n+                  ? () =>\n+                      _showEditDeleteDialog(message.id, messageText, mediaUrl)\n+                  : null,\n             );\n           },\n         );\n       },\n@@ -168,9 +175,10 @@\n   }\n \n   Future<void> _pickImageOrVideo() async {\n     final picker = ImagePicker();\n-    final XFile? pickedFile = await picker.pickImage(source: ImageSource.gallery);\n+    final XFile? pickedFile =\n+        await picker.pickImage(source: ImageSource.gallery);\n \n     if (pickedFile != null) {\n       File file = File(pickedFile.path);\n       String fileUrl = await _chatService.uploadFile(file);\n@@ -185,9 +193,10 @@\n       }\n     }\n   }\n \n-  void _showEditDeleteDialog(String messageId, String oldText, String mediaUrl) {\n+  void _showEditDeleteDialog(\n+      String messageId, String oldText, String mediaUrl) {\n     showModalBottomSheet(\n       context: context,\n       builder: (context) => Column(\n         mainAxisSize: MainAxisSize.min,\n@@ -213,9 +222,10 @@\n     );\n   }\n \n   void _showEditMessageDialog(String messageId, String oldText) {\n-    final TextEditingController editController = TextEditingController(text: oldText);\n+    final TextEditingController editController =\n+        TextEditingController(text: oldText);\n     showDialog(\n       context: context,\n       builder: (context) {\n         return AlertDialog(\n"
                },
                {
                    "date": 1756119116110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n       onTap: () {\n         Navigator.push(\n           context,\n           MaterialPageRoute(\n-              builder: (_) => 2(uid: widget.otherUserId)),\n+              builder: (_) => (uid: widget.otherUserId)),\n         );\n       },\n       child: Card(\n         elevation: 2,\n"
                },
                {
                    "date": 1756119126048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n import 'package:l_f/Frontend/Profile/user_see_page.dart';\n import 'package:l_f/newCode/Backend/chat_service.dart';\n import 'package:l_f/newCode/Frontend/components/message_bubble.dart';\n import 'package:l_f/newCode/Frontend/components/shimmer_skeleton.dart';\n+import 'package:l_f/newCode/Frontend/pages/profile/profile_page.dart';\n import 'package:l_f/newCode/service/user_service.dart';\n \n class ChatDetailPage extends StatefulWidget {\n   final String otherUserId;\n@@ -65,9 +66,9 @@\n       onTap: () {\n         Navigator.push(\n           context,\n           MaterialPageRoute(\n-              builder: (_) => (uid: widget.otherUserId)),\n+              builder: (_) => ProfilePage(uid: widget.otherUserId)),\n         );\n       },\n       child: Card(\n         elevation: 2,\n"
                },
                {
                    "date": 1756119137333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,8 @@\n import 'package:cloud_firestore/cloud_firestore.dart';\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:flutter/material.dart';\n import 'package:image_picker/image_picker.dart';\n-import 'package:l_f/Frontend/Profile/user_see_page.dart';\n import 'package:l_f/newCode/Backend/chat_service.dart';\n import 'package:l_f/newCode/Frontend/components/message_bubble.dart';\n import 'package:l_f/newCode/Frontend/components/shimmer_skeleton.dart';\n import 'package:l_f/newCode/Frontend/pages/profile/profile_page.dart';\n"
                },
                {
                    "date": 1756119244228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n       onTap: () {\n         Navigator.push(\n           context,\n           MaterialPageRoute(\n-              builder: (_) => ProfilePage(uid: widget.otherUserId)),\n+              builder: (_) => (uid: widget.otherUserId)),\n         );\n       },\n       child: Card(\n         elevation: 2,\n"
                },
                {
                    "date": 1756119253066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n import 'package:l_f/newCode/Backend/chat_service.dart';\n import 'package:l_f/newCode/Frontend/components/message_bubble.dart';\n import 'package:l_f/newCode/Frontend/components/shimmer_skeleton.dart';\n import 'package:l_f/newCode/Frontend/pages/profile/profile_page.dart';\n+import 'package:l_f/newCode/Frontend/pages/profile/user_see_page.dart';\n import 'package:l_f/newCode/service/user_service.dart';\n \n class ChatDetailPage extends StatefulWidget {\n   final String otherUserId;\n@@ -65,9 +66,9 @@\n       onTap: () {\n         Navigator.push(\n           context,\n           MaterialPageRoute(\n-              builder: (_) => (uid: widget.otherUserId)),\n+              builder: (_) => UserSeePage(uid: widget.otherUserId)),\n         );\n       },\n       child: Card(\n         elevation: 2,\n"
                },
                {
                    "date": 1756119259222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,8 @@\n import 'package:image_picker/image_picker.dart';\n import 'package:l_f/newCode/Backend/chat_service.dart';\n import 'package:l_f/newCode/Frontend/components/message_bubble.dart';\n import 'package:l_f/newCode/Frontend/components/shimmer_skeleton.dart';\n-import 'package:l_f/newCode/Frontend/pages/profile/profile_page.dart';\n import 'package:l_f/newCode/Frontend/pages/profile/user_see_page.dart';\n import 'package:l_f/newCode/service/user_service.dart';\n \n class ChatDetailPage extends StatefulWidget {\n"
                },
                {
                    "date": 1756122965495,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,258 +1,258 @@\n-// lib/Frontend/pages/chat_detail_page.dart\n-import 'dart:io';\n+// // lib/Frontend/pages/chat_detail_page.dart\n+// import 'dart:io';\n \n-import 'package:cloud_firestore/cloud_firestore.dart';\n-import 'package:firebase_auth/firebase_auth.dart';\n-import 'package:flutter/material.dart';\n-import 'package:image_picker/image_picker.dart';\n-import 'package:l_f/newCode/Backend/chat_service.dart';\n-import 'package:l_f/newCode/Frontend/components/message_bubble.dart';\n-import 'package:l_f/newCode/Frontend/components/shimmer_skeleton.dart';\n-import 'package:l_f/newCode/Frontend/pages/profile/user_see_page.dart';\n-import 'package:l_f/newCode/service/user_service.dart';\n+// import 'package:cloud_firestore/cloud_firestore.dart';\n+// import 'package:firebase_auth/firebase_auth.dart';\n+// import 'package:flutter/material.dart';\n+// import 'package:image_picker/image_picker.dart';\n+// import 'package:l_f/newCode/Backend/chat_service.dart';\n+// import 'package:l_f/newCode/Frontend/components/message_bubble.dart';\n+// import 'package:l_f/newCode/Frontend/components/shimmer_skeleton.dart';\n+// import 'package:l_f/newCode/Frontend/pages/profile/user_see_page.dart';\n+// import 'package:l_f/newCode/service/user_service.dart';\n \n-class ChatDetailPage extends StatefulWidget {\n-  final String otherUserId;\n-  const ChatDetailPage({required this.otherUserId, super.key});\n+// class ChatDetailPage extends StatefulWidget {\n+//   final String otherUserId;\n+//   const ChatDetailPage({required this.otherUserId, super.key});\n \n-  @override\n-  _ChatDetailPageState createState() => _ChatDetailPageState();\n-}\n+//   @override\n+//   _ChatDetailPageState createState() => _ChatDetailPageState();\n+// }\n \n-class _ChatDetailPageState extends State<ChatDetailPage> {\n-  final TextEditingController _messageController = TextEditingController();\n-  final User? currentUser = FirebaseAuth.instance.currentUser;\n-  final ChatService _chatService = ChatService();\n-  final UserService _userService = UserService();\n+// class _ChatDetailPageState extends State<ChatDetailPage> {\n+//   final TextEditingController _messageController = TextEditingController();\n+//   final User? currentUser = FirebaseAuth.instance.currentUser;\n+//   final ChatService _chatService = ChatService();\n+//   final UserService _userService = UserService();\n \n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      appBar: AppBar(\n-        title: const Text(\"Chat\"),\n-        backgroundColor: Colors.deepOrange,\n-        foregroundColor: Colors.white,\n-      ),\n-      body: FutureBuilder<Map<String, dynamic>?>(\n-        future: _userService.fetchUserData(widget.otherUserId),\n-        builder: (context, snapshot) {\n-          if (snapshot.connectionState == ConnectionState.waiting) {\n-            return const Center(child: ShimmerSkeleton());\n-          }\n-          if (snapshot.hasError || !snapshot.hasData || snapshot.data == null) {\n-            return const Center(child: Text('User not found'));\n-          }\n+//   @override\n+//   Widget build(BuildContext context) {\n+//     return Scaffold(\n+//       appBar: AppBar(\n+//         title: const Text(\"Chat\"),\n+//         backgroundColor: Colors.deepOrange,\n+//         foregroundColor: Colors.white,\n+//       ),\n+//       body: FutureBuilder<Map<String, dynamic>?>(\n+//         future: _userService.fetchUserData(widget.otherUserId),\n+//         builder: (context, snapshot) {\n+//           if (snapshot.connectionState == ConnectionState.waiting) {\n+//             return const Center(child: ShimmerSkeleton());\n+//           }\n+//           if (snapshot.hasError || !snapshot.hasData || snapshot.data == null) {\n+//             return const Center(child: Text('User not found'));\n+//           }\n \n-          var userData = snapshot.data!;\n-          String name = userData['name'] ?? 'Unknown User';\n-          String profileImage =\n-              userData['profileImage'] ?? 'https://placehold.co/100x100/png';\n+//           var userData = snapshot.data!;\n+//           String name = userData['name'] ?? 'Unknown User';\n+//           String profileImage =\n+//               userData['profileImage'] ?? 'https://placehold.co/100x100/png';\n \n-          return Column(\n-            children: [\n-              _buildUserProfileSection(name, profileImage),\n-              Expanded(child: _buildChatSection()),\n-              _buildMessageInputSection(),\n-            ],\n-          );\n-        },\n-      ),\n-    );\n-  }\n+//           return Column(\n+//             children: [\n+//               _buildUserProfileSection(name, profileImage),\n+//               Expanded(child: _buildChatSection()),\n+//               _buildMessageInputSection(),\n+//             ],\n+//           );\n+//         },\n+//       ),\n+//     );\n+//   }\n \n-  Widget _buildUserProfileSection(String name, String profileImage) {\n-    return GestureDetector(\n-      onTap: () {\n-        Navigator.push(\n-          context,\n-          MaterialPageRoute(\n-              builder: (_) => UserSeePage(uid: widget.otherUserId)),\n-        );\n-      },\n-      child: Card(\n-        elevation: 2,\n-        child: ListTile(\n-          leading: CircleAvatar(\n-            radius: 30,\n-            backgroundImage: NetworkImage(profileImage),\n-          ),\n-          title:\n-              Text(name, style: const TextStyle(fontWeight: FontWeight.bold)),\n-          subtitle: const Text(\n-              '...'), // You can display online status here if implemented\n-        ),\n-      ),\n-    );\n-  }\n+//   Widget _buildUserProfileSection(String name, String profileImage) {\n+//     return GestureDetector(\n+//       onTap: () {\n+//         Navigator.push(\n+//           context,\n+//           MaterialPageRoute(\n+//               builder: (_) => UserSeePage(uid: widget.otherUserId)),\n+//         );\n+//       },\n+//       child: Card(\n+//         elevation: 2,\n+//         child: ListTile(\n+//           leading: CircleAvatar(\n+//             radius: 30,\n+//             backgroundImage: NetworkImage(profileImage),\n+//           ),\n+//           title:\n+//               Text(name, style: const TextStyle(fontWeight: FontWeight.bold)),\n+//           subtitle: const Text(\n+//               '...'), // You can display online status here if implemented\n+//         ),\n+//       ),\n+//     );\n+//   }\n \n-  Widget _buildChatSection() {\n-    return StreamBuilder<QuerySnapshot>(\n-      stream: _chatService.getChatMessages(widget.otherUserId),\n-      builder: (context, snapshot) {\n-        if (snapshot.connectionState == ConnectionState.waiting) {\n-          return const Center(child: ShimmerSkeleton());\n-        }\n-        if (snapshot.hasError) {\n-          return Center(child: Text('Error: ${snapshot.error}'));\n-        }\n-        if (!snapshot.hasData || snapshot.data!.docs.isEmpty) {\n-          return const Center(child: Text('No messages yet'));\n-        }\n+//   Widget _buildChatSection() {\n+//     return StreamBuilder<QuerySnapshot>(\n+//       stream: _chatService.getChatMessages(widget.otherUserId),\n+//       builder: (context, snapshot) {\n+//         if (snapshot.connectionState == ConnectionState.waiting) {\n+//           return const Center(child: ShimmerSkeleton());\n+//         }\n+//         if (snapshot.hasError) {\n+//           return Center(child: Text('Error: ${snapshot.error}'));\n+//         }\n+//         if (!snapshot.hasData || snapshot.data!.docs.isEmpty) {\n+//           return const Center(child: Text('No messages yet'));\n+//         }\n \n-        final messages = snapshot.data!.docs.where((doc) {\n-          var data = doc.data() as Map<String, dynamic>;\n-          return (data['senderId'] == currentUser!.uid &&\n-                  data['receiverId'] == widget.otherUserId) ||\n-              (data['senderId'] == widget.otherUserId &&\n-                  data['receiverId'] == currentUser!.uid);\n-        }).toList();\n+//         final messages = snapshot.data!.docs.where((doc) {\n+//           var data = doc.data() as Map<String, dynamic>;\n+//           return (data['senderId'] == currentUser!.uid &&\n+//                   data['receiverId'] == widget.otherUserId) ||\n+//               (data['senderId'] == widget.otherUserId &&\n+//                   data['receiverId'] == currentUser!.uid);\n+//         }).toList();\n \n-        return ListView.builder(\n-          reverse: true,\n-          itemCount: messages.length,\n-          itemBuilder: (context, index) {\n-            var message = messages[index];\n-            var data = message.data() as Map<String, dynamic>;\n+//         return ListView.builder(\n+//           reverse: true,\n+//           itemCount: messages.length,\n+//           itemBuilder: (context, index) {\n+//             var message = messages[index];\n+//             var data = message.data() as Map<String, dynamic>;\n \n-            final isSentByUser = data['senderId'] == currentUser!.uid;\n-            final messageText = data['message'] ?? '';\n-            final mediaUrl = data['mediaUrl'] ?? '';\n-            final mediaType = data['mediaType'] ?? '';\n-            final timestamp = (data['timestamp'] as Timestamp).toDate();\n+//             final isSentByUser = data['senderId'] == currentUser!.uid;\n+//             final messageText = data['message'] ?? '';\n+//             final mediaUrl = data['mediaUrl'] ?? '';\n+//             final mediaType = data['mediaType'] ?? '';\n+//             final timestamp = (data['timestamp'] as Timestamp).toDate();\n \n-            return MessageBubble(\n-              messageText: messageText,\n-              mediaUrl: mediaUrl,\n-              mediaType: mediaType,\n-              isSentByUser: isSentByUser,\n-              timestamp: timestamp,\n-              onLongPress: isSentByUser\n-                  ? () =>\n-                      _showEditDeleteDialog(message.id, messageText, mediaUrl)\n-                  : null,\n-            );\n-          },\n-        );\n-      },\n-    );\n-  }\n+//             return MessageBubble(\n+//               messageText: messageText,\n+//               mediaUrl: mediaUrl,\n+//               mediaType: mediaType,\n+//               isSentByUser: isSentByUser,\n+//               timestamp: timestamp,\n+//               onLongPress: isSentByUser\n+//                   ? () =>\n+//                       _showEditDeleteDialog(message.id, messageText, mediaUrl)\n+//                   : null,\n+//             );\n+//           },\n+//         );\n+//       },\n+//     );\n+//   }\n \n-  Widget _buildMessageInputSection() {\n-    return Padding(\n-      padding: const EdgeInsets.all(8.0),\n-      child: Row(\n-        children: [\n-          IconButton(\n-            icon: const Icon(Icons.photo),\n-            onPressed: _pickImageOrVideo,\n-          ),\n-          Expanded(\n-            child: TextFormField(\n-              controller: _messageController,\n-              decoration: const InputDecoration(\n-                labelText: 'Type your message...',\n-                border: OutlineInputBorder(),\n-              ),\n-              maxLines: null,\n-            ),\n-          ),\n-          IconButton(\n-            icon: const Icon(Icons.send),\n-            onPressed: () {\n-              final message = _messageController.text.trim();\n-              if (message.isNotEmpty) {\n-                _chatService.sendMessage(\n-                  receiverId: widget.otherUserId,\n-                  message: message,\n-                );\n-                _messageController.clear();\n-              }\n-            },\n-          ),\n-        ],\n-      ),\n-    );\n-  }\n+//   Widget _buildMessageInputSection() {\n+//     return Padding(\n+//       padding: const EdgeInsets.all(8.0),\n+//       child: Row(\n+//         children: [\n+//           IconButton(\n+//             icon: const Icon(Icons.photo),\n+//             onPressed: _pickImageOrVideo,\n+//           ),\n+//           Expanded(\n+//             child: TextFormField(\n+//               controller: _messageController,\n+//               decoration: const InputDecoration(\n+//                 labelText: 'Type your message...',\n+//                 border: OutlineInputBorder(),\n+//               ),\n+//               maxLines: null,\n+//             ),\n+//           ),\n+//           IconButton(\n+//             icon: const Icon(Icons.send),\n+//             onPressed: () {\n+//               final message = _messageController.text.trim();\n+//               if (message.isNotEmpty) {\n+//                 _chatService.sendMessage(\n+//                   receiverId: widget.otherUserId,\n+//                   message: message,\n+//                 );\n+//                 _messageController.clear();\n+//               }\n+//             },\n+//           ),\n+//         ],\n+//       ),\n+//     );\n+//   }\n \n-  Future<void> _pickImageOrVideo() async {\n-    final picker = ImagePicker();\n-    final XFile? pickedFile =\n-        await picker.pickImage(source: ImageSource.gallery);\n+//   Future<void> _pickImageOrVideo() async {\n+//     final picker = ImagePicker();\n+//     final XFile? pickedFile =\n+//         await picker.pickImage(source: ImageSource.gallery);\n \n-    if (pickedFile != null) {\n-      File file = File(pickedFile.path);\n-      String fileUrl = await _chatService.uploadFile(file);\n+//     if (pickedFile != null) {\n+//       File file = File(pickedFile.path);\n+//       String fileUrl = await _chatService.uploadFile(file);\n \n-      if (fileUrl.isNotEmpty) {\n-        _chatService.sendMessageWithMedia(\n-          receiverId: widget.otherUserId,\n-          message: '',\n-          fileUrl: fileUrl,\n-          mediaType: 'image',\n-        );\n-      }\n-    }\n-  }\n+//       if (fileUrl.isNotEmpty) {\n+//         _chatService.sendMessageWithMedia(\n+//           receiverId: widget.otherUserId,\n+//           message: '',\n+//           fileUrl: fileUrl,\n+//           mediaType: 'image',\n+//         );\n+//       }\n+//     }\n+//   }\n \n-  void _showEditDeleteDialog(\n-      String messageId, String oldText, String mediaUrl) {\n-    showModalBottomSheet(\n-      context: context,\n-      builder: (context) => Column(\n-        mainAxisSize: MainAxisSize.min,\n-        children: [\n-          ListTile(\n-            leading: const Icon(Icons.edit),\n-            title: const Text('Edit'),\n-            onTap: () {\n-              Navigator.pop(context);\n-              _showEditMessageDialog(messageId, oldText);\n-            },\n-          ),\n-          ListTile(\n-            leading: const Icon(Icons.delete),\n-            title: const Text('Delete'),\n-            onTap: () {\n-              Navigator.pop(context);\n-              _chatService.deleteMessage(messageId, mediaUrl);\n-            },\n-          ),\n-        ],\n-      ),\n-    );\n-  }\n+//   void _showEditDeleteDialog(\n+//       String messageId, String oldText, String mediaUrl) {\n+//     showModalBottomSheet(\n+//       context: context,\n+//       builder: (context) => Column(\n+//         mainAxisSize: MainAxisSize.min,\n+//         children: [\n+//           ListTile(\n+//             leading: const Icon(Icons.edit),\n+//             title: const Text('Edit'),\n+//             onTap: () {\n+//               Navigator.pop(context);\n+//               _showEditMessageDialog(messageId, oldText);\n+//             },\n+//           ),\n+//           ListTile(\n+//             leading: const Icon(Icons.delete),\n+//             title: const Text('Delete'),\n+//             onTap: () {\n+//               Navigator.pop(context);\n+//               _chatService.deleteMessage(messageId, mediaUrl);\n+//             },\n+//           ),\n+//         ],\n+//       ),\n+//     );\n+//   }\n \n-  void _showEditMessageDialog(String messageId, String oldText) {\n-    final TextEditingController editController =\n-        TextEditingController(text: oldText);\n-    showDialog(\n-      context: context,\n-      builder: (context) {\n-        return AlertDialog(\n-          title: const Text(\"Edit Message\"),\n-          content: TextField(\n-            controller: editController,\n-            maxLines: null,\n-            decoration: const InputDecoration(hintText: \"Enter new message\"),\n-          ),\n-          actions: [\n-            TextButton(\n-              onPressed: () => Navigator.pop(context),\n-              child: const Text(\"Cancel\"),\n-            ),\n-            TextButton(\n-              onPressed: () async {\n-                String updatedText = editController.text.trim();\n-                if (updatedText.isNotEmpty) {\n-                  await _chatService.updateMessage(messageId, updatedText);\n-                }\n-                Navigator.pop(context);\n-              },\n-              child: const Text(\"Save\"),\n-            ),\n-          ],\n-        );\n-      },\n-    );\n-  }\n-}\n+//   void _showEditMessageDialog(String messageId, String oldText) {\n+//     final TextEditingController editController =\n+//         TextEditingController(text: oldText);\n+//     showDialog(\n+//       context: context,\n+//       builder: (context) {\n+//         return AlertDialog(\n+//           title: const Text(\"Edit Message\"),\n+//           content: TextField(\n+//             controller: editController,\n+//             maxLines: null,\n+//             decoration: const InputDecoration(hintText: \"Enter new message\"),\n+//           ),\n+//           actions: [\n+//             TextButton(\n+//               onPressed: () => Navigator.pop(context),\n+//               child: const Text(\"Cancel\"),\n+//             ),\n+//             TextButton(\n+//               onPressed: () async {\n+//                 String updatedText = editController.text.trim();\n+//                 if (updatedText.isNotEmpty) {\n+//                   await _chatService.updateMessage(messageId, updatedText);\n+//                 }\n+//                 Navigator.pop(context);\n+//               },\n+//               child: const Text(\"Save\"),\n+//             ),\n+//           ],\n+//         );\n+//       },\n+//     );\n+//   }\n+// }\n"
                }
            ],
            "date": 1756118390303,
            "name": "Commit-0",
            "content": "// lib/Frontend/pages/chat_detail_page.dart\nimport 'dart:io';\nimport 'package:cloud_firestore/cloud_firestore.dart';\nimport 'package:firebase_auth/firebase_auth.dart';\nimport 'package:flutter/material.dart';\nimport 'package:image_picker/image_picker.dart';\nimport 'package:intl/intl.dart';\nimport 'package:l_f/Backend/chat_service.dart';\nimport 'package:l_f/services/user_service.dart';\nimport 'package:l_f/Frontend/components/message_bubble.dart';\nimport 'package:l_f/Frontend/components/shimmer_skeleton.dart';\nimport 'package:l_f/Frontend/Profile/user_see_page.dart';\n\nclass ChatDetailPage extends StatefulWidget {\n  final String otherUserId;\n  const ChatDetailPage({required this.otherUserId, super.key});\n\n  @override\n  _ChatDetailPageState createState() => _ChatDetailPageState();\n}\n\nclass _ChatDetailPageState extends State<ChatDetailPage> {\n  final TextEditingController _messageController = TextEditingController();\n  final User? currentUser = FirebaseAuth.instance.currentUser;\n  final ChatService _chatService = ChatService();\n  final UserService _userService = UserService();\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: const Text(\"Chat\"),\n        backgroundColor: Colors.deepOrange,\n        foregroundColor: Colors.white,\n      ),\n      body: FutureBuilder<Map<String, dynamic>?>(\n        future: _userService.fetchUserData(widget.otherUserId),\n        builder: (context, snapshot) {\n          if (snapshot.connectionState == ConnectionState.waiting) {\n            return const Center(child: ShimmerSkeleton());\n          }\n          if (snapshot.hasError || !snapshot.hasData || snapshot.data == null) {\n            return const Center(child: Text('User not found'));\n          }\n\n          var userData = snapshot.data!;\n          String name = userData['name'] ?? 'Unknown User';\n          String profileImage = userData['profileImage'] ?? 'https://placehold.co/100x100/png';\n\n          return Column(\n            children: [\n              _buildUserProfileSection(name, profileImage),\n              Expanded(child: _buildChatSection()),\n              _buildMessageInputSection(),\n            ],\n          );\n        },\n      ),\n    );\n  }\n\n  Widget _buildUserProfileSection(String name, String profileImage) {\n    return GestureDetector(\n      onTap: () {\n        Navigator.push(\n          context,\n          MaterialPageRoute(builder: (_) => ProfilePage2(uid: widget.otherUserId)),\n        );\n      },\n      child: Card(\n        elevation: 2,\n        child: ListTile(\n          leading: CircleAvatar(\n            radius: 30,\n            backgroundImage: NetworkImage(profileImage),\n          ),\n          title: Text(name, style: const TextStyle(fontWeight: FontWeight.bold)),\n          subtitle: const Text('...'), // You can display online status here if implemented\n        ),\n      ),\n    );\n  }\n\n  Widget _buildChatSection() {\n    return StreamBuilder<QuerySnapshot>(\n      stream: _chatService.getChatMessages(widget.otherUserId),\n      builder: (context, snapshot) {\n        if (snapshot.connectionState == ConnectionState.waiting) {\n          return const Center(child: ShimmerSkeleton());\n        }\n        if (snapshot.hasError) {\n          return Center(child: Text('Error: ${snapshot.error}'));\n        }\n        if (!snapshot.hasData || snapshot.data!.docs.isEmpty) {\n          return const Center(child: Text('No messages yet'));\n        }\n\n        final messages = snapshot.data!.docs.where((doc) {\n          var data = doc.data() as Map<String, dynamic>;\n          return (data['senderId'] == currentUser!.uid && data['receiverId'] == widget.otherUserId) ||\n                 (data['senderId'] == widget.otherUserId && data['receiverId'] == currentUser!.uid);\n        }).toList();\n\n        return ListView.builder(\n          reverse: true,\n          itemCount: messages.length,\n          itemBuilder: (context, index) {\n            var message = messages[index];\n            var data = message.data() as Map<String, dynamic>;\n            \n            final isSentByUser = data['senderId'] == currentUser!.uid;\n            final messageText = data['message'] ?? '';\n            final mediaUrl = data['mediaUrl'] ?? '';\n            final mediaType = data['mediaType'] ?? '';\n            final timestamp = (data['timestamp'] as Timestamp).toDate();\n\n            return MessageBubble(\n              messageText: messageText,\n              mediaUrl: mediaUrl,\n              mediaType: mediaType,\n              isSentByUser: isSentByUser,\n              timestamp: timestamp,\n              onLongPress: isSentByUser ? () => _showEditDeleteDialog(message.id, messageText, mediaUrl) : null,\n            );\n          },\n        );\n      },\n    );\n  }\n\n  Widget _buildMessageInputSection() {\n    return Padding(\n      padding: const EdgeInsets.all(8.0),\n      child: Row(\n        children: [\n          IconButton(\n            icon: const Icon(Icons.photo),\n            onPressed: _pickImageOrVideo,\n          ),\n          Expanded(\n            child: TextFormField(\n              controller: _messageController,\n              decoration: const InputDecoration(\n                labelText: 'Type your message...',\n                border: OutlineInputBorder(),\n              ),\n              maxLines: null,\n            ),\n          ),\n          IconButton(\n            icon: const Icon(Icons.send),\n            onPressed: () {\n              final message = _messageController.text.trim();\n              if (message.isNotEmpty) {\n                _chatService.sendMessage(\n                  receiverId: widget.otherUserId,\n                  message: message,\n                );\n                _messageController.clear();\n              }\n            },\n          ),\n        ],\n      ),\n    );\n  }\n\n  Future<void> _pickImageOrVideo() async {\n    final picker = ImagePicker();\n    final XFile? pickedFile = await picker.pickImage(source: ImageSource.gallery);\n\n    if (pickedFile != null) {\n      File file = File(pickedFile.path);\n      String fileUrl = await _chatService.uploadFile(file);\n\n      if (fileUrl.isNotEmpty) {\n        _chatService.sendMessageWithMedia(\n          receiverId: widget.otherUserId,\n          message: '',\n          fileUrl: fileUrl,\n          mediaType: 'image',\n        );\n      }\n    }\n  }\n\n  void _showEditDeleteDialog(String messageId, String oldText, String mediaUrl) {\n    showModalBottomSheet(\n      context: context,\n      builder: (context) => Column(\n        mainAxisSize: MainAxisSize.min,\n        children: [\n          ListTile(\n            leading: const Icon(Icons.edit),\n            title: const Text('Edit'),\n            onTap: () {\n              Navigator.pop(context);\n              _showEditMessageDialog(messageId, oldText);\n            },\n          ),\n          ListTile(\n            leading: const Icon(Icons.delete),\n            title: const Text('Delete'),\n            onTap: () {\n              Navigator.pop(context);\n              _chatService.deleteMessage(messageId, mediaUrl);\n            },\n          ),\n        ],\n      ),\n    );\n  }\n\n  void _showEditMessageDialog(String messageId, String oldText) {\n    final TextEditingController editController = TextEditingController(text: oldText);\n    showDialog(\n      context: context,\n      builder: (context) {\n        return AlertDialog(\n          title: const Text(\"Edit Message\"),\n          content: TextField(\n            controller: editController,\n            maxLines: null,\n            decoration: const InputDecoration(hintText: \"Enter new message\"),\n          ),\n          actions: [\n            TextButton(\n              onPressed: () => Navigator.pop(context),\n              child: const Text(\"Cancel\"),\n            ),\n            TextButton(\n              onPressed: () async {\n                String updatedText = editController.text.trim();\n                if (updatedText.isNotEmpty) {\n                  await _chatService.updateMessage(messageId, updatedText);\n                }\n                Navigator.pop(context);\n              },\n              child: const Text(\"Save\"),\n            ),\n          ],\n        );\n      },\n    );\n  }\n}\n"
        }
    ]
}