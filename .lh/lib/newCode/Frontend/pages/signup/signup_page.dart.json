{
    "sourceFile": "lib/newCode/Frontend/pages/signup/signup_page.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1756115140951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1756115202857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n import 'package:l_f/Frontend/components/custom_text_field.dart';\n import 'package:l_f/Frontend/components/custom_dropdown_field.dart';\n import 'package:l_f/Frontend/pages/login_page.dart';\n import 'package:firebase_auth/firebase_auth.dart';\n+import 'package:l_f/newCode/Frontend/pages/Login/login_page.dart';\n \n // Assuming you have a file for these constants.\n const List<String> degreesList = ['B.Tech', 'M.Tech', 'MSc', 'PhD'];\n const List<String> departmentList = ['CS', 'EE', 'ME'];\n"
                },
                {
                    "date": 1756115208972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n import 'package:l_f/Frontend/components/custom_text_field.dart';\n import 'package:l_f/Frontend/components/custom_dropdown_field.dart';\n import 'package:l_f/Frontend/pages/login_page.dart';\n import 'package:firebase_auth/firebase_auth.dart';\n+import 'package:l_f/newCode/Frontend/components/custom_dropdown_field.dart';\n import 'package:l_f/newCode/Frontend/pages/Login/login_page.dart';\n \n // Assuming you have a file for these constants.\n const List<String> degreesList = ['B.Tech', 'M.Tech', 'MSc', 'PhD'];\n"
                },
                {
                    "date": 1756115216087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n import 'package:l_f/Frontend/components/custom_dropdown_field.dart';\n import 'package:l_f/Frontend/pages/login_page.dart';\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:l_f/newCode/Frontend/components/custom_dropdown_field.dart';\n+import 'package:l_f/newCode/Frontend/components/custom_text_field.dart';\n import 'package:l_f/newCode/Frontend/pages/Login/login_page.dart';\n \n // Assuming you have a file for these constants.\n const List<String> degreesList = ['B.Tech', 'M.Tech', 'MSc', 'PhD'];\n"
                },
                {
                    "date": 1756115223083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n import 'package:l_f/Frontend/components/custom_text_field.dart';\n import 'package:l_f/Frontend/components/custom_dropdown_field.dart';\n import 'package:l_f/Frontend/pages/login_page.dart';\n import 'package:firebase_auth/firebase_auth.dart';\n+import 'package:l_f/newCode/Backend/validator.dart';\n import 'package:l_f/newCode/Frontend/components/custom_dropdown_field.dart';\n import 'package:l_f/newCode/Frontend/components/custom_text_field.dart';\n import 'package:l_f/newCode/Frontend/pages/Login/login_page.dart';\n \n"
                },
                {
                    "date": 1756115228566,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n import 'package:l_f/Frontend/components/custom_text_field.dart';\n import 'package:l_f/Frontend/components/custom_dropdown_field.dart';\n import 'package:l_f/Frontend/pages/login_page.dart';\n import 'package:firebase_auth/firebase_auth.dart';\n+import 'package:l_f/newCode/Backend/auth_service.dart';\n import 'package:l_f/newCode/Backend/validator.dart';\n import 'package:l_f/newCode/Frontend/components/custom_dropdown_field.dart';\n import 'package:l_f/newCode/Frontend/components/custom_text_field.dart';\n import 'package:l_f/newCode/Frontend/pages/Login/login_page.dart';\n"
                },
                {
                    "date": 1756115237089,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,8 @@\n // lib/Frontend/pages/signup_page.dart\n import 'package:flutter/material.dart';\n import 'package:l_f/Backend/auth_service.dart';\n-import 'package:l_f/Backend/validator.dart';\n-import 'package:l_f/Frontend/components/custom_text_field.dart';\n-import 'package:l_f/Frontend/components/custom_dropdown_field.dart';\n-import 'package:l_f/Frontend/pages/login_page.dart';\n+\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:l_f/newCode/Backend/auth_service.dart';\n import 'package:l_f/newCode/Backend/validator.dart';\n import 'package:l_f/newCode/Frontend/components/custom_dropdown_field.dart';\n"
                },
                {
                    "date": 1756115242512,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,7 @@\n // lib/Frontend/pages/signup_page.dart\n+import 'package:firebase_auth/firebase_auth.dart';\n import 'package:flutter/material.dart';\n-import 'package:l_f/Backend/auth_service.dart';\n-\n-import 'package:firebase_auth/firebase_auth.dart';\n import 'package:l_f/newCode/Backend/auth_service.dart';\n import 'package:l_f/newCode/Backend/validator.dart';\n import 'package:l_f/newCode/Frontend/components/custom_dropdown_field.dart';\n import 'package:l_f/newCode/Frontend/components/custom_text_field.dart';\n@@ -11,9 +9,14 @@\n \n // Assuming you have a file for these constants.\n const List<String> degreesList = ['B.Tech', 'M.Tech', 'MSc', 'PhD'];\n const List<String> departmentList = ['CS', 'EE', 'ME'];\n-const List<String> btechyearsList = ['1st Year', '2nd Year', '3rd Year', '4th Year'];\n+const List<String> btechyearsList = [\n+  '1st Year',\n+  '2nd Year',\n+  '3rd Year',\n+  '4th Year'\n+];\n const List<String> mscMtechList = ['1st Year', '2nd Year'];\n const List<String> girlshostelsList = ['G-1', 'G-2'];\n const List<String> boyshostelsList = ['B-1', 'B-2', 'B-3'];\n \n@@ -46,9 +49,10 @@\n     if (!_formKey.currentState!.validate()) {\n       return;\n     }\n \n-    if (!Validator.isValidCollegeEmail(_emailController.text, _expectedDomain)) {\n+    if (!Validator.isValidCollegeEmail(\n+        _emailController.text, _expectedDomain)) {\n       ScaffoldMessenger.of(context).showSnackBar(\n         const SnackBar(\n           content: Text('Please use your college email address.'),\n           backgroundColor: Colors.deepOrange,\n@@ -82,9 +86,10 @@\n       );\n \n       ScaffoldMessenger.of(context).showSnackBar(\n         const SnackBar(\n-          content: Text('Verification email has been sent. Please check your inbox.'),\n+          content: Text(\n+              'Verification email has been sent. Please check your inbox.'),\n           backgroundColor: Colors.deepOrange,\n         ),\n       );\n \n@@ -106,9 +111,9 @@\n   @override\n   Widget build(BuildContext context) {\n     bool isMobile = MediaQuery.of(context).size.width < 830;\n     Size size = MediaQuery.of(context).size;\n-    \n+\n     return Scaffold(\n       body: _isLoading\n           ? const Center(child: CircularProgressIndicator())\n           : Center(\n@@ -120,9 +125,10 @@\n                     mainAxisAlignment: MainAxisAlignment.center,\n                     children: [\n                       const Text(\n                         'Create an Account',\n-                        style: TextStyle(fontSize: 32, fontWeight: FontWeight.bold),\n+                        style: TextStyle(\n+                            fontSize: 32, fontWeight: FontWeight.bold),\n                       ),\n                       const SizedBox(height: 32),\n                       Container(\n                         width: isMobile ? size.width * 0.8 : size.width * 0.6,\n@@ -143,33 +149,43 @@\n                             CustomTextField(\n                               controller: _nameController,\n                               label: 'Name',\n                               icon: Icons.person,\n-                              validator: (value) => value!.isEmpty ? 'Please enter your name' : null,\n+                              validator: (value) => value!.isEmpty\n+                                  ? 'Please enter your name'\n+                                  : null,\n                             ),\n                             const SizedBox(height: 16),\n                             CustomTextField(\n                               controller: _emailController,\n                               label: 'Email',\n                               icon: Icons.email,\n                               keyboardType: TextInputType.emailAddress,\n-                              validator: (value) => value!.isEmpty ? 'Please enter your email' : null,\n+                              validator: (value) => value!.isEmpty\n+                                  ? 'Please enter your email'\n+                                  : null,\n                             ),\n                             const SizedBox(height: 16),\n                             CustomTextField(\n                               controller: _phoneController,\n                               label: 'Phone Number',\n                               icon: Icons.phone,\n                               keyboardType: TextInputType.phone,\n-                              validator: (value) => value!.isEmpty || value.length < 10 ? 'Invalid phone number' : null,\n+                              validator: (value) =>\n+                                  value!.isEmpty || value.length < 10\n+                                      ? 'Invalid phone number'\n+                                      : null,\n                             ),\n                             const SizedBox(height: 16),\n                             CustomTextField(\n                               controller: _passwordController,\n                               label: 'Password',\n                               icon: Icons.lock,\n                               obscureText: true,\n-                              validator: (value) => value!.isEmpty || value.length < 6 ? 'Password must be at least 6 characters' : null,\n+                              validator: (value) =>\n+                                  value!.isEmpty || value.length < 6\n+                                      ? 'Password must be at least 6 characters'\n+                                      : null,\n                             ),\n                             const SizedBox(height: 22),\n                             CustomDropdownField<String>(\n                               label: 'Degree',\n@@ -179,9 +195,11 @@\n                                 setState(() {\n                                   _selectedDegree = newValue;\n                                 });\n                               },\n-                              validator: (value) => value == null ? 'Please select your degree' : null,\n+                              validator: (value) => value == null\n+                                  ? 'Please select your degree'\n+                                  : null,\n                             ),\n                             const SizedBox(height: 16),\n                             CustomDropdownField<String>(\n                               label: 'Department',\n@@ -191,24 +209,29 @@\n                                 setState(() {\n                                   _selectedDepartment = newValue;\n                                 });\n                               },\n-                              validator: (value) => value == null ? 'Please select your department' : null,\n+                              validator: (value) => value == null\n+                                  ? 'Please select your department'\n+                                  : null,\n                             ),\n                             const SizedBox(height: 16),\n                             if (_selectedDegree != 'PhD')\n                               CustomDropdownField<String>(\n                                 label: 'Year',\n                                 value: _selectYear,\n-                                items: _selectedDegree == 'MSc' || _selectedDegree == 'MTech'\n+                                items: _selectedDegree == 'MSc' ||\n+                                        _selectedDegree == 'MTech'\n                                     ? mscMtechList\n                                     : btechyearsList,\n                                 onChanged: (newValue) {\n                                   setState(() {\n                                     _selectYear = newValue;\n                                   });\n                                 },\n-                                validator: (value) => value == null ? 'Please select your year' : null,\n+                                validator: (value) => value == null\n+                                    ? 'Please select your year'\n+                                    : null,\n                               ),\n                             const SizedBox(height: 16),\n                             CustomDropdownField<String>(\n                               label: 'Gender',\n@@ -219,21 +242,27 @@\n                                   _selectedGender = newValue;\n                                   _selectedHostel = null;\n                                 });\n                               },\n-                              validator: (value) => value == null ? 'Please select your gender' : null,\n+                              validator: (value) => value == null\n+                                  ? 'Please select your gender'\n+                                  : null,\n                             ),\n                             const SizedBox(height: 16),\n                             CustomDropdownField<String>(\n                               label: 'Hostel',\n                               value: _selectedHostel,\n-                              items: _selectedGender == 'Female' ? girlshostelsList : boyshostelsList,\n+                              items: _selectedGender == 'Female'\n+                                  ? girlshostelsList\n+                                  : boyshostelsList,\n                               onChanged: (newValue) {\n                                 setState(() {\n                                   _selectedHostel = newValue;\n                                 });\n                               },\n-                              validator: (value) => value == null ? 'Please select your hostel' : null,\n+                              validator: (value) => value == null\n+                                  ? 'Please select your hostel'\n+                                  : null,\n                             ),\n                             const SizedBox(height: 32),\n                             ElevatedButton(\n                               onPressed: _signUpUser,\n@@ -243,9 +272,10 @@\n                             TextButton(\n                               onPressed: () {\n                                 Navigator.push(\n                                   context,\n-                                  MaterialPageRoute(builder: (_) => const LoginPage()),\n+                                  MaterialPageRoute(\n+                                      builder: (_) => const LoginPage()),\n                                 );\n                               },\n                               child: const Text(\n                                 'Already have an account? Sign In',\n"
                },
                {
                    "date": 1756122969464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,298 +1,298 @@\n-// lib/Frontend/pages/signup_page.dart\n-import 'package:firebase_auth/firebase_auth.dart';\n-import 'package:flutter/material.dart';\n-import 'package:l_f/newCode/Backend/auth_service.dart';\n-import 'package:l_f/newCode/Backend/validator.dart';\n-import 'package:l_f/newCode/Frontend/components/custom_dropdown_field.dart';\n-import 'package:l_f/newCode/Frontend/components/custom_text_field.dart';\n-import 'package:l_f/newCode/Frontend/pages/Login/login_page.dart';\n+// // lib/Frontend/pages/signup_page.dart\n+// import 'package:firebase_auth/firebase_auth.dart';\n+// import 'package:flutter/material.dart';\n+// import 'package:l_f/newCode/Backend/auth_service.dart';\n+// import 'package:l_f/newCode/Backend/validator.dart';\n+// import 'package:l_f/newCode/Frontend/components/custom_dropdown_field.dart';\n+// import 'package:l_f/newCode/Frontend/components/custom_text_field.dart';\n+// import 'package:l_f/newCode/Frontend/pages/Login/login_page.dart';\n \n-// Assuming you have a file for these constants.\n-const List<String> degreesList = ['B.Tech', 'M.Tech', 'MSc', 'PhD'];\n-const List<String> departmentList = ['CS', 'EE', 'ME'];\n-const List<String> btechyearsList = [\n-  '1st Year',\n-  '2nd Year',\n-  '3rd Year',\n-  '4th Year'\n-];\n-const List<String> mscMtechList = ['1st Year', '2nd Year'];\n-const List<String> girlshostelsList = ['G-1', 'G-2'];\n-const List<String> boyshostelsList = ['B-1', 'B-2', 'B-3'];\n+// // Assuming you have a file for these constants.\n+// const List<String> degreesList = ['B.Tech', 'M.Tech', 'MSc', 'PhD'];\n+// const List<String> departmentList = ['CS', 'EE', 'ME'];\n+// const List<String> btechyearsList = [\n+//   '1st Year',\n+//   '2nd Year',\n+//   '3rd Year',\n+//   '4th Year'\n+// ];\n+// const List<String> mscMtechList = ['1st Year', '2nd Year'];\n+// const List<String> girlshostelsList = ['G-1', 'G-2'];\n+// const List<String> boyshostelsList = ['B-1', 'B-2', 'B-3'];\n \n-class SignUpPage extends StatefulWidget {\n-  const SignUpPage({super.key});\n+// class SignUpPage extends StatefulWidget {\n+//   const SignUpPage({super.key});\n \n-  @override\n-  _SignUpPageState createState() => _SignUpPageState();\n-}\n+//   @override\n+//   _SignUpPageState createState() => _SignUpPageState();\n+// }\n \n-class _SignUpPageState extends State<SignUpPage> {\n-  final _formKey = GlobalKey<FormState>();\n-  final AuthService _authService = AuthService();\n+// class _SignUpPageState extends State<SignUpPage> {\n+//   final _formKey = GlobalKey<FormState>();\n+//   final AuthService _authService = AuthService();\n \n-  final _emailController = TextEditingController();\n-  final _passwordController = TextEditingController();\n-  final _nameController = TextEditingController();\n-  final _phoneController = TextEditingController();\n+//   final _emailController = TextEditingController();\n+//   final _passwordController = TextEditingController();\n+//   final _nameController = TextEditingController();\n+//   final _phoneController = TextEditingController();\n \n-  String? _selectedDegree;\n-  String? _selectedGender;\n-  String? _selectYear;\n-  String? _selectedHostel;\n-  String? _selectedDepartment;\n+//   String? _selectedDegree;\n+//   String? _selectedGender;\n+//   String? _selectYear;\n+//   String? _selectedHostel;\n+//   String? _selectedDepartment;\n \n-  bool _isLoading = false;\n-  final String _expectedDomain = '@nith.ac.in';\n+//   bool _isLoading = false;\n+//   final String _expectedDomain = '@nith.ac.in';\n \n-  Future<void> _signUpUser() async {\n-    if (!_formKey.currentState!.validate()) {\n-      return;\n-    }\n+//   Future<void> _signUpUser() async {\n+//     if (!_formKey.currentState!.validate()) {\n+//       return;\n+//     }\n \n-    if (!Validator.isValidCollegeEmail(\n-        _emailController.text, _expectedDomain)) {\n-      ScaffoldMessenger.of(context).showSnackBar(\n-        const SnackBar(\n-          content: Text('Please use your college email address.'),\n-          backgroundColor: Colors.deepOrange,\n-        ),\n-      );\n-      return;\n-    }\n+//     if (!Validator.isValidCollegeEmail(\n+//         _emailController.text, _expectedDomain)) {\n+//       ScaffoldMessenger.of(context).showSnackBar(\n+//         const SnackBar(\n+//           content: Text('Please use your college email address.'),\n+//           backgroundColor: Colors.deepOrange,\n+//         ),\n+//       );\n+//       return;\n+//     }\n \n-    setState(() {\n-      _isLoading = true;\n-    });\n+//     setState(() {\n+//       _isLoading = true;\n+//     });\n \n-    try {\n-      final userData = {\n-        'name': _nameController.text.trim(),\n-        'email': _emailController.text.trim(),\n-        'joinedDate': DateTime.now().toIso8601String(),\n-        'profileImage': 'https://avatar.iran.liara.run/public/24',\n-        'phoneNumber': _phoneController.text.trim(),\n-        'gender': _selectedGender,\n-        'degree': _selectedDegree,\n-        'hostel': _selectedHostel,\n-        'year': _selectYear,\n-        'department': _selectedDepartment,\n-      };\n+//     try {\n+//       final userData = {\n+//         'name': _nameController.text.trim(),\n+//         'email': _emailController.text.trim(),\n+//         'joinedDate': DateTime.now().toIso8601String(),\n+//         'profileImage': 'https://avatar.iran.liara.run/public/24',\n+//         'phoneNumber': _phoneController.text.trim(),\n+//         'gender': _selectedGender,\n+//         'degree': _selectedDegree,\n+//         'hostel': _selectedHostel,\n+//         'year': _selectYear,\n+//         'department': _selectedDepartment,\n+//       };\n \n-      await _authService.signUpUser(\n-        email: _emailController.text,\n-        password: _passwordController.text,\n-        userData: userData,\n-      );\n+//       await _authService.signUpUser(\n+//         email: _emailController.text,\n+//         password: _passwordController.text,\n+//         userData: userData,\n+//       );\n \n-      ScaffoldMessenger.of(context).showSnackBar(\n-        const SnackBar(\n-          content: Text(\n-              'Verification email has been sent. Please check your inbox.'),\n-          backgroundColor: Colors.deepOrange,\n-        ),\n-      );\n+//       ScaffoldMessenger.of(context).showSnackBar(\n+//         const SnackBar(\n+//           content: Text(\n+//               'Verification email has been sent. Please check your inbox.'),\n+//           backgroundColor: Colors.deepOrange,\n+//         ),\n+//       );\n \n-      Navigator.pushReplacement(\n-        context,\n-        MaterialPageRoute(builder: (_) => const LoginPage()),\n-      );\n-    } on FirebaseAuthException catch (e) {\n-      ScaffoldMessenger.of(context).showSnackBar(\n-        SnackBar(content: Text('Error: ${e.message}')),\n-      );\n-    } finally {\n-      setState(() {\n-        _isLoading = false;\n-      });\n-    }\n-  }\n+//       Navigator.pushReplacement(\n+//         context,\n+//         MaterialPageRoute(builder: (_) => const LoginPage()),\n+//       );\n+//     } on FirebaseAuthException catch (e) {\n+//       ScaffoldMessenger.of(context).showSnackBar(\n+//         SnackBar(content: Text('Error: ${e.message}')),\n+//       );\n+//     } finally {\n+//       setState(() {\n+//         _isLoading = false;\n+//       });\n+//     }\n+//   }\n \n-  @override\n-  Widget build(BuildContext context) {\n-    bool isMobile = MediaQuery.of(context).size.width < 830;\n-    Size size = MediaQuery.of(context).size;\n+//   @override\n+//   Widget build(BuildContext context) {\n+//     bool isMobile = MediaQuery.of(context).size.width < 830;\n+//     Size size = MediaQuery.of(context).size;\n \n-    return Scaffold(\n-      body: _isLoading\n-          ? const Center(child: CircularProgressIndicator())\n-          : Center(\n-              child: SingleChildScrollView(\n-                padding: const EdgeInsets.all(16.0),\n-                child: Form(\n-                  key: _formKey,\n-                  child: Column(\n-                    mainAxisAlignment: MainAxisAlignment.center,\n-                    children: [\n-                      const Text(\n-                        'Create an Account',\n-                        style: TextStyle(\n-                            fontSize: 32, fontWeight: FontWeight.bold),\n-                      ),\n-                      const SizedBox(height: 32),\n-                      Container(\n-                        width: isMobile ? size.width * 0.8 : size.width * 0.6,\n-                        decoration: BoxDecoration(\n-                          color: Colors.white.withOpacity(0.1),\n-                          borderRadius: BorderRadius.circular(12),\n-                          boxShadow: [\n-                            BoxShadow(\n-                              color: Colors.black.withOpacity(0.1),\n-                              blurRadius: 10,\n-                              offset: const Offset(0, 4),\n-                            ),\n-                          ],\n-                        ),\n-                        padding: const EdgeInsets.all(16.0),\n-                        child: Column(\n-                          children: [\n-                            CustomTextField(\n-                              controller: _nameController,\n-                              label: 'Name',\n-                              icon: Icons.person,\n-                              validator: (value) => value!.isEmpty\n-                                  ? 'Please enter your name'\n-                                  : null,\n-                            ),\n-                            const SizedBox(height: 16),\n-                            CustomTextField(\n-                              controller: _emailController,\n-                              label: 'Email',\n-                              icon: Icons.email,\n-                              keyboardType: TextInputType.emailAddress,\n-                              validator: (value) => value!.isEmpty\n-                                  ? 'Please enter your email'\n-                                  : null,\n-                            ),\n-                            const SizedBox(height: 16),\n-                            CustomTextField(\n-                              controller: _phoneController,\n-                              label: 'Phone Number',\n-                              icon: Icons.phone,\n-                              keyboardType: TextInputType.phone,\n-                              validator: (value) =>\n-                                  value!.isEmpty || value.length < 10\n-                                      ? 'Invalid phone number'\n-                                      : null,\n-                            ),\n-                            const SizedBox(height: 16),\n-                            CustomTextField(\n-                              controller: _passwordController,\n-                              label: 'Password',\n-                              icon: Icons.lock,\n-                              obscureText: true,\n-                              validator: (value) =>\n-                                  value!.isEmpty || value.length < 6\n-                                      ? 'Password must be at least 6 characters'\n-                                      : null,\n-                            ),\n-                            const SizedBox(height: 22),\n-                            CustomDropdownField<String>(\n-                              label: 'Degree',\n-                              value: _selectedDegree,\n-                              items: degreesList,\n-                              onChanged: (newValue) {\n-                                setState(() {\n-                                  _selectedDegree = newValue;\n-                                });\n-                              },\n-                              validator: (value) => value == null\n-                                  ? 'Please select your degree'\n-                                  : null,\n-                            ),\n-                            const SizedBox(height: 16),\n-                            CustomDropdownField<String>(\n-                              label: 'Department',\n-                              value: _selectedDepartment,\n-                              items: departmentList,\n-                              onChanged: (newValue) {\n-                                setState(() {\n-                                  _selectedDepartment = newValue;\n-                                });\n-                              },\n-                              validator: (value) => value == null\n-                                  ? 'Please select your department'\n-                                  : null,\n-                            ),\n-                            const SizedBox(height: 16),\n-                            if (_selectedDegree != 'PhD')\n-                              CustomDropdownField<String>(\n-                                label: 'Year',\n-                                value: _selectYear,\n-                                items: _selectedDegree == 'MSc' ||\n-                                        _selectedDegree == 'MTech'\n-                                    ? mscMtechList\n-                                    : btechyearsList,\n-                                onChanged: (newValue) {\n-                                  setState(() {\n-                                    _selectYear = newValue;\n-                                  });\n-                                },\n-                                validator: (value) => value == null\n-                                    ? 'Please select your year'\n-                                    : null,\n-                              ),\n-                            const SizedBox(height: 16),\n-                            CustomDropdownField<String>(\n-                              label: 'Gender',\n-                              value: _selectedGender,\n-                              items: const ['Male', 'Female'],\n-                              onChanged: (newValue) {\n-                                setState(() {\n-                                  _selectedGender = newValue;\n-                                  _selectedHostel = null;\n-                                });\n-                              },\n-                              validator: (value) => value == null\n-                                  ? 'Please select your gender'\n-                                  : null,\n-                            ),\n-                            const SizedBox(height: 16),\n-                            CustomDropdownField<String>(\n-                              label: 'Hostel',\n-                              value: _selectedHostel,\n-                              items: _selectedGender == 'Female'\n-                                  ? girlshostelsList\n-                                  : boyshostelsList,\n-                              onChanged: (newValue) {\n-                                setState(() {\n-                                  _selectedHostel = newValue;\n-                                });\n-                              },\n-                              validator: (value) => value == null\n-                                  ? 'Please select your hostel'\n-                                  : null,\n-                            ),\n-                            const SizedBox(height: 32),\n-                            ElevatedButton(\n-                              onPressed: _signUpUser,\n-                              child: const Text('Sign Up'),\n-                            ),\n-                            const SizedBox(height: 16),\n-                            TextButton(\n-                              onPressed: () {\n-                                Navigator.push(\n-                                  context,\n-                                  MaterialPageRoute(\n-                                      builder: (_) => const LoginPage()),\n-                                );\n-                              },\n-                              child: const Text(\n-                                'Already have an account? Sign In',\n-                                style: TextStyle(\n-                                  decoration: TextDecoration.underline,\n-                                  fontWeight: FontWeight.bold,\n-                                ),\n-                              ),\n-                            ),\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                ),\n-              ),\n-            ),\n-    );\n-  }\n-}\n+//     return Scaffold(\n+//       body: _isLoading\n+//           ? const Center(child: CircularProgressIndicator())\n+//           : Center(\n+//               child: SingleChildScrollView(\n+//                 padding: const EdgeInsets.all(16.0),\n+//                 child: Form(\n+//                   key: _formKey,\n+//                   child: Column(\n+//                     mainAxisAlignment: MainAxisAlignment.center,\n+//                     children: [\n+//                       const Text(\n+//                         'Create an Account',\n+//                         style: TextStyle(\n+//                             fontSize: 32, fontWeight: FontWeight.bold),\n+//                       ),\n+//                       const SizedBox(height: 32),\n+//                       Container(\n+//                         width: isMobile ? size.width * 0.8 : size.width * 0.6,\n+//                         decoration: BoxDecoration(\n+//                           color: Colors.white.withOpacity(0.1),\n+//                           borderRadius: BorderRadius.circular(12),\n+//                           boxShadow: [\n+//                             BoxShadow(\n+//                               color: Colors.black.withOpacity(0.1),\n+//                               blurRadius: 10,\n+//                               offset: const Offset(0, 4),\n+//                             ),\n+//                           ],\n+//                         ),\n+//                         padding: const EdgeInsets.all(16.0),\n+//                         child: Column(\n+//                           children: [\n+//                             CustomTextField(\n+//                               controller: _nameController,\n+//                               label: 'Name',\n+//                               icon: Icons.person,\n+//                               validator: (value) => value!.isEmpty\n+//                                   ? 'Please enter your name'\n+//                                   : null,\n+//                             ),\n+//                             const SizedBox(height: 16),\n+//                             CustomTextField(\n+//                               controller: _emailController,\n+//                               label: 'Email',\n+//                               icon: Icons.email,\n+//                               keyboardType: TextInputType.emailAddress,\n+//                               validator: (value) => value!.isEmpty\n+//                                   ? 'Please enter your email'\n+//                                   : null,\n+//                             ),\n+//                             const SizedBox(height: 16),\n+//                             CustomTextField(\n+//                               controller: _phoneController,\n+//                               label: 'Phone Number',\n+//                               icon: Icons.phone,\n+//                               keyboardType: TextInputType.phone,\n+//                               validator: (value) =>\n+//                                   value!.isEmpty || value.length < 10\n+//                                       ? 'Invalid phone number'\n+//                                       : null,\n+//                             ),\n+//                             const SizedBox(height: 16),\n+//                             CustomTextField(\n+//                               controller: _passwordController,\n+//                               label: 'Password',\n+//                               icon: Icons.lock,\n+//                               obscureText: true,\n+//                               validator: (value) =>\n+//                                   value!.isEmpty || value.length < 6\n+//                                       ? 'Password must be at least 6 characters'\n+//                                       : null,\n+//                             ),\n+//                             const SizedBox(height: 22),\n+//                             CustomDropdownField<String>(\n+//                               label: 'Degree',\n+//                               value: _selectedDegree,\n+//                               items: degreesList,\n+//                               onChanged: (newValue) {\n+//                                 setState(() {\n+//                                   _selectedDegree = newValue;\n+//                                 });\n+//                               },\n+//                               validator: (value) => value == null\n+//                                   ? 'Please select your degree'\n+//                                   : null,\n+//                             ),\n+//                             const SizedBox(height: 16),\n+//                             CustomDropdownField<String>(\n+//                               label: 'Department',\n+//                               value: _selectedDepartment,\n+//                               items: departmentList,\n+//                               onChanged: (newValue) {\n+//                                 setState(() {\n+//                                   _selectedDepartment = newValue;\n+//                                 });\n+//                               },\n+//                               validator: (value) => value == null\n+//                                   ? 'Please select your department'\n+//                                   : null,\n+//                             ),\n+//                             const SizedBox(height: 16),\n+//                             if (_selectedDegree != 'PhD')\n+//                               CustomDropdownField<String>(\n+//                                 label: 'Year',\n+//                                 value: _selectYear,\n+//                                 items: _selectedDegree == 'MSc' ||\n+//                                         _selectedDegree == 'MTech'\n+//                                     ? mscMtechList\n+//                                     : btechyearsList,\n+//                                 onChanged: (newValue) {\n+//                                   setState(() {\n+//                                     _selectYear = newValue;\n+//                                   });\n+//                                 },\n+//                                 validator: (value) => value == null\n+//                                     ? 'Please select your year'\n+//                                     : null,\n+//                               ),\n+//                             const SizedBox(height: 16),\n+//                             CustomDropdownField<String>(\n+//                               label: 'Gender',\n+//                               value: _selectedGender,\n+//                               items: const ['Male', 'Female'],\n+//                               onChanged: (newValue) {\n+//                                 setState(() {\n+//                                   _selectedGender = newValue;\n+//                                   _selectedHostel = null;\n+//                                 });\n+//                               },\n+//                               validator: (value) => value == null\n+//                                   ? 'Please select your gender'\n+//                                   : null,\n+//                             ),\n+//                             const SizedBox(height: 16),\n+//                             CustomDropdownField<String>(\n+//                               label: 'Hostel',\n+//                               value: _selectedHostel,\n+//                               items: _selectedGender == 'Female'\n+//                                   ? girlshostelsList\n+//                                   : boyshostelsList,\n+//                               onChanged: (newValue) {\n+//                                 setState(() {\n+//                                   _selectedHostel = newValue;\n+//                                 });\n+//                               },\n+//                               validator: (value) => value == null\n+//                                   ? 'Please select your hostel'\n+//                                   : null,\n+//                             ),\n+//                             const SizedBox(height: 32),\n+//                             ElevatedButton(\n+//                               onPressed: _signUpUser,\n+//                               child: const Text('Sign Up'),\n+//                             ),\n+//                             const SizedBox(height: 16),\n+//                             TextButton(\n+//                               onPressed: () {\n+//                                 Navigator.push(\n+//                                   context,\n+//                                   MaterialPageRoute(\n+//                                       builder: (_) => const LoginPage()),\n+//                                 );\n+//                               },\n+//                               child: const Text(\n+//                                 'Already have an account? Sign In',\n+//                                 style: TextStyle(\n+//                                   decoration: TextDecoration.underline,\n+//                                   fontWeight: FontWeight.bold,\n+//                                 ),\n+//                               ),\n+//                             ),\n+//                           ],\n+//                         ),\n+//                       ),\n+//                     ],\n+//                   ),\n+//                 ),\n+//               ),\n+//             ),\n+//     );\n+//   }\n+// }\n"
                }
            ],
            "date": 1756115140951,
            "name": "Commit-0",
            "content": "// lib/Frontend/pages/signup_page.dart\nimport 'package:flutter/material.dart';\nimport 'package:l_f/Backend/auth_service.dart';\nimport 'package:l_f/Backend/validator.dart';\nimport 'package:l_f/Frontend/components/custom_text_field.dart';\nimport 'package:l_f/Frontend/components/custom_dropdown_field.dart';\nimport 'package:l_f/Frontend/pages/login_page.dart';\nimport 'package:firebase_auth/firebase_auth.dart';\n\n// Assuming you have a file for these constants.\nconst List<String> degreesList = ['B.Tech', 'M.Tech', 'MSc', 'PhD'];\nconst List<String> departmentList = ['CS', 'EE', 'ME'];\nconst List<String> btechyearsList = ['1st Year', '2nd Year', '3rd Year', '4th Year'];\nconst List<String> mscMtechList = ['1st Year', '2nd Year'];\nconst List<String> girlshostelsList = ['G-1', 'G-2'];\nconst List<String> boyshostelsList = ['B-1', 'B-2', 'B-3'];\n\nclass SignUpPage extends StatefulWidget {\n  const SignUpPage({super.key});\n\n  @override\n  _SignUpPageState createState() => _SignUpPageState();\n}\n\nclass _SignUpPageState extends State<SignUpPage> {\n  final _formKey = GlobalKey<FormState>();\n  final AuthService _authService = AuthService();\n\n  final _emailController = TextEditingController();\n  final _passwordController = TextEditingController();\n  final _nameController = TextEditingController();\n  final _phoneController = TextEditingController();\n\n  String? _selectedDegree;\n  String? _selectedGender;\n  String? _selectYear;\n  String? _selectedHostel;\n  String? _selectedDepartment;\n\n  bool _isLoading = false;\n  final String _expectedDomain = '@nith.ac.in';\n\n  Future<void> _signUpUser() async {\n    if (!_formKey.currentState!.validate()) {\n      return;\n    }\n\n    if (!Validator.isValidCollegeEmail(_emailController.text, _expectedDomain)) {\n      ScaffoldMessenger.of(context).showSnackBar(\n        const SnackBar(\n          content: Text('Please use your college email address.'),\n          backgroundColor: Colors.deepOrange,\n        ),\n      );\n      return;\n    }\n\n    setState(() {\n      _isLoading = true;\n    });\n\n    try {\n      final userData = {\n        'name': _nameController.text.trim(),\n        'email': _emailController.text.trim(),\n        'joinedDate': DateTime.now().toIso8601String(),\n        'profileImage': 'https://avatar.iran.liara.run/public/24',\n        'phoneNumber': _phoneController.text.trim(),\n        'gender': _selectedGender,\n        'degree': _selectedDegree,\n        'hostel': _selectedHostel,\n        'year': _selectYear,\n        'department': _selectedDepartment,\n      };\n\n      await _authService.signUpUser(\n        email: _emailController.text,\n        password: _passwordController.text,\n        userData: userData,\n      );\n\n      ScaffoldMessenger.of(context).showSnackBar(\n        const SnackBar(\n          content: Text('Verification email has been sent. Please check your inbox.'),\n          backgroundColor: Colors.deepOrange,\n        ),\n      );\n\n      Navigator.pushReplacement(\n        context,\n        MaterialPageRoute(builder: (_) => const LoginPage()),\n      );\n    } on FirebaseAuthException catch (e) {\n      ScaffoldMessenger.of(context).showSnackBar(\n        SnackBar(content: Text('Error: ${e.message}')),\n      );\n    } finally {\n      setState(() {\n        _isLoading = false;\n      });\n    }\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    bool isMobile = MediaQuery.of(context).size.width < 830;\n    Size size = MediaQuery.of(context).size;\n    \n    return Scaffold(\n      body: _isLoading\n          ? const Center(child: CircularProgressIndicator())\n          : Center(\n              child: SingleChildScrollView(\n                padding: const EdgeInsets.all(16.0),\n                child: Form(\n                  key: _formKey,\n                  child: Column(\n                    mainAxisAlignment: MainAxisAlignment.center,\n                    children: [\n                      const Text(\n                        'Create an Account',\n                        style: TextStyle(fontSize: 32, fontWeight: FontWeight.bold),\n                      ),\n                      const SizedBox(height: 32),\n                      Container(\n                        width: isMobile ? size.width * 0.8 : size.width * 0.6,\n                        decoration: BoxDecoration(\n                          color: Colors.white.withOpacity(0.1),\n                          borderRadius: BorderRadius.circular(12),\n                          boxShadow: [\n                            BoxShadow(\n                              color: Colors.black.withOpacity(0.1),\n                              blurRadius: 10,\n                              offset: const Offset(0, 4),\n                            ),\n                          ],\n                        ),\n                        padding: const EdgeInsets.all(16.0),\n                        child: Column(\n                          children: [\n                            CustomTextField(\n                              controller: _nameController,\n                              label: 'Name',\n                              icon: Icons.person,\n                              validator: (value) => value!.isEmpty ? 'Please enter your name' : null,\n                            ),\n                            const SizedBox(height: 16),\n                            CustomTextField(\n                              controller: _emailController,\n                              label: 'Email',\n                              icon: Icons.email,\n                              keyboardType: TextInputType.emailAddress,\n                              validator: (value) => value!.isEmpty ? 'Please enter your email' : null,\n                            ),\n                            const SizedBox(height: 16),\n                            CustomTextField(\n                              controller: _phoneController,\n                              label: 'Phone Number',\n                              icon: Icons.phone,\n                              keyboardType: TextInputType.phone,\n                              validator: (value) => value!.isEmpty || value.length < 10 ? 'Invalid phone number' : null,\n                            ),\n                            const SizedBox(height: 16),\n                            CustomTextField(\n                              controller: _passwordController,\n                              label: 'Password',\n                              icon: Icons.lock,\n                              obscureText: true,\n                              validator: (value) => value!.isEmpty || value.length < 6 ? 'Password must be at least 6 characters' : null,\n                            ),\n                            const SizedBox(height: 22),\n                            CustomDropdownField<String>(\n                              label: 'Degree',\n                              value: _selectedDegree,\n                              items: degreesList,\n                              onChanged: (newValue) {\n                                setState(() {\n                                  _selectedDegree = newValue;\n                                });\n                              },\n                              validator: (value) => value == null ? 'Please select your degree' : null,\n                            ),\n                            const SizedBox(height: 16),\n                            CustomDropdownField<String>(\n                              label: 'Department',\n                              value: _selectedDepartment,\n                              items: departmentList,\n                              onChanged: (newValue) {\n                                setState(() {\n                                  _selectedDepartment = newValue;\n                                });\n                              },\n                              validator: (value) => value == null ? 'Please select your department' : null,\n                            ),\n                            const SizedBox(height: 16),\n                            if (_selectedDegree != 'PhD')\n                              CustomDropdownField<String>(\n                                label: 'Year',\n                                value: _selectYear,\n                                items: _selectedDegree == 'MSc' || _selectedDegree == 'MTech'\n                                    ? mscMtechList\n                                    : btechyearsList,\n                                onChanged: (newValue) {\n                                  setState(() {\n                                    _selectYear = newValue;\n                                  });\n                                },\n                                validator: (value) => value == null ? 'Please select your year' : null,\n                              ),\n                            const SizedBox(height: 16),\n                            CustomDropdownField<String>(\n                              label: 'Gender',\n                              value: _selectedGender,\n                              items: const ['Male', 'Female'],\n                              onChanged: (newValue) {\n                                setState(() {\n                                  _selectedGender = newValue;\n                                  _selectedHostel = null;\n                                });\n                              },\n                              validator: (value) => value == null ? 'Please select your gender' : null,\n                            ),\n                            const SizedBox(height: 16),\n                            CustomDropdownField<String>(\n                              label: 'Hostel',\n                              value: _selectedHostel,\n                              items: _selectedGender == 'Female' ? girlshostelsList : boyshostelsList,\n                              onChanged: (newValue) {\n                                setState(() {\n                                  _selectedHostel = newValue;\n                                });\n                              },\n                              validator: (value) => value == null ? 'Please select your hostel' : null,\n                            ),\n                            const SizedBox(height: 32),\n                            ElevatedButton(\n                              onPressed: _signUpUser,\n                              child: const Text('Sign Up'),\n                            ),\n                            const SizedBox(height: 16),\n                            TextButton(\n                              onPressed: () {\n                                Navigator.push(\n                                  context,\n                                  MaterialPageRoute(builder: (_) => const LoginPage()),\n                                );\n                              },\n                              child: const Text(\n                                'Already have an account? Sign In',\n                                style: TextStyle(\n                                  decoration: TextDecoration.underline,\n                                  fontWeight: FontWeight.bold,\n                                ),\n                              ),\n                            ),\n                          ],\n                        ),\n                      ),\n                    ],\n                  ),\n                ),\n              ),\n            ),\n    );\n  }\n}\n"
        }
    ]
}