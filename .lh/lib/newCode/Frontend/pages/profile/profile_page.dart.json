{
    "sourceFile": "lib/newCode/Frontend/pages/profile/profile_page.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1756116699793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1756116893546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n // lib/Frontend/pages/profile_page.dart\n import 'package:flutter/material.dart';\n import 'package:firebase_auth/firebase_auth.dart';\n+import 'package:l_f/newCode/Frontend/components/profile_info_field.dart';\n import 'package:l_f/services/user_service.dart';\n import 'package:l_f/Frontend/components/profile_info_field.dart';\n \n class ProfilePage extends StatefulWidget {\n"
                },
                {
                    "date": 1756116904503,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n // lib/Frontend/pages/profile_page.dart\n+import 'package:firebase_auth/firebase_auth.dart';\n import 'package:flutter/material.dart';\n-import 'package:firebase_auth/firebase_auth.dart';\n+import 'package:l_f/Frontend/components/profile_info_field.dart';\n import 'package:l_f/newCode/Frontend/components/profile_info_field.dart';\n import 'package:l_f/services/user_service.dart';\n-import 'package:l_f/Frontend/components/profile_info_field.dart';\n \n class ProfilePage extends StatefulWidget {\n   const ProfilePage({super.key});\n \n@@ -41,9 +41,9 @@\n     if (currentUser == null) {\n       setState(() => _isLoading = false);\n       return;\n     }\n-    \n+\n     try {\n       final userData = await _userService.fetchUserData(currentUser!.uid);\n       if (userData != null) {\n         _nameController.text = userData['name'] ?? '';\n@@ -53,9 +53,10 @@\n         _degreeController.text = userData['degree'] ?? '';\n         _genderController.text = userData['gender'] ?? '';\n         _hostelController.text = userData['hostel'] ?? '';\n         _yearController.text = userData['year'] ?? '';\n-        _joinedDateController.text = (userData['joinedDate'] as Timestamp?)?.toDate().toString() ?? '';\n+        _joinedDateController.text =\n+            (userData['joinedDate'] as Timestamp?)?.toDate().toString() ?? '';\n         _profileImageUrl = userData['profileImage'];\n       }\n     } catch (e) {\n       print('Error fetching user details: $e');\n@@ -94,16 +95,16 @@\n     } finally {\n       setState(() => _isUpdatingProfile = false);\n     }\n   }\n-  \n+\n   @override\n   Widget build(BuildContext context) {\n     bool isMobile = MediaQuery.of(context).size.width < 830;\n     Size widthSc = MediaQuery.of(context).size;\n \n     if (_isLoading) {\n-      return const Scaffold(\n+      return  Scaffold(\n         appBar: AppBar(\n           title: Text('Profile'),\n           backgroundColor: Colors.deepOrange,\n           foregroundColor: Colors.white,\n@@ -128,9 +129,10 @@\n           child: Column(\n             crossAxisAlignment: CrossAxisAlignment.center,\n             children: [\n               Card(\n-                shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(15.0)),\n+                shape: RoundedRectangleBorder(\n+                    borderRadius: BorderRadius.circular(15.0)),\n                 elevation: 8.0,\n                 child: Padding(\n                   padding: const EdgeInsets.all(16.0),\n                   child: Column(\n@@ -155,17 +157,22 @@\n                             Positioned(\n                               bottom: 0,\n                               right: 0,\n                               child: IconButton(\n-                                icon: const Icon(Icons.edit, color: Colors.deepOrange),\n+                                icon: const Icon(Icons.edit,\n+                                    color: Colors.deepOrange),\n                                 onPressed: () async {\n-                                  final imageBytes = await _userService.pickSingleImage();\n+                                  final imageBytes =\n+                                      await _userService.pickSingleImage();\n                                   if (imageBytes != null) {\n                                     setState(() => _isUpdatingProfile = true);\n-                                    final imageUrl = await _userService.uploadProfileImage(imageBytes);\n+                                    final imageUrl = await _userService\n+                                        .uploadProfileImage(imageBytes);\n                                     if (imageUrl != null) {\n                                       _profileImageUrl = imageUrl;\n-                                      await _userService.updateUserDetails(currentUser!.uid, {'profileImage': imageUrl});\n+                                      await _userService.updateUserDetails(\n+                                          currentUser!.uid,\n+                                          {'profileImage': imageUrl});\n                                       setState(() {});\n                                     }\n                                     setState(() => _isUpdatingProfile = false);\n                                   }\n@@ -174,22 +181,39 @@\n                             ),\n                         ],\n                       ),\n                       const SizedBox(height: 20.0),\n-                      ProfileInfoField(label: \"Name\", controller: _nameController, isEditable: _isEditing),\n-                      ProfileInfoField(label: \"Email\", controller: _emailController), // Email is non-editable\n-                      ProfileInfoField(label: \"Phone Number\", controller: _phoneController, isEditable: _isEditing),\n-                      ProfileInfoField(label: \"Department\", controller: _departmentController),\n-                      ProfileInfoField(label: \"Joined Date\", controller: _joinedDateController),\n-                      \n+                      ProfileInfoField(\n+                          label: \"Name\",\n+                          controller: _nameController,\n+                          isEditable: _isEditing),\n+                      ProfileInfoField(\n+                          label: \"Email\",\n+                          controller:\n+                              _emailController), // Email is non-editable\n+                      ProfileInfoField(\n+                          label: \"Phone Number\",\n+                          controller: _phoneController,\n+                          isEditable: _isEditing),\n+                      ProfileInfoField(\n+                          label: \"Department\",\n+                          controller: _departmentController),\n+                      ProfileInfoField(\n+                          label: \"Joined Date\",\n+                          controller: _joinedDateController),\n+\n                       // Handle Dropdowns if needed\n                       // This part needs more custom logic if they are editable\n                       // For now, they are non-editable text fields.\n-                      ProfileInfoField(label: \"Degree\", controller: _degreeController),\n-                      ProfileInfoField(label: \"Gender\", controller: _genderController),\n-                      ProfileInfoField(label: \"Hostel\", controller: _hostelController),\n-                      ProfileInfoField(label: \"Year\", controller: _yearController),\n-                      \n+                      ProfileInfoField(\n+                          label: \"Degree\", controller: _degreeController),\n+                      ProfileInfoField(\n+                          label: \"Gender\", controller: _genderController),\n+                      ProfileInfoField(\n+                          label: \"Hostel\", controller: _hostelController),\n+                      ProfileInfoField(\n+                          label: \"Year\", controller: _yearController),\n+\n                       const SizedBox(height: 20.0),\n                       _isUpdatingProfile\n                           ? const CircularProgressIndicator()\n                           : ElevatedButton(\n@@ -204,9 +228,10 @@\n                                 _isEditing ? \"Save Changes\" : \"Edit Profile\",\n                                 style: const TextStyle(fontSize: 18),\n                               ),\n                               style: ElevatedButton.styleFrom(\n-                                padding: const EdgeInsets.symmetric(horizontal: 30, vertical: 15),\n+                                padding: const EdgeInsets.symmetric(\n+                                    horizontal: 30, vertical: 15),\n                                 backgroundColor: Colors.deepOrange,\n                                 foregroundColor: Colors.white,\n                                 shape: RoundedRectangleBorder(\n                                   borderRadius: BorderRadius.circular(9),\n"
                },
                {
                    "date": 1756116915150,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n // lib/Frontend/pages/profile_page.dart\n+import 'package:cloud_firestore/cloud_firestore.dart';\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:flutter/material.dart';\n import 'package:l_f/Frontend/components/profile_info_field.dart';\n import 'package:l_f/newCode/Frontend/components/profile_info_field.dart';\n@@ -104,13 +105,13 @@\n \n     if (_isLoading) {\n       return  Scaffold(\n         appBar: AppBar(\n-          title: Text('Profile'),\n+          title: const Text('Profile'),\n           backgroundColor: Colors.deepOrange,\n           foregroundColor: Colors.white,\n         ),\n-        body: Center(child: CircularProgressIndicator()),\n+        body: const Center(child: CircularProgressIndicator()),\n       );\n     }\n \n     return Scaffold(\n"
                },
                {
                    "date": 1756116921502,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:flutter/material.dart';\n import 'package:l_f/Frontend/components/profile_info_field.dart';\n import 'package:l_f/newCode/Frontend/components/profile_info_field.dart';\n+import 'package:l_f/newCode/service/user_service.dart';\n import 'package:l_f/services/user_service.dart';\n \n class ProfilePage extends StatefulWidget {\n   const ProfilePage({super.key});\n"
                },
                {
                    "date": 1756118182071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,10 @@\n // lib/Frontend/pages/profile_page.dart\n import 'package:cloud_firestore/cloud_firestore.dart';\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:flutter/material.dart';\n-import 'package:l_f/Frontend/components/profile_info_field.dart';\n import 'package:l_f/newCode/Frontend/components/profile_info_field.dart';\n import 'package:l_f/newCode/service/user_service.dart';\n-import 'package:l_f/services/user_service.dart';\n \n class ProfilePage extends StatefulWidget {\n   const ProfilePage({super.key});\n \n@@ -104,9 +102,9 @@\n     bool isMobile = MediaQuery.of(context).size.width < 830;\n     Size widthSc = MediaQuery.of(context).size;\n \n     if (_isLoading) {\n-      return  Scaffold(\n+      return Scaffold(\n         appBar: AppBar(\n           title: const Text('Profile'),\n           backgroundColor: Colors.deepOrange,\n           foregroundColor: Colors.white,\n@@ -225,12 +223,8 @@\n                                 } else {\n                                   setState(() => _isEditing = true);\n                                 }\n                               },\n-                              child: Text(\n-                                _isEditing ? \"Save Changes\" : \"Edit Profile\",\n-                                style: const TextStyle(fontSize: 18),\n-                              ),\n                               style: ElevatedButton.styleFrom(\n                                 padding: const EdgeInsets.symmetric(\n                                     horizontal: 30, vertical: 15),\n                                 backgroundColor: Colors.deepOrange,\n@@ -239,8 +233,12 @@\n                                   borderRadius: BorderRadius.circular(9),\n                                 ),\n                                 elevation: 6.0,\n                               ),\n+                              child: Text(\n+                                _isEditing ? \"Save Changes\" : \"Edit Profile\",\n+                                style: const TextStyle(fontSize: 18),\n+                              ),\n                             ),\n                     ],\n                   ),\n                 ),\n"
                },
                {
                    "date": 1756122977160,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,252 +1,252 @@\n-// lib/Frontend/pages/profile_page.dart\n-import 'package:cloud_firestore/cloud_firestore.dart';\n-import 'package:firebase_auth/firebase_auth.dart';\n-import 'package:flutter/material.dart';\n-import 'package:l_f/newCode/Frontend/components/profile_info_field.dart';\n-import 'package:l_f/newCode/service/user_service.dart';\n+// // lib/Frontend/pages/profile_page.dart\n+// import 'package:cloud_firestore/cloud_firestore.dart';\n+// import 'package:firebase_auth/firebase_auth.dart';\n+// import 'package:flutter/material.dart';\n+// import 'package:l_f/newCode/Frontend/components/profile_info_field.dart';\n+// import 'package:l_f/newCode/service/user_service.dart';\n \n-class ProfilePage extends StatefulWidget {\n-  const ProfilePage({super.key});\n+// class ProfilePage extends StatefulWidget {\n+//   const ProfilePage({super.key});\n \n-  @override\n-  _ProfilePageState createState() => _ProfilePageState();\n-}\n+//   @override\n+//   _ProfilePageState createState() => _ProfilePageState();\n+// }\n \n-class _ProfilePageState extends State<ProfilePage> {\n-  final UserService _userService = UserService();\n-  final User? currentUser = FirebaseAuth.instance.currentUser;\n+// class _ProfilePageState extends State<ProfilePage> {\n+//   final UserService _userService = UserService();\n+//   final User? currentUser = FirebaseAuth.instance.currentUser;\n \n-  final TextEditingController _nameController = TextEditingController();\n-  final TextEditingController _emailController = TextEditingController();\n-  final TextEditingController _phoneController = TextEditingController();\n-  final TextEditingController _departmentController = TextEditingController();\n-  final TextEditingController _degreeController = TextEditingController();\n-  final TextEditingController _genderController = TextEditingController();\n-  final TextEditingController _hostelController = TextEditingController();\n-  final TextEditingController _yearController = TextEditingController();\n-  final TextEditingController _joinedDateController = TextEditingController();\n+//   final TextEditingController _nameController = TextEditingController();\n+//   final TextEditingController _emailController = TextEditingController();\n+//   final TextEditingController _phoneController = TextEditingController();\n+//   final TextEditingController _departmentController = TextEditingController();\n+//   final TextEditingController _degreeController = TextEditingController();\n+//   final TextEditingController _genderController = TextEditingController();\n+//   final TextEditingController _hostelController = TextEditingController();\n+//   final TextEditingController _yearController = TextEditingController();\n+//   final TextEditingController _joinedDateController = TextEditingController();\n \n-  String? _profileImageUrl;\n-  bool _isEditing = false;\n-  bool _isLoading = true;\n-  bool _isUpdatingProfile = false;\n+//   String? _profileImageUrl;\n+//   bool _isEditing = false;\n+//   bool _isLoading = true;\n+//   bool _isUpdatingProfile = false;\n \n-  @override\n-  void initState() {\n-    super.initState();\n-    _fetchUserDetails();\n-  }\n+//   @override\n+//   void initState() {\n+//     super.initState();\n+//     _fetchUserDetails();\n+//   }\n \n-  Future<void> _fetchUserDetails() async {\n-    if (currentUser == null) {\n-      setState(() => _isLoading = false);\n-      return;\n-    }\n+//   Future<void> _fetchUserDetails() async {\n+//     if (currentUser == null) {\n+//       setState(() => _isLoading = false);\n+//       return;\n+//     }\n \n-    try {\n-      final userData = await _userService.fetchUserData(currentUser!.uid);\n-      if (userData != null) {\n-        _nameController.text = userData['name'] ?? '';\n-        _emailController.text = userData['email'] ?? '';\n-        _phoneController.text = userData['phonenumber'] ?? '';\n-        _departmentController.text = userData['department'] ?? 'NITH';\n-        _degreeController.text = userData['degree'] ?? '';\n-        _genderController.text = userData['gender'] ?? '';\n-        _hostelController.text = userData['hostel'] ?? '';\n-        _yearController.text = userData['year'] ?? '';\n-        _joinedDateController.text =\n-            (userData['joinedDate'] as Timestamp?)?.toDate().toString() ?? '';\n-        _profileImageUrl = userData['profileImage'];\n-      }\n-    } catch (e) {\n-      print('Error fetching user details: $e');\n-    } finally {\n-      setState(() => _isLoading = false);\n-    }\n-  }\n+//     try {\n+//       final userData = await _userService.fetchUserData(currentUser!.uid);\n+//       if (userData != null) {\n+//         _nameController.text = userData['name'] ?? '';\n+//         _emailController.text = userData['email'] ?? '';\n+//         _phoneController.text = userData['phonenumber'] ?? '';\n+//         _departmentController.text = userData['department'] ?? 'NITH';\n+//         _degreeController.text = userData['degree'] ?? '';\n+//         _genderController.text = userData['gender'] ?? '';\n+//         _hostelController.text = userData['hostel'] ?? '';\n+//         _yearController.text = userData['year'] ?? '';\n+//         _joinedDateController.text =\n+//             (userData['joinedDate'] as Timestamp?)?.toDate().toString() ?? '';\n+//         _profileImageUrl = userData['profileImage'];\n+//       }\n+//     } catch (e) {\n+//       print('Error fetching user details: $e');\n+//     } finally {\n+//       setState(() => _isLoading = false);\n+//     }\n+//   }\n \n-  Future<void> _updateProfile() async {\n-    setState(() => _isUpdatingProfile = true);\n+//   Future<void> _updateProfile() async {\n+//     setState(() => _isUpdatingProfile = true);\n \n-    try {\n-      final Map<String, dynamic> updatedData = {\n-        'name': _nameController.text,\n-        'phonenumber': _phoneController.text,\n-        'profileImage': _profileImageUrl,\n-        'hostel': _hostelController.text,\n-        // Add other fields you want to update\n-      };\n-      await _userService.updateUserDetails(currentUser!.uid, updatedData);\n+//     try {\n+//       final Map<String, dynamic> updatedData = {\n+//         'name': _nameController.text,\n+//         'phonenumber': _phoneController.text,\n+//         'profileImage': _profileImageUrl,\n+//         'hostel': _hostelController.text,\n+//         // Add other fields you want to update\n+//       };\n+//       await _userService.updateUserDetails(currentUser!.uid, updatedData);\n \n-      ScaffoldMessenger.of(context).showSnackBar(\n-        const SnackBar(\n-          backgroundColor: Colors.green,\n-          content: Text('Profile updated successfully!'),\n-        ),\n-      );\n-      setState(() => _isEditing = false);\n-    } catch (e) {\n-      ScaffoldMessenger.of(context).showSnackBar(\n-        SnackBar(\n-          backgroundColor: Colors.red,\n-          content: Text('Failed to update profile: $e'),\n-        ),\n-      );\n-    } finally {\n-      setState(() => _isUpdatingProfile = false);\n-    }\n-  }\n+//       ScaffoldMessenger.of(context).showSnackBar(\n+//         const SnackBar(\n+//           backgroundColor: Colors.green,\n+//           content: Text('Profile updated successfully!'),\n+//         ),\n+//       );\n+//       setState(() => _isEditing = false);\n+//     } catch (e) {\n+//       ScaffoldMessenger.of(context).showSnackBar(\n+//         SnackBar(\n+//           backgroundColor: Colors.red,\n+//           content: Text('Failed to update profile: $e'),\n+//         ),\n+//       );\n+//     } finally {\n+//       setState(() => _isUpdatingProfile = false);\n+//     }\n+//   }\n \n-  @override\n-  Widget build(BuildContext context) {\n-    bool isMobile = MediaQuery.of(context).size.width < 830;\n-    Size widthSc = MediaQuery.of(context).size;\n+//   @override\n+//   Widget build(BuildContext context) {\n+//     bool isMobile = MediaQuery.of(context).size.width < 830;\n+//     Size widthSc = MediaQuery.of(context).size;\n \n-    if (_isLoading) {\n-      return Scaffold(\n-        appBar: AppBar(\n-          title: const Text('Profile'),\n-          backgroundColor: Colors.deepOrange,\n-          foregroundColor: Colors.white,\n-        ),\n-        body: const Center(child: CircularProgressIndicator()),\n-      );\n-    }\n+//     if (_isLoading) {\n+//       return Scaffold(\n+//         appBar: AppBar(\n+//           title: const Text('Profile'),\n+//           backgroundColor: Colors.deepOrange,\n+//           foregroundColor: Colors.white,\n+//         ),\n+//         body: const Center(child: CircularProgressIndicator()),\n+//       );\n+//     }\n \n-    return Scaffold(\n-      appBar: AppBar(\n-        title: const Text('Profile'),\n-        backgroundColor: Colors.deepOrange,\n-        foregroundColor: Colors.white,\n-        elevation: 4.0,\n-      ),\n-      body: SingleChildScrollView(\n-        padding: EdgeInsets.symmetric(\n-          horizontal: isMobile ? 6 : widthSc.width * 0.3,\n-          vertical: isMobile ? 12 : 20,\n-        ),\n-        child: Center(\n-          child: Column(\n-            crossAxisAlignment: CrossAxisAlignment.center,\n-            children: [\n-              Card(\n-                shape: RoundedRectangleBorder(\n-                    borderRadius: BorderRadius.circular(15.0)),\n-                elevation: 8.0,\n-                child: Padding(\n-                  padding: const EdgeInsets.all(16.0),\n-                  child: Column(\n-                    children: [\n-                      Stack(\n-                        children: [\n-                          GestureDetector(\n-                            onTap: () {\n-                              if (_profileImageUrl != null) {\n-                                // Logic to show full-screen image\n-                              }\n-                            },\n-                            child: CircleAvatar(\n-                              radius: 80.0,\n-                              backgroundColor: Colors.grey[200],\n-                              backgroundImage: _profileImageUrl != null\n-                                  ? NetworkImage(_profileImageUrl!)\n-                                  : null,\n-                            ),\n-                          ),\n-                          if (_isEditing)\n-                            Positioned(\n-                              bottom: 0,\n-                              right: 0,\n-                              child: IconButton(\n-                                icon: const Icon(Icons.edit,\n-                                    color: Colors.deepOrange),\n-                                onPressed: () async {\n-                                  final imageBytes =\n-                                      await _userService.pickSingleImage();\n-                                  if (imageBytes != null) {\n-                                    setState(() => _isUpdatingProfile = true);\n-                                    final imageUrl = await _userService\n-                                        .uploadProfileImage(imageBytes);\n-                                    if (imageUrl != null) {\n-                                      _profileImageUrl = imageUrl;\n-                                      await _userService.updateUserDetails(\n-                                          currentUser!.uid,\n-                                          {'profileImage': imageUrl});\n-                                      setState(() {});\n-                                    }\n-                                    setState(() => _isUpdatingProfile = false);\n-                                  }\n-                                },\n-                              ),\n-                            ),\n-                        ],\n-                      ),\n-                      const SizedBox(height: 20.0),\n-                      ProfileInfoField(\n-                          label: \"Name\",\n-                          controller: _nameController,\n-                          isEditable: _isEditing),\n-                      ProfileInfoField(\n-                          label: \"Email\",\n-                          controller:\n-                              _emailController), // Email is non-editable\n-                      ProfileInfoField(\n-                          label: \"Phone Number\",\n-                          controller: _phoneController,\n-                          isEditable: _isEditing),\n-                      ProfileInfoField(\n-                          label: \"Department\",\n-                          controller: _departmentController),\n-                      ProfileInfoField(\n-                          label: \"Joined Date\",\n-                          controller: _joinedDateController),\n+//     return Scaffold(\n+//       appBar: AppBar(\n+//         title: const Text('Profile'),\n+//         backgroundColor: Colors.deepOrange,\n+//         foregroundColor: Colors.white,\n+//         elevation: 4.0,\n+//       ),\n+//       body: SingleChildScrollView(\n+//         padding: EdgeInsets.symmetric(\n+//           horizontal: isMobile ? 6 : widthSc.width * 0.3,\n+//           vertical: isMobile ? 12 : 20,\n+//         ),\n+//         child: Center(\n+//           child: Column(\n+//             crossAxisAlignment: CrossAxisAlignment.center,\n+//             children: [\n+//               Card(\n+//                 shape: RoundedRectangleBorder(\n+//                     borderRadius: BorderRadius.circular(15.0)),\n+//                 elevation: 8.0,\n+//                 child: Padding(\n+//                   padding: const EdgeInsets.all(16.0),\n+//                   child: Column(\n+//                     children: [\n+//                       Stack(\n+//                         children: [\n+//                           GestureDetector(\n+//                             onTap: () {\n+//                               if (_profileImageUrl != null) {\n+//                                 // Logic to show full-screen image\n+//                               }\n+//                             },\n+//                             child: CircleAvatar(\n+//                               radius: 80.0,\n+//                               backgroundColor: Colors.grey[200],\n+//                               backgroundImage: _profileImageUrl != null\n+//                                   ? NetworkImage(_profileImageUrl!)\n+//                                   : null,\n+//                             ),\n+//                           ),\n+//                           if (_isEditing)\n+//                             Positioned(\n+//                               bottom: 0,\n+//                               right: 0,\n+//                               child: IconButton(\n+//                                 icon: const Icon(Icons.edit,\n+//                                     color: Colors.deepOrange),\n+//                                 onPressed: () async {\n+//                                   final imageBytes =\n+//                                       await _userService.pickSingleImage();\n+//                                   if (imageBytes != null) {\n+//                                     setState(() => _isUpdatingProfile = true);\n+//                                     final imageUrl = await _userService\n+//                                         .uploadProfileImage(imageBytes);\n+//                                     if (imageUrl != null) {\n+//                                       _profileImageUrl = imageUrl;\n+//                                       await _userService.updateUserDetails(\n+//                                           currentUser!.uid,\n+//                                           {'profileImage': imageUrl});\n+//                                       setState(() {});\n+//                                     }\n+//                                     setState(() => _isUpdatingProfile = false);\n+//                                   }\n+//                                 },\n+//                               ),\n+//                             ),\n+//                         ],\n+//                       ),\n+//                       const SizedBox(height: 20.0),\n+//                       ProfileInfoField(\n+//                           label: \"Name\",\n+//                           controller: _nameController,\n+//                           isEditable: _isEditing),\n+//                       ProfileInfoField(\n+//                           label: \"Email\",\n+//                           controller:\n+//                               _emailController), // Email is non-editable\n+//                       ProfileInfoField(\n+//                           label: \"Phone Number\",\n+//                           controller: _phoneController,\n+//                           isEditable: _isEditing),\n+//                       ProfileInfoField(\n+//                           label: \"Department\",\n+//                           controller: _departmentController),\n+//                       ProfileInfoField(\n+//                           label: \"Joined Date\",\n+//                           controller: _joinedDateController),\n \n-                      // Handle Dropdowns if needed\n-                      // This part needs more custom logic if they are editable\n-                      // For now, they are non-editable text fields.\n-                      ProfileInfoField(\n-                          label: \"Degree\", controller: _degreeController),\n-                      ProfileInfoField(\n-                          label: \"Gender\", controller: _genderController),\n-                      ProfileInfoField(\n-                          label: \"Hostel\", controller: _hostelController),\n-                      ProfileInfoField(\n-                          label: \"Year\", controller: _yearController),\n+//                       // Handle Dropdowns if needed\n+//                       // This part needs more custom logic if they are editable\n+//                       // For now, they are non-editable text fields.\n+//                       ProfileInfoField(\n+//                           label: \"Degree\", controller: _degreeController),\n+//                       ProfileInfoField(\n+//                           label: \"Gender\", controller: _genderController),\n+//                       ProfileInfoField(\n+//                           label: \"Hostel\", controller: _hostelController),\n+//                       ProfileInfoField(\n+//                           label: \"Year\", controller: _yearController),\n \n-                      const SizedBox(height: 20.0),\n-                      _isUpdatingProfile\n-                          ? const CircularProgressIndicator()\n-                          : ElevatedButton(\n-                              onPressed: () {\n-                                if (_isEditing) {\n-                                  _updateProfile();\n-                                } else {\n-                                  setState(() => _isEditing = true);\n-                                }\n-                              },\n-                              style: ElevatedButton.styleFrom(\n-                                padding: const EdgeInsets.symmetric(\n-                                    horizontal: 30, vertical: 15),\n-                                backgroundColor: Colors.deepOrange,\n-                                foregroundColor: Colors.white,\n-                                shape: RoundedRectangleBorder(\n-                                  borderRadius: BorderRadius.circular(9),\n-                                ),\n-                                elevation: 6.0,\n-                              ),\n-                              child: Text(\n-                                _isEditing ? \"Save Changes\" : \"Edit Profile\",\n-                                style: const TextStyle(fontSize: 18),\n-                              ),\n-                            ),\n-                    ],\n-                  ),\n-                ),\n-              ),\n-            ],\n-          ),\n-        ),\n-      ),\n-    );\n-  }\n-}\n+//                       const SizedBox(height: 20.0),\n+//                       _isUpdatingProfile\n+//                           ? const CircularProgressIndicator()\n+//                           : ElevatedButton(\n+//                               onPressed: () {\n+//                                 if (_isEditing) {\n+//                                   _updateProfile();\n+//                                 } else {\n+//                                   setState(() => _isEditing = true);\n+//                                 }\n+//                               },\n+//                               style: ElevatedButton.styleFrom(\n+//                                 padding: const EdgeInsets.symmetric(\n+//                                     horizontal: 30, vertical: 15),\n+//                                 backgroundColor: Colors.deepOrange,\n+//                                 foregroundColor: Colors.white,\n+//                                 shape: RoundedRectangleBorder(\n+//                                   borderRadius: BorderRadius.circular(9),\n+//                                 ),\n+//                                 elevation: 6.0,\n+//                               ),\n+//                               child: Text(\n+//                                 _isEditing ? \"Save Changes\" : \"Edit Profile\",\n+//                                 style: const TextStyle(fontSize: 18),\n+//                               ),\n+//                             ),\n+//                     ],\n+//                   ),\n+//                 ),\n+//               ),\n+//             ],\n+//           ),\n+//         ),\n+//       ),\n+//     );\n+//   }\n+// }\n"
                }
            ],
            "date": 1756116699793,
            "name": "Commit-0",
            "content": "// lib/Frontend/pages/profile_page.dart\nimport 'package:flutter/material.dart';\nimport 'package:firebase_auth/firebase_auth.dart';\nimport 'package:l_f/services/user_service.dart';\nimport 'package:l_f/Frontend/components/profile_info_field.dart';\n\nclass ProfilePage extends StatefulWidget {\n  const ProfilePage({super.key});\n\n  @override\n  _ProfilePageState createState() => _ProfilePageState();\n}\n\nclass _ProfilePageState extends State<ProfilePage> {\n  final UserService _userService = UserService();\n  final User? currentUser = FirebaseAuth.instance.currentUser;\n\n  final TextEditingController _nameController = TextEditingController();\n  final TextEditingController _emailController = TextEditingController();\n  final TextEditingController _phoneController = TextEditingController();\n  final TextEditingController _departmentController = TextEditingController();\n  final TextEditingController _degreeController = TextEditingController();\n  final TextEditingController _genderController = TextEditingController();\n  final TextEditingController _hostelController = TextEditingController();\n  final TextEditingController _yearController = TextEditingController();\n  final TextEditingController _joinedDateController = TextEditingController();\n\n  String? _profileImageUrl;\n  bool _isEditing = false;\n  bool _isLoading = true;\n  bool _isUpdatingProfile = false;\n\n  @override\n  void initState() {\n    super.initState();\n    _fetchUserDetails();\n  }\n\n  Future<void> _fetchUserDetails() async {\n    if (currentUser == null) {\n      setState(() => _isLoading = false);\n      return;\n    }\n    \n    try {\n      final userData = await _userService.fetchUserData(currentUser!.uid);\n      if (userData != null) {\n        _nameController.text = userData['name'] ?? '';\n        _emailController.text = userData['email'] ?? '';\n        _phoneController.text = userData['phonenumber'] ?? '';\n        _departmentController.text = userData['department'] ?? 'NITH';\n        _degreeController.text = userData['degree'] ?? '';\n        _genderController.text = userData['gender'] ?? '';\n        _hostelController.text = userData['hostel'] ?? '';\n        _yearController.text = userData['year'] ?? '';\n        _joinedDateController.text = (userData['joinedDate'] as Timestamp?)?.toDate().toString() ?? '';\n        _profileImageUrl = userData['profileImage'];\n      }\n    } catch (e) {\n      print('Error fetching user details: $e');\n    } finally {\n      setState(() => _isLoading = false);\n    }\n  }\n\n  Future<void> _updateProfile() async {\n    setState(() => _isUpdatingProfile = true);\n\n    try {\n      final Map<String, dynamic> updatedData = {\n        'name': _nameController.text,\n        'phonenumber': _phoneController.text,\n        'profileImage': _profileImageUrl,\n        'hostel': _hostelController.text,\n        // Add other fields you want to update\n      };\n      await _userService.updateUserDetails(currentUser!.uid, updatedData);\n\n      ScaffoldMessenger.of(context).showSnackBar(\n        const SnackBar(\n          backgroundColor: Colors.green,\n          content: Text('Profile updated successfully!'),\n        ),\n      );\n      setState(() => _isEditing = false);\n    } catch (e) {\n      ScaffoldMessenger.of(context).showSnackBar(\n        SnackBar(\n          backgroundColor: Colors.red,\n          content: Text('Failed to update profile: $e'),\n        ),\n      );\n    } finally {\n      setState(() => _isUpdatingProfile = false);\n    }\n  }\n  \n  @override\n  Widget build(BuildContext context) {\n    bool isMobile = MediaQuery.of(context).size.width < 830;\n    Size widthSc = MediaQuery.of(context).size;\n\n    if (_isLoading) {\n      return const Scaffold(\n        appBar: AppBar(\n          title: Text('Profile'),\n          backgroundColor: Colors.deepOrange,\n          foregroundColor: Colors.white,\n        ),\n        body: Center(child: CircularProgressIndicator()),\n      );\n    }\n\n    return Scaffold(\n      appBar: AppBar(\n        title: const Text('Profile'),\n        backgroundColor: Colors.deepOrange,\n        foregroundColor: Colors.white,\n        elevation: 4.0,\n      ),\n      body: SingleChildScrollView(\n        padding: EdgeInsets.symmetric(\n          horizontal: isMobile ? 6 : widthSc.width * 0.3,\n          vertical: isMobile ? 12 : 20,\n        ),\n        child: Center(\n          child: Column(\n            crossAxisAlignment: CrossAxisAlignment.center,\n            children: [\n              Card(\n                shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(15.0)),\n                elevation: 8.0,\n                child: Padding(\n                  padding: const EdgeInsets.all(16.0),\n                  child: Column(\n                    children: [\n                      Stack(\n                        children: [\n                          GestureDetector(\n                            onTap: () {\n                              if (_profileImageUrl != null) {\n                                // Logic to show full-screen image\n                              }\n                            },\n                            child: CircleAvatar(\n                              radius: 80.0,\n                              backgroundColor: Colors.grey[200],\n                              backgroundImage: _profileImageUrl != null\n                                  ? NetworkImage(_profileImageUrl!)\n                                  : null,\n                            ),\n                          ),\n                          if (_isEditing)\n                            Positioned(\n                              bottom: 0,\n                              right: 0,\n                              child: IconButton(\n                                icon: const Icon(Icons.edit, color: Colors.deepOrange),\n                                onPressed: () async {\n                                  final imageBytes = await _userService.pickSingleImage();\n                                  if (imageBytes != null) {\n                                    setState(() => _isUpdatingProfile = true);\n                                    final imageUrl = await _userService.uploadProfileImage(imageBytes);\n                                    if (imageUrl != null) {\n                                      _profileImageUrl = imageUrl;\n                                      await _userService.updateUserDetails(currentUser!.uid, {'profileImage': imageUrl});\n                                      setState(() {});\n                                    }\n                                    setState(() => _isUpdatingProfile = false);\n                                  }\n                                },\n                              ),\n                            ),\n                        ],\n                      ),\n                      const SizedBox(height: 20.0),\n                      ProfileInfoField(label: \"Name\", controller: _nameController, isEditable: _isEditing),\n                      ProfileInfoField(label: \"Email\", controller: _emailController), // Email is non-editable\n                      ProfileInfoField(label: \"Phone Number\", controller: _phoneController, isEditable: _isEditing),\n                      ProfileInfoField(label: \"Department\", controller: _departmentController),\n                      ProfileInfoField(label: \"Joined Date\", controller: _joinedDateController),\n                      \n                      // Handle Dropdowns if needed\n                      // This part needs more custom logic if they are editable\n                      // For now, they are non-editable text fields.\n                      ProfileInfoField(label: \"Degree\", controller: _degreeController),\n                      ProfileInfoField(label: \"Gender\", controller: _genderController),\n                      ProfileInfoField(label: \"Hostel\", controller: _hostelController),\n                      ProfileInfoField(label: \"Year\", controller: _yearController),\n                      \n                      const SizedBox(height: 20.0),\n                      _isUpdatingProfile\n                          ? const CircularProgressIndicator()\n                          : ElevatedButton(\n                              onPressed: () {\n                                if (_isEditing) {\n                                  _updateProfile();\n                                } else {\n                                  setState(() => _isEditing = true);\n                                }\n                              },\n                              child: Text(\n                                _isEditing ? \"Save Changes\" : \"Edit Profile\",\n                                style: const TextStyle(fontSize: 18),\n                              ),\n                              style: ElevatedButton.styleFrom(\n                                padding: const EdgeInsets.symmetric(horizontal: 30, vertical: 15),\n                                backgroundColor: Colors.deepOrange,\n                                foregroundColor: Colors.white,\n                                shape: RoundedRectangleBorder(\n                                  borderRadius: BorderRadius.circular(9),\n                                ),\n                                elevation: 6.0,\n                              ),\n                            ),\n                    ],\n                  ),\n                ),\n              ),\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n}\n"
        }
    ]
}