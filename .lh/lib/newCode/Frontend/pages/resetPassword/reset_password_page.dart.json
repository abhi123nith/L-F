{
    "sourceFile": "lib/newCode/Frontend/pages/resetPassword/reset_password_page.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1756115151914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1756115174738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import 'package:flutter/material.dart';\n import 'package:l_f/Backend/auth_service.dart';\n import 'package:l_f/Frontend/components/custom_text_field.dart';\n import 'package:firebase_auth/firebase_auth.dart';\n+import 'package:l_f/newCode/Frontend/components/custom_text_field.dart';\n \n class ResetPasswordPage extends StatefulWidget {\n   const ResetPasswordPage({super.key});\n \n"
                },
                {
                    "date": 1756115183768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n // lib/Frontend/pages/reset_password_page.dart\n import 'package:flutter/material.dart';\n import 'package:l_f/Backend/auth_service.dart';\n-import 'package:l_f/Frontend/components/custom_text_field.dart';\n import 'package:firebase_auth/firebase_auth.dart';\n+import 'package:l_f/newCode/Backend/auth_service.dart';\n import 'package:l_f/newCode/Frontend/components/custom_text_field.dart';\n \n class ResetPasswordPage extends StatefulWidget {\n   const ResetPasswordPage({super.key});\n"
                },
                {
                    "date": 1756122973112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,114 +1,113 @@\n-// lib/Frontend/pages/reset_password_page.dart\n-import 'package:flutter/material.dart';\n-import 'package:l_f/Backend/auth_service.dart';\n-import 'package:firebase_auth/firebase_auth.dart';\n-import 'package:l_f/newCode/Backend/auth_service.dart';\n-import 'package:l_f/newCode/Frontend/components/custom_text_field.dart';\n+// // lib/Frontend/pages/reset_password_page.dart\n+// import 'package:flutter/material.dart';\n+// import 'package:firebase_auth/firebase_auth.dart';\n+// import 'package:l_f/newCode/Backend/auth_service.dart';\n+// import 'package:l_f/newCode/Frontend/components/custom_text_field.dart';\n \n-class ResetPasswordPage extends StatefulWidget {\n-  const ResetPasswordPage({super.key});\n+// class ResetPasswordPage extends StatefulWidget {\n+//   const ResetPasswordPage({super.key});\n \n-  @override\n-  _ResetPasswordPageState createState() => _ResetPasswordPageState();\n-}\n+//   @override\n+//   _ResetPasswordPageState createState() => _ResetPasswordPageState();\n+// }\n \n-class _ResetPasswordPageState extends State<ResetPasswordPage> {\n-  final _emailController = TextEditingController();\n-  final _formKey = GlobalKey<FormState>();\n-  final AuthService _authService = AuthService();\n-  bool _isLoading = false;\n-  String? _errorMessage;\n+// class _ResetPasswordPageState extends State<ResetPasswordPage> {\n+//   final _emailController = TextEditingController();\n+//   final _formKey = GlobalKey<FormState>();\n+//   final AuthService _authService = AuthService();\n+//   bool _isLoading = false;\n+//   String? _errorMessage;\n \n-  Future<void> _resetPassword() async {\n-    if (_formKey.currentState!.validate()) {\n-      setState(() {\n-        _isLoading = true;\n-        _errorMessage = null;\n-      });\n+//   Future<void> _resetPassword() async {\n+//     if (_formKey.currentState!.validate()) {\n+//       setState(() {\n+//         _isLoading = true;\n+//         _errorMessage = null;\n+//       });\n \n-      try {\n-        await _authService.sendPasswordResetEmail(_emailController.text);\n-        ScaffoldMessenger.of(context).showSnackBar(\n-          const SnackBar(\n-            content: Text('Password reset email sent. Check your inbox.'),\n-            backgroundColor: Colors.deepOrange,\n-          ),\n-        );\n-      } on FirebaseAuthException catch (e) {\n-        setState(() {\n-          _errorMessage = e.message;\n-        });\n-      } catch (e) {\n-        setState(() {\n-          _errorMessage = 'An unexpected error occurred.';\n-        });\n-      } finally {\n-        setState(() {\n-          _isLoading = false;\n-        });\n-      }\n-    }\n-  }\n+//       try {\n+//         await _authService.sendPasswordResetEmail(_emailController.text);\n+//         ScaffoldMessenger.of(context).showSnackBar(\n+//           const SnackBar(\n+//             content: Text('Password reset email sent. Check your inbox.'),\n+//             backgroundColor: Colors.deepOrange,\n+//           ),\n+//         );\n+//       } on FirebaseAuthException catch (e) {\n+//         setState(() {\n+//           _errorMessage = e.message;\n+//         });\n+//       } catch (e) {\n+//         setState(() {\n+//           _errorMessage = 'An unexpected error occurred.';\n+//         });\n+//       } finally {\n+//         setState(() {\n+//           _isLoading = false;\n+//         });\n+//       }\n+//     }\n+//   }\n \n-  @override\n-  Widget build(BuildContext context) {\n-    bool isMobile = MediaQuery.of(context).size.width < 830;\n-    Size size = MediaQuery.of(context).size;\n+//   @override\n+//   Widget build(BuildContext context) {\n+//     bool isMobile = MediaQuery.of(context).size.width < 830;\n+//     Size size = MediaQuery.of(context).size;\n     \n-    return Scaffold(\n-      appBar: AppBar(\n-        title: const Text('Reset Password'),\n-        backgroundColor: Colors.deepOrange,\n-        foregroundColor: Colors.white,\n-      ),\n-      body: _isLoading\n-          ? const Center(child: CircularProgressIndicator())\n-          : Padding(\n-              padding: const EdgeInsets.all(16.0),\n-              child: Form(\n-                key: _formKey,\n-                child: Column(\n-                  mainAxisAlignment: MainAxisAlignment.center,\n-                  children: [\n-                    const Text(\n-                      'Reset Password',\n-                      style: TextStyle(\n-                        fontSize: 24,\n-                        fontWeight: FontWeight.bold,\n-                      ),\n-                    ),\n-                    SizedBox(height: isMobile ? 10 : 20),\n-                    Padding(\n-                      padding: EdgeInsets.symmetric(\n-                          horizontal: isMobile ? size.width * 0.1 : size.width * 0.3),\n-                      child: Center(\n-                        child: CustomTextField(\n-                          controller: _emailController,\n-                          label: 'Email',\n-                          icon: Icons.email,\n-                          keyboardType: TextInputType.emailAddress,\n-                          validator: (value) => value!.isEmpty ? 'Please enter your email' : null,\n-                        ),\n-                      ),\n-                    ),\n-                    const SizedBox(height: 20),\n-                    ElevatedButton(\n-                      onPressed: _resetPassword,\n-                      child: const Text('Send Reset Link'),\n-                    ),\n-                    if (_errorMessage != null)\n-                      Padding(\n-                        padding: const EdgeInsets.only(top: 16.0),\n-                        child: Text(\n-                          _errorMessage!,\n-                          style: const TextStyle(color: Colors.red),\n-                          textAlign: TextAlign.center,\n-                        ),\n-                      ),\n-                  ],\n-                ),\n-              ),\n-            ),\n-    );\n-  }\n-}\n+//     return Scaffold(\n+//       appBar: AppBar(\n+//         title: const Text('Reset Password'),\n+//         backgroundColor: Colors.deepOrange,\n+//         foregroundColor: Colors.white,\n+//       ),\n+//       body: _isLoading\n+//           ? const Center(child: CircularProgressIndicator())\n+//           : Padding(\n+//               padding: const EdgeInsets.all(16.0),\n+//               child: Form(\n+//                 key: _formKey,\n+//                 child: Column(\n+//                   mainAxisAlignment: MainAxisAlignment.center,\n+//                   children: [\n+//                     const Text(\n+//                       'Reset Password',\n+//                       style: TextStyle(\n+//                         fontSize: 24,\n+//                         fontWeight: FontWeight.bold,\n+//                       ),\n+//                     ),\n+//                     SizedBox(height: isMobile ? 10 : 20),\n+//                     Padding(\n+//                       padding: EdgeInsets.symmetric(\n+//                           horizontal: isMobile ? size.width * 0.1 : size.width * 0.3),\n+//                       child: Center(\n+//                         child: CustomTextField(\n+//                           controller: _emailController,\n+//                           label: 'Email',\n+//                           icon: Icons.email,\n+//                           keyboardType: TextInputType.emailAddress,\n+//                           validator: (value) => value!.isEmpty ? 'Please enter your email' : null,\n+//                         ),\n+//                       ),\n+//                     ),\n+//                     const SizedBox(height: 20),\n+//                     ElevatedButton(\n+//                       onPressed: _resetPassword,\n+//                       child: const Text('Send Reset Link'),\n+//                     ),\n+//                     if (_errorMessage != null)\n+//                       Padding(\n+//                         padding: const EdgeInsets.only(top: 16.0),\n+//                         child: Text(\n+//                           _errorMessage!,\n+//                           style: const TextStyle(color: Colors.red),\n+//                           textAlign: TextAlign.center,\n+//                         ),\n+//                       ),\n+//                   ],\n+//                 ),\n+//               ),\n+//             ),\n+//     );\n+//   }\n+// }\n"
                }
            ],
            "date": 1756115151914,
            "name": "Commit-0",
            "content": "// lib/Frontend/pages/reset_password_page.dart\nimport 'package:flutter/material.dart';\nimport 'package:l_f/Backend/auth_service.dart';\nimport 'package:l_f/Frontend/components/custom_text_field.dart';\nimport 'package:firebase_auth/firebase_auth.dart';\n\nclass ResetPasswordPage extends StatefulWidget {\n  const ResetPasswordPage({super.key});\n\n  @override\n  _ResetPasswordPageState createState() => _ResetPasswordPageState();\n}\n\nclass _ResetPasswordPageState extends State<ResetPasswordPage> {\n  final _emailController = TextEditingController();\n  final _formKey = GlobalKey<FormState>();\n  final AuthService _authService = AuthService();\n  bool _isLoading = false;\n  String? _errorMessage;\n\n  Future<void> _resetPassword() async {\n    if (_formKey.currentState!.validate()) {\n      setState(() {\n        _isLoading = true;\n        _errorMessage = null;\n      });\n\n      try {\n        await _authService.sendPasswordResetEmail(_emailController.text);\n        ScaffoldMessenger.of(context).showSnackBar(\n          const SnackBar(\n            content: Text('Password reset email sent. Check your inbox.'),\n            backgroundColor: Colors.deepOrange,\n          ),\n        );\n      } on FirebaseAuthException catch (e) {\n        setState(() {\n          _errorMessage = e.message;\n        });\n      } catch (e) {\n        setState(() {\n          _errorMessage = 'An unexpected error occurred.';\n        });\n      } finally {\n        setState(() {\n          _isLoading = false;\n        });\n      }\n    }\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    bool isMobile = MediaQuery.of(context).size.width < 830;\n    Size size = MediaQuery.of(context).size;\n    \n    return Scaffold(\n      appBar: AppBar(\n        title: const Text('Reset Password'),\n        backgroundColor: Colors.deepOrange,\n        foregroundColor: Colors.white,\n      ),\n      body: _isLoading\n          ? const Center(child: CircularProgressIndicator())\n          : Padding(\n              padding: const EdgeInsets.all(16.0),\n              child: Form(\n                key: _formKey,\n                child: Column(\n                  mainAxisAlignment: MainAxisAlignment.center,\n                  children: [\n                    const Text(\n                      'Reset Password',\n                      style: TextStyle(\n                        fontSize: 24,\n                        fontWeight: FontWeight.bold,\n                      ),\n                    ),\n                    SizedBox(height: isMobile ? 10 : 20),\n                    Padding(\n                      padding: EdgeInsets.symmetric(\n                          horizontal: isMobile ? size.width * 0.1 : size.width * 0.3),\n                      child: Center(\n                        child: CustomTextField(\n                          controller: _emailController,\n                          label: 'Email',\n                          icon: Icons.email,\n                          keyboardType: TextInputType.emailAddress,\n                          validator: (value) => value!.isEmpty ? 'Please enter your email' : null,\n                        ),\n                      ),\n                    ),\n                    const SizedBox(height: 20),\n                    ElevatedButton(\n                      onPressed: _resetPassword,\n                      child: const Text('Send Reset Link'),\n                    ),\n                    if (_errorMessage != null)\n                      Padding(\n                        padding: const EdgeInsets.only(top: 16.0),\n                        child: Text(\n                          _errorMessage!,\n                          style: const TextStyle(color: Colors.red),\n                          textAlign: TextAlign.center,\n                        ),\n                      ),\n                  ],\n                ),\n              ),\n            ),\n    );\n  }\n}\n"
        }
    ]
}