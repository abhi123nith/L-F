{
    "sourceFile": "lib/newCode/Frontend/components/post_card.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1756116355790,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1756117215719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n // lib/Frontend/components/post_card.dart\n+import 'package:cloud_firestore/cloud_firestore.dart';\n import 'package:flutter/material.dart';\n import 'package:carousel_slider/carousel_slider.dart';\n import 'package:l_f/models/post_model.dart';\n import 'package:l_f/Frontend/Profile/user_see_page.dart';\n"
                },
                {
                    "date": 1756117222814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n import 'package:flutter/material.dart';\n import 'package:carousel_slider/carousel_slider.dart';\n import 'package:l_f/models/post_model.dart';\n import 'package:l_f/Frontend/Profile/user_see_page.dart';\n+import 'package:l_f/newCode/Frontend/components/full_screen_image_viewer.dart';\n \n class PostCard extends StatelessWidget {\n   final PostModel post;\n   final Function(BuildContext, PostModel) onDelete;\n"
                },
                {
                    "date": 1756117229735,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n import 'package:carousel_slider/carousel_slider.dart';\n import 'package:l_f/models/post_model.dart';\n import 'package:l_f/Frontend/Profile/user_see_page.dart';\n import 'package:l_f/newCode/Frontend/components/full_screen_image_viewer.dart';\n+import 'package:l_f/newCode/models/post_model.dart';\n \n class PostCard extends StatelessWidget {\n   final PostModel post;\n   final Function(BuildContext, PostModel) onDelete;\n"
                },
                {
                    "date": 1756117361338,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,33 +1,30 @@\n // lib/Frontend/components/post_card.dart\n-import 'package:cloud_firestore/cloud_firestore.dart';\n import 'package:flutter/material.dart';\n import 'package:carousel_slider/carousel_slider.dart';\n import 'package:l_f/models/post_model.dart';\n-import 'package:l_f/Frontend/Profile/user_see_page.dart';\n-import 'package:l_f/newCode/Frontend/components/full_screen_image_viewer.dart';\n-import 'package:l_f/newCode/models/post_model.dart';\n+import 'package:l_f/Frontend/components/full_screen_image_viewer.dart';\n \n class PostCard extends StatelessWidget {\n   final PostModel post;\n-  final Function(BuildContext, PostModel) onDelete;\n-  final Function(BuildContext, String, String, String) onReply;\n-  final Function(BuildContext, String, String, String, String, String) onClaim;\n-  final Function(BuildContext, String, String) onShare;\n   final String currentUserId;\n   final bool isMobile;\n   final bool userHasRequestedClaim;\n+  final VoidCallback onDelete;\n+  final VoidCallback onReply;\n+  final VoidCallback onClaim;\n+  final VoidCallback onShare;\n \n   const PostCard({\n     super.key,\n     required this.post,\n+    required this.currentUserId,\n+    required this.isMobile,\n+    required this.userHasRequestedClaim,\n     required this.onDelete,\n     required this.onReply,\n     required this.onClaim,\n     required this.onShare,\n-    required this.currentUserId,\n-    required this.isMobile,\n-    required this.userHasRequestedClaim,\n   });\n \n   @override\n   Widget build(BuildContext context) {\n@@ -46,12 +43,10 @@\n               children: [\n                 // Header of the POST (profile, name, location, delete)\n                 GestureDetector(\n                   onTap: () {\n-                    Navigator.push(\n-                      context,\n-                      MaterialPageRoute(builder: (_) => ProfilePage2(uid: post.postmakerId)),\n-                    );\n+                    // Navigate to user profile page\n+                    // Navigator.push(context, MaterialPageRoute(builder: (_) => UserSeePage(uid: post.postmakerId)));\n                   },\n                   child: ListTile(\n                     leading: CircleAvatar(\n                       radius: 30,\n@@ -64,9 +59,9 @@\n                     subtitle: Text(\"Location: ${post.location}, NITH\"),\n                     trailing: PopupMenuButton<String>(\n                       onSelected: (value) {\n                         if (value == 'Delete' && currentUserId == post.postmakerId) {\n-                          onDelete(context, post);\n+                           onDelete();\n                         }\n                       },\n                       itemBuilder: (BuildContext context) {\n                         return (currentUserId == post.postmakerId)\n@@ -191,78 +186,63 @@\n                       ),\n                       const SizedBox(height: 10),\n \n                       // Buttons for interactions\n-                      StreamBuilder<QuerySnapshot>(\n-                        stream: FirebaseFirestore.instance\n-                            .collection('posts')\n-                            .doc(post.postId)\n-                            .collection('claims')\n-                            .where('senderId', isEqualTo: currentUserId)\n-                            .snapshots(),\n-                        builder: (context, claimSnapshot) {\n-                          bool userHasClaimed = false;\n-                          if (claimSnapshot.hasData && claimSnapshot.data!.docs.isNotEmpty) {\n-                            userHasClaimed = true;\n-                          }\n-\n-                          return Row(\n-                            mainAxisAlignment: MainAxisAlignment.spaceAround,\n-                            children: [\n-                              GestureDetector(\n-                                onTap: () => onShare(context, post.title, post.description),\n-                                child: const Row(\n-                                  children: [\n-                                    Icon(Icons.share_rounded),\n-                                    SizedBox(width: 3),\n-                                    Text('Share'),\n-                                  ],\n-                                ),\n+                      Row(\n+                        mainAxisAlignment: MainAxisAlignment.spaceAround,\n+                        children: [\n+                          GestureDetector(\n+                            onTap: onShare,\n+                            child: const Row(\n+                              children: [\n+                                Icon(Icons.share_rounded),\n+                                SizedBox(width: 3),\n+                                Text('Share'),\n+                              ],\n+                            ),\n+                          ),\n+                          if (currentUserId != post.postmakerId)\n+                            ElevatedButton(\n+                              onPressed: onReply,\n+                              style: ElevatedButton.styleFrom(\n+                                backgroundColor: Colors.green.shade600,\n+                                shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),\n                               ),\n-                              if (currentUserId != post.postmakerId)\n-                                ElevatedButton(\n-                                  onPressed: () => onReply(context, post.postmakerId, post.userName, post.postId),\n-                                  style: ElevatedButton.styleFrom(\n-                                    backgroundColor: Colors.green.shade600,\n-                                    shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),\n-                                  ),\n-                                  child: const Row(\n-                                    mainAxisAlignment: MainAxisAlignment.center,\n-                                    children: [\n-                                      Icon(Icons.reply, color: Colors.white),\n-                                      SizedBox(width: 3),\n-                                      Text('Reply', style: TextStyle(color: Colors.white)),\n-                                    ],\n-                                  ),\n-                                ),\n-                              if (post.status == 'Found' && !post.isClaimed && currentUserId != post.postmakerId)\n-                                ElevatedButton(\n-                                  onPressed: () => onClaim(context, post.postmakerId, post.title, post.question!, post.description, post.postId),\n-                                  style: ElevatedButton.styleFrom(\n-                                    backgroundColor: Colors.deepOrange.shade600,\n-                                    shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),\n-                                  ),\n-                                  child: const Row(\n-                                    mainAxisAlignment: MainAxisAlignment.center,\n-                                    children: [\n-                                      Icon(Icons.back_hand, color: Colors.white),\n-                                      SizedBox(width: 6),\n-                                      Text('Claim', style: TextStyle(color: Colors.white)),\n-                                    ],\n-                                  ),\n-                                ),\n-                              if (userHasClaimed && post.status == 'Found' && currentUserId != post.postmakerId)\n-                                ElevatedButton(\n-                                  onPressed: () {},\n-                                  style: ElevatedButton.styleFrom(\n-                                    backgroundColor: Colors.blueGrey,\n-                                    shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),\n-                                  ),\n-                                  child: const Text('Requested', style: TextStyle(color: Colors.white)),\n-                                ),\n-                            ],\n-                          );\n-                        },\n+                              child: const Row(\n+                                mainAxisAlignment: MainAxisAlignment.center,\n+                                children: [\n+                                  Icon(Icons.reply, color: Colors.white),\n+                                  SizedBox(width: 3),\n+                                  Text('Reply', style: TextStyle(color: Colors.white)),\n+                                ],\n+                              ),\n+                            ),\n+                          if (post.status == 'Found' && !post.isClaimed && currentUserId != post.postmakerId && !userHasRequestedClaim)\n+                            ElevatedButton(\n+                              onPressed: onClaim,\n+                              style: ElevatedButton.styleFrom(\n+                                backgroundColor: Colors.deepOrange.shade600,\n+                                shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),\n+                              ),\n+                              child: const Row(\n+                                mainAxisAlignment: MainAxisAlignment.center,\n+                                children: [\n+                                  Icon(Icons.back_hand, color: Colors.white),\n+                                  SizedBox(width: 6),\n+                                  Text('Claim', style: TextStyle(color: Colors.white)),\n+                                ],\n+                              ),\n+                            ),\n+                          if (userHasRequestedClaim)\n+                            ElevatedButton(\n+                              onPressed: () {},\n+                              style: ElevatedButton.styleFrom(\n+                                backgroundColor: Colors.blueGrey,\n+                                shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),\n+                              ),\n+                              child: const Text('Requested', style: TextStyle(color: Colors.white)),\n+                            ),\n+                        ],\n                       ),\n                     ],\n                   ),\n                 ),\n"
                },
                {
                    "date": 1756117367989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import 'package:flutter/material.dart';\n import 'package:carousel_slider/carousel_slider.dart';\n import 'package:l_f/models/post_model.dart';\n import 'package:l_f/Frontend/components/full_screen_image_viewer.dart';\n+import 'package:l_f/newCode/Frontend/components/full_screen_image_viewer.dart';\n \n class PostCard extends StatelessWidget {\n   final PostModel post;\n   final String currentUserId;\n"
                },
                {
                    "date": 1756117374312,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n import 'package:carousel_slider/carousel_slider.dart';\n import 'package:l_f/models/post_model.dart';\n import 'package:l_f/Frontend/components/full_screen_image_viewer.dart';\n import 'package:l_f/newCode/Frontend/components/full_screen_image_viewer.dart';\n+import 'package:l_f/newCode/models/post_model.dart';\n \n class PostCard extends StatelessWidget {\n   final PostModel post;\n   final String currentUserId;\n"
                },
                {
                    "date": 1756120532842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,10 @@\n // lib/Frontend/components/post_card.dart\n import 'package:flutter/material.dart';\n import 'package:carousel_slider/carousel_slider.dart';\n-import 'package:l_f/models/post_model.dart';\n-import 'package:l_f/Frontend/components/full_screen_image_viewer.dart';\n+import 'package:l_f/newCode/models/post_model.dart';\n import 'package:l_f/newCode/Frontend/components/full_screen_image_viewer.dart';\n-import 'package:l_f/newCode/models/post_model.dart';\n+import 'package:l_f/newCode/Frontend/pages/profile/user_see_page.dart'; // Import for navigation\n \n class PostCard extends StatelessWidget {\n   final PostModel post;\n   final String currentUserId;\n@@ -45,10 +44,12 @@\n               children: [\n                 // Header of the POST (profile, name, location, delete)\n                 GestureDetector(\n                   onTap: () {\n-                    // Navigate to user profile page\n-                    // Navigator.push(context, MaterialPageRoute(builder: (_) => UserSeePage(uid: post.postmakerId)));\n+                    Navigator.push(\n+                      context,\n+                      MaterialPageRoute(builder: (_) => UserSeePage(uid: post.postmakerId)),\n+                    );\n                   },\n                   child: ListTile(\n                     leading: CircleAvatar(\n                       radius: 30,\n"
                },
                {
                    "date": 1756123016587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,259 +1,259 @@\n-// lib/Frontend/components/post_card.dart\n-import 'package:flutter/material.dart';\n-import 'package:carousel_slider/carousel_slider.dart';\n-import 'package:l_f/newCode/models/post_model.dart';\n-import 'package:l_f/newCode/Frontend/components/full_screen_image_viewer.dart';\n-import 'package:l_f/newCode/Frontend/pages/profile/user_see_page.dart'; // Import for navigation\n+// // lib/Frontend/components/post_card.dart\n+// import 'package:flutter/material.dart';\n+// import 'package:carousel_slider/carousel_slider.dart';\n+// import 'package:l_f/newCode/models/post_model.dart';\n+// import 'package:l_f/newCode/Frontend/components/full_screen_image_viewer.dart';\n+// import 'package:l_f/newCode/Frontend/pages/profile/user_see_page.dart'; // Import for navigation\n \n-class PostCard extends StatelessWidget {\n-  final PostModel post;\n-  final String currentUserId;\n-  final bool isMobile;\n-  final bool userHasRequestedClaim;\n-  final VoidCallback onDelete;\n-  final VoidCallback onReply;\n-  final VoidCallback onClaim;\n-  final VoidCallback onShare;\n+// class PostCard extends StatelessWidget {\n+//   final PostModel post;\n+//   final String currentUserId;\n+//   final bool isMobile;\n+//   final bool userHasRequestedClaim;\n+//   final VoidCallback onDelete;\n+//   final VoidCallback onReply;\n+//   final VoidCallback onClaim;\n+//   final VoidCallback onShare;\n \n-  const PostCard({\n-    super.key,\n-    required this.post,\n-    required this.currentUserId,\n-    required this.isMobile,\n-    required this.userHasRequestedClaim,\n-    required this.onDelete,\n-    required this.onReply,\n-    required this.onClaim,\n-    required this.onShare,\n-  });\n+//   const PostCard({\n+//     super.key,\n+//     required this.post,\n+//     required this.currentUserId,\n+//     required this.isMobile,\n+//     required this.userHasRequestedClaim,\n+//     required this.onDelete,\n+//     required this.onReply,\n+//     required this.onClaim,\n+//     required this.onShare,\n+//   });\n \n-  @override\n-  Widget build(BuildContext context) {\n-    return Padding(\n-      padding: const EdgeInsets.all(2.0),\n-      child: Center(\n-        child: SizedBox(\n-          width: isMobile ? MediaQuery.of(context).size.width : 600,\n-          child: Card(\n-            elevation: 5,\n-            shape: RoundedRectangleBorder(\n-              borderRadius: BorderRadius.circular(10),\n-            ),\n-            child: Column(\n-              crossAxisAlignment: CrossAxisAlignment.start,\n-              children: [\n-                // Header of the POST (profile, name, location, delete)\n-                GestureDetector(\n-                  onTap: () {\n-                    Navigator.push(\n-                      context,\n-                      MaterialPageRoute(builder: (_) => UserSeePage(uid: post.postmakerId)),\n-                    );\n-                  },\n-                  child: ListTile(\n-                    leading: CircleAvatar(\n-                      radius: 30,\n-                      backgroundImage: NetworkImage(post.profileImageUrl),\n-                    ),\n-                    title: Text(\n-                      post.userName,\n-                      style: const TextStyle(fontWeight: FontWeight.bold),\n-                    ),\n-                    subtitle: Text(\"Location: ${post.location}, NITH\"),\n-                    trailing: PopupMenuButton<String>(\n-                      onSelected: (value) {\n-                        if (value == 'Delete' && currentUserId == post.postmakerId) {\n-                           onDelete();\n-                        }\n-                      },\n-                      itemBuilder: (BuildContext context) {\n-                        return (currentUserId == post.postmakerId)\n-                            ? {'Delete'}.map((String choice) {\n-                                return PopupMenuItem<String>(\n-                                  value: choice,\n-                                  child: Text(choice),\n-                                );\n-                              }).toList()\n-                            : [];\n-                      },\n-                    ),\n-                  ),\n-                ),\n+//   @override\n+//   Widget build(BuildContext context) {\n+//     return Padding(\n+//       padding: const EdgeInsets.all(2.0),\n+//       child: Center(\n+//         child: SizedBox(\n+//           width: isMobile ? MediaQuery.of(context).size.width : 600,\n+//           child: Card(\n+//             elevation: 5,\n+//             shape: RoundedRectangleBorder(\n+//               borderRadius: BorderRadius.circular(10),\n+//             ),\n+//             child: Column(\n+//               crossAxisAlignment: CrossAxisAlignment.start,\n+//               children: [\n+//                 // Header of the POST (profile, name, location, delete)\n+//                 GestureDetector(\n+//                   onTap: () {\n+//                     Navigator.push(\n+//                       context,\n+//                       MaterialPageRoute(builder: (_) => UserSeePage(uid: post.postmakerId)),\n+//                     );\n+//                   },\n+//                   child: ListTile(\n+//                     leading: CircleAvatar(\n+//                       radius: 30,\n+//                       backgroundImage: NetworkImage(post.profileImageUrl),\n+//                     ),\n+//                     title: Text(\n+//                       post.userName,\n+//                       style: const TextStyle(fontWeight: FontWeight.bold),\n+//                     ),\n+//                     subtitle: Text(\"Location: ${post.location}, NITH\"),\n+//                     trailing: PopupMenuButton<String>(\n+//                       onSelected: (value) {\n+//                         if (value == 'Delete' && currentUserId == post.postmakerId) {\n+//                            onDelete();\n+//                         }\n+//                       },\n+//                       itemBuilder: (BuildContext context) {\n+//                         return (currentUserId == post.postmakerId)\n+//                             ? {'Delete'}.map((String choice) {\n+//                                 return PopupMenuItem<String>(\n+//                                   value: choice,\n+//                                   child: Text(choice),\n+//                                 );\n+//                               }).toList()\n+//                             : [];\n+//                       },\n+//                     ),\n+//                   ),\n+//                 ),\n \n-                // Carousel of images\n-                Stack(\n-                  children: [\n-                    CarouselSlider(\n-                      options: CarouselOptions(\n-                        autoPlay: true,\n-                        height: 450.0,\n-                        enlargeCenterPage: true,\n-                      ),\n-                      items: post.itemImages.map<Widget>((imageUrl) {\n-                        return GestureDetector(\n-                          onTap: () {\n-                            Navigator.push(\n-                              context,\n-                              MaterialPageRoute(\n-                                builder: (context) => FullScreenImageViewer(post.itemImages, isMobile),\n-                              ),\n-                            );\n-                          },\n-                          child: ClipRRect(\n-                            borderRadius: BorderRadius.circular(10),\n-                            child: Image.network(\n-                              imageUrl,\n-                              fit: BoxFit.cover,\n-                              width: MediaQuery.of(context).size.width,\n-                              errorBuilder: (context, error, stackTrace) {\n-                                return const Icon(Icons.error);\n-                              },\n-                            ),\n-                          ),\n-                        );\n-                      }).toList(),\n-                    ),\n-                    Positioned(\n-                      top: isMobile ? 16 : 6,\n-                      left: 50,\n-                      child: Container(\n-                        padding: const EdgeInsets.symmetric(horizontal: 10, vertical: 5),\n-                        decoration: BoxDecoration(\n-                          color: post.status == 'Lost' ? Colors.red : Colors.green,\n-                          borderRadius: BorderRadius.circular(5),\n-                        ),\n-                        child: Text(\n-                          post.status,\n-                          style: const TextStyle(\n-                            color: Colors.white,\n-                            fontWeight: FontWeight.bold,\n-                          ),\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n+//                 // Carousel of images\n+//                 Stack(\n+//                   children: [\n+//                     CarouselSlider(\n+//                       options: CarouselOptions(\n+//                         autoPlay: true,\n+//                         height: 450.0,\n+//                         enlargeCenterPage: true,\n+//                       ),\n+//                       items: post.itemImages.map<Widget>((imageUrl) {\n+//                         return GestureDetector(\n+//                           onTap: () {\n+//                             Navigator.push(\n+//                               context,\n+//                               MaterialPageRoute(\n+//                                 builder: (context) => FullScreenImageViewer(post.itemImages, isMobile),\n+//                               ),\n+//                             );\n+//                           },\n+//                           child: ClipRRect(\n+//                             borderRadius: BorderRadius.circular(10),\n+//                             child: Image.network(\n+//                               imageUrl,\n+//                               fit: BoxFit.cover,\n+//                               width: MediaQuery.of(context).size.width,\n+//                               errorBuilder: (context, error, stackTrace) {\n+//                                 return const Icon(Icons.error);\n+//                               },\n+//                             ),\n+//                           ),\n+//                         );\n+//                       }).toList(),\n+//                     ),\n+//                     Positioned(\n+//                       top: isMobile ? 16 : 6,\n+//                       left: 50,\n+//                       child: Container(\n+//                         padding: const EdgeInsets.symmetric(horizontal: 10, vertical: 5),\n+//                         decoration: BoxDecoration(\n+//                           color: post.status == 'Lost' ? Colors.red : Colors.green,\n+//                           borderRadius: BorderRadius.circular(5),\n+//                         ),\n+//                         child: Text(\n+//                           post.status,\n+//                           style: const TextStyle(\n+//                             color: Colors.white,\n+//                             fontWeight: FontWeight.bold,\n+//                           ),\n+//                         ),\n+//                       ),\n+//                     ),\n+//                   ],\n+//                 ),\n \n-                Padding(\n-                  padding: const EdgeInsets.symmetric(horizontal: 18.0, vertical: 10),\n-                  child: Column(\n-                    crossAxisAlignment: CrossAxisAlignment.start,\n-                    children: [\n-                      // Item Title and Date\n-                      Row(\n-                        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                        children: [\n-                          Text(\n-                            post.title == 'Other' ? '${post.status} Item' : post.title,\n-                            overflow: TextOverflow.clip,\n-                            softWrap: true,\n-                            style: const TextStyle(fontSize: 18, fontWeight: FontWeight.bold),\n-                          ),\n-                          const SizedBox(width: 5),\n-                          Row(\n-                            children: [\n-                              Text(\n-                                \"${post.status} On: \",\n-                                overflow: TextOverflow.clip,\n-                                softWrap: true,\n-                                style: const TextStyle(color: Colors.red, fontWeight: FontWeight.bold),\n-                              ),\n-                              Text(\n-                                post.postTime,\n-                                style: const TextStyle(fontWeight: FontWeight.bold),\n-                              ),\n-                            ],\n-                          ),\n-                        ],\n-                      ),\n-                      const SizedBox(height: 5),\n+//                 Padding(\n+//                   padding: const EdgeInsets.symmetric(horizontal: 18.0, vertical: 10),\n+//                   child: Column(\n+//                     crossAxisAlignment: CrossAxisAlignment.start,\n+//                     children: [\n+//                       // Item Title and Date\n+//                       Row(\n+//                         mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+//                         children: [\n+//                           Text(\n+//                             post.title == 'Other' ? '${post.status} Item' : post.title,\n+//                             overflow: TextOverflow.clip,\n+//                             softWrap: true,\n+//                             style: const TextStyle(fontSize: 18, fontWeight: FontWeight.bold),\n+//                           ),\n+//                           const SizedBox(width: 5),\n+//                           Row(\n+//                             children: [\n+//                               Text(\n+//                                 \"${post.status} On: \",\n+//                                 overflow: TextOverflow.clip,\n+//                                 softWrap: true,\n+//                                 style: const TextStyle(color: Colors.red, fontWeight: FontWeight.bold),\n+//                               ),\n+//                               Text(\n+//                                 post.postTime,\n+//                                 style: const TextStyle(fontWeight: FontWeight.bold),\n+//                               ),\n+//                             ],\n+//                           ),\n+//                         ],\n+//                       ),\n+//                       const SizedBox(height: 5),\n \n-                      // Description\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.start,\n-                        children: [\n-                          const Text(\n-                            \"Description: \",\n-                            style: TextStyle(fontWeight: FontWeight.bold),\n-                          ),\n-                          const SizedBox(width: 4),\n-                          Expanded(\n-                            child: Text(\n-                              post.description,\n-                              overflow: TextOverflow.clip,\n-                              softWrap: true,\n-                              style: const TextStyle(fontSize: 14),\n-                            ),\n-                          ),\n-                        ],\n-                      ),\n-                      const SizedBox(height: 10),\n+//                       // Description\n+//                       Row(\n+//                         crossAxisAlignment: CrossAxisAlignment.start,\n+//                         children: [\n+//                           const Text(\n+//                             \"Description: \",\n+//                             style: TextStyle(fontWeight: FontWeight.bold),\n+//                           ),\n+//                           const SizedBox(width: 4),\n+//                           Expanded(\n+//                             child: Text(\n+//                               post.description,\n+//                               overflow: TextOverflow.clip,\n+//                               softWrap: true,\n+//                               style: const TextStyle(fontSize: 14),\n+//                             ),\n+//                           ),\n+//                         ],\n+//                       ),\n+//                       const SizedBox(height: 10),\n \n-                      // Buttons for interactions\n-                      Row(\n-                        mainAxisAlignment: MainAxisAlignment.spaceAround,\n-                        children: [\n-                          GestureDetector(\n-                            onTap: onShare,\n-                            child: const Row(\n-                              children: [\n-                                Icon(Icons.share_rounded),\n-                                SizedBox(width: 3),\n-                                Text('Share'),\n-                              ],\n-                            ),\n-                          ),\n-                          if (currentUserId != post.postmakerId)\n-                            ElevatedButton(\n-                              onPressed: onReply,\n-                              style: ElevatedButton.styleFrom(\n-                                backgroundColor: Colors.green.shade600,\n-                                shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),\n-                              ),\n-                              child: const Row(\n-                                mainAxisAlignment: MainAxisAlignment.center,\n-                                children: [\n-                                  Icon(Icons.reply, color: Colors.white),\n-                                  SizedBox(width: 3),\n-                                  Text('Reply', style: TextStyle(color: Colors.white)),\n-                                ],\n-                              ),\n-                            ),\n-                          if (post.status == 'Found' && !post.isClaimed && currentUserId != post.postmakerId && !userHasRequestedClaim)\n-                            ElevatedButton(\n-                              onPressed: onClaim,\n-                              style: ElevatedButton.styleFrom(\n-                                backgroundColor: Colors.deepOrange.shade600,\n-                                shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),\n-                              ),\n-                              child: const Row(\n-                                mainAxisAlignment: MainAxisAlignment.center,\n-                                children: [\n-                                  Icon(Icons.back_hand, color: Colors.white),\n-                                  SizedBox(width: 6),\n-                                  Text('Claim', style: TextStyle(color: Colors.white)),\n-                                ],\n-                              ),\n-                            ),\n-                          if (userHasRequestedClaim)\n-                            ElevatedButton(\n-                              onPressed: () {},\n-                              style: ElevatedButton.styleFrom(\n-                                backgroundColor: Colors.blueGrey,\n-                                shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),\n-                              ),\n-                              child: const Text('Requested', style: TextStyle(color: Colors.white)),\n-                            ),\n-                        ],\n-                      ),\n-                    ],\n-                  ),\n-                ),\n-              ],\n-            ),\n-          ),\n-        ),\n-      ),\n-    );\n-  }\n-}\n+//                       // Buttons for interactions\n+//                       Row(\n+//                         mainAxisAlignment: MainAxisAlignment.spaceAround,\n+//                         children: [\n+//                           GestureDetector(\n+//                             onTap: onShare,\n+//                             child: const Row(\n+//                               children: [\n+//                                 Icon(Icons.share_rounded),\n+//                                 SizedBox(width: 3),\n+//                                 Text('Share'),\n+//                               ],\n+//                             ),\n+//                           ),\n+//                           if (currentUserId != post.postmakerId)\n+//                             ElevatedButton(\n+//                               onPressed: onReply,\n+//                               style: ElevatedButton.styleFrom(\n+//                                 backgroundColor: Colors.green.shade600,\n+//                                 shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),\n+//                               ),\n+//                               child: const Row(\n+//                                 mainAxisAlignment: MainAxisAlignment.center,\n+//                                 children: [\n+//                                   Icon(Icons.reply, color: Colors.white),\n+//                                   SizedBox(width: 3),\n+//                                   Text('Reply', style: TextStyle(color: Colors.white)),\n+//                                 ],\n+//                               ),\n+//                             ),\n+//                           if (post.status == 'Found' && !post.isClaimed && currentUserId != post.postmakerId && !userHasRequestedClaim)\n+//                             ElevatedButton(\n+//                               onPressed: onClaim,\n+//                               style: ElevatedButton.styleFrom(\n+//                                 backgroundColor: Colors.deepOrange.shade600,\n+//                                 shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),\n+//                               ),\n+//                               child: const Row(\n+//                                 mainAxisAlignment: MainAxisAlignment.center,\n+//                                 children: [\n+//                                   Icon(Icons.back_hand, color: Colors.white),\n+//                                   SizedBox(width: 6),\n+//                                   Text('Claim', style: TextStyle(color: Colors.white)),\n+//                                 ],\n+//                               ),\n+//                             ),\n+//                           if (userHasRequestedClaim)\n+//                             ElevatedButton(\n+//                               onPressed: () {},\n+//                               style: ElevatedButton.styleFrom(\n+//                                 backgroundColor: Colors.blueGrey,\n+//                                 shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),\n+//                               ),\n+//                               child: const Text('Requested', style: TextStyle(color: Colors.white)),\n+//                             ),\n+//                         ],\n+//                       ),\n+//                     ],\n+//                   ),\n+//                 ),\n+//               ],\n+//             ),\n+//           ),\n+//         ),\n+//       ),\n+//     );\n+//   }\n+// }\n"
                }
            ],
            "date": 1756116355790,
            "name": "Commit-0",
            "content": "// lib/Frontend/components/post_card.dart\nimport 'package:flutter/material.dart';\nimport 'package:carousel_slider/carousel_slider.dart';\nimport 'package:l_f/models/post_model.dart';\nimport 'package:l_f/Frontend/Profile/user_see_page.dart';\n\nclass PostCard extends StatelessWidget {\n  final PostModel post;\n  final Function(BuildContext, PostModel) onDelete;\n  final Function(BuildContext, String, String, String) onReply;\n  final Function(BuildContext, String, String, String, String, String) onClaim;\n  final Function(BuildContext, String, String) onShare;\n  final String currentUserId;\n  final bool isMobile;\n  final bool userHasRequestedClaim;\n\n  const PostCard({\n    super.key,\n    required this.post,\n    required this.onDelete,\n    required this.onReply,\n    required this.onClaim,\n    required this.onShare,\n    required this.currentUserId,\n    required this.isMobile,\n    required this.userHasRequestedClaim,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return Padding(\n      padding: const EdgeInsets.all(2.0),\n      child: Center(\n        child: SizedBox(\n          width: isMobile ? MediaQuery.of(context).size.width : 600,\n          child: Card(\n            elevation: 5,\n            shape: RoundedRectangleBorder(\n              borderRadius: BorderRadius.circular(10),\n            ),\n            child: Column(\n              crossAxisAlignment: CrossAxisAlignment.start,\n              children: [\n                // Header of the POST (profile, name, location, delete)\n                GestureDetector(\n                  onTap: () {\n                    Navigator.push(\n                      context,\n                      MaterialPageRoute(builder: (_) => ProfilePage2(uid: post.postmakerId)),\n                    );\n                  },\n                  child: ListTile(\n                    leading: CircleAvatar(\n                      radius: 30,\n                      backgroundImage: NetworkImage(post.profileImageUrl),\n                    ),\n                    title: Text(\n                      post.userName,\n                      style: const TextStyle(fontWeight: FontWeight.bold),\n                    ),\n                    subtitle: Text(\"Location: ${post.location}, NITH\"),\n                    trailing: PopupMenuButton<String>(\n                      onSelected: (value) {\n                        if (value == 'Delete' && currentUserId == post.postmakerId) {\n                          onDelete(context, post);\n                        }\n                      },\n                      itemBuilder: (BuildContext context) {\n                        return (currentUserId == post.postmakerId)\n                            ? {'Delete'}.map((String choice) {\n                                return PopupMenuItem<String>(\n                                  value: choice,\n                                  child: Text(choice),\n                                );\n                              }).toList()\n                            : [];\n                      },\n                    ),\n                  ),\n                ),\n\n                // Carousel of images\n                Stack(\n                  children: [\n                    CarouselSlider(\n                      options: CarouselOptions(\n                        autoPlay: true,\n                        height: 450.0,\n                        enlargeCenterPage: true,\n                      ),\n                      items: post.itemImages.map<Widget>((imageUrl) {\n                        return GestureDetector(\n                          onTap: () {\n                            Navigator.push(\n                              context,\n                              MaterialPageRoute(\n                                builder: (context) => FullScreenImageViewer(post.itemImages, isMobile),\n                              ),\n                            );\n                          },\n                          child: ClipRRect(\n                            borderRadius: BorderRadius.circular(10),\n                            child: Image.network(\n                              imageUrl,\n                              fit: BoxFit.cover,\n                              width: MediaQuery.of(context).size.width,\n                              errorBuilder: (context, error, stackTrace) {\n                                return const Icon(Icons.error);\n                              },\n                            ),\n                          ),\n                        );\n                      }).toList(),\n                    ),\n                    Positioned(\n                      top: isMobile ? 16 : 6,\n                      left: 50,\n                      child: Container(\n                        padding: const EdgeInsets.symmetric(horizontal: 10, vertical: 5),\n                        decoration: BoxDecoration(\n                          color: post.status == 'Lost' ? Colors.red : Colors.green,\n                          borderRadius: BorderRadius.circular(5),\n                        ),\n                        child: Text(\n                          post.status,\n                          style: const TextStyle(\n                            color: Colors.white,\n                            fontWeight: FontWeight.bold,\n                          ),\n                        ),\n                      ),\n                    ),\n                  ],\n                ),\n\n                Padding(\n                  padding: const EdgeInsets.symmetric(horizontal: 18.0, vertical: 10),\n                  child: Column(\n                    crossAxisAlignment: CrossAxisAlignment.start,\n                    children: [\n                      // Item Title and Date\n                      Row(\n                        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                        children: [\n                          Text(\n                            post.title == 'Other' ? '${post.status} Item' : post.title,\n                            overflow: TextOverflow.clip,\n                            softWrap: true,\n                            style: const TextStyle(fontSize: 18, fontWeight: FontWeight.bold),\n                          ),\n                          const SizedBox(width: 5),\n                          Row(\n                            children: [\n                              Text(\n                                \"${post.status} On: \",\n                                overflow: TextOverflow.clip,\n                                softWrap: true,\n                                style: const TextStyle(color: Colors.red, fontWeight: FontWeight.bold),\n                              ),\n                              Text(\n                                post.postTime,\n                                style: const TextStyle(fontWeight: FontWeight.bold),\n                              ),\n                            ],\n                          ),\n                        ],\n                      ),\n                      const SizedBox(height: 5),\n\n                      // Description\n                      Row(\n                        crossAxisAlignment: CrossAxisAlignment.start,\n                        children: [\n                          const Text(\n                            \"Description: \",\n                            style: TextStyle(fontWeight: FontWeight.bold),\n                          ),\n                          const SizedBox(width: 4),\n                          Expanded(\n                            child: Text(\n                              post.description,\n                              overflow: TextOverflow.clip,\n                              softWrap: true,\n                              style: const TextStyle(fontSize: 14),\n                            ),\n                          ),\n                        ],\n                      ),\n                      const SizedBox(height: 10),\n\n                      // Buttons for interactions\n                      StreamBuilder<QuerySnapshot>(\n                        stream: FirebaseFirestore.instance\n                            .collection('posts')\n                            .doc(post.postId)\n                            .collection('claims')\n                            .where('senderId', isEqualTo: currentUserId)\n                            .snapshots(),\n                        builder: (context, claimSnapshot) {\n                          bool userHasClaimed = false;\n                          if (claimSnapshot.hasData && claimSnapshot.data!.docs.isNotEmpty) {\n                            userHasClaimed = true;\n                          }\n\n                          return Row(\n                            mainAxisAlignment: MainAxisAlignment.spaceAround,\n                            children: [\n                              GestureDetector(\n                                onTap: () => onShare(context, post.title, post.description),\n                                child: const Row(\n                                  children: [\n                                    Icon(Icons.share_rounded),\n                                    SizedBox(width: 3),\n                                    Text('Share'),\n                                  ],\n                                ),\n                              ),\n                              if (currentUserId != post.postmakerId)\n                                ElevatedButton(\n                                  onPressed: () => onReply(context, post.postmakerId, post.userName, post.postId),\n                                  style: ElevatedButton.styleFrom(\n                                    backgroundColor: Colors.green.shade600,\n                                    shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),\n                                  ),\n                                  child: const Row(\n                                    mainAxisAlignment: MainAxisAlignment.center,\n                                    children: [\n                                      Icon(Icons.reply, color: Colors.white),\n                                      SizedBox(width: 3),\n                                      Text('Reply', style: TextStyle(color: Colors.white)),\n                                    ],\n                                  ),\n                                ),\n                              if (post.status == 'Found' && !post.isClaimed && currentUserId != post.postmakerId)\n                                ElevatedButton(\n                                  onPressed: () => onClaim(context, post.postmakerId, post.title, post.question!, post.description, post.postId),\n                                  style: ElevatedButton.styleFrom(\n                                    backgroundColor: Colors.deepOrange.shade600,\n                                    shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),\n                                  ),\n                                  child: const Row(\n                                    mainAxisAlignment: MainAxisAlignment.center,\n                                    children: [\n                                      Icon(Icons.back_hand, color: Colors.white),\n                                      SizedBox(width: 6),\n                                      Text('Claim', style: TextStyle(color: Colors.white)),\n                                    ],\n                                  ),\n                                ),\n                              if (userHasClaimed && post.status == 'Found' && currentUserId != post.postmakerId)\n                                ElevatedButton(\n                                  onPressed: () {},\n                                  style: ElevatedButton.styleFrom(\n                                    backgroundColor: Colors.blueGrey,\n                                    shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),\n                                  ),\n                                  child: const Text('Requested', style: TextStyle(color: Colors.white)),\n                                ),\n                            ],\n                          );\n                        },\n                      ),\n                    ],\n                  ),\n                ),\n              ],\n            ),\n          ),\n        ),\n      ),\n    );\n  }\n}\n"
        }
    ]
}