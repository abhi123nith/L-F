{
    "sourceFile": "lib/newCode/Frontend/components/message_bubble.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1756118364076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1756123023227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,64 +1,64 @@\n-// lib/Frontend/components/message_bubble.dart\n-import 'package:flutter/material.dart';\n-import 'package:intl/intl.dart';\n+// // lib/Frontend/components/message_bubble.dart\n+// import 'package:flutter/material.dart';\n+// import 'package:intl/intl.dart';\n \n-class MessageBubble extends StatelessWidget {\n-  final String messageText;\n-  final String mediaUrl;\n-  final String mediaType;\n-  final bool isSentByUser;\n-  final DateTime timestamp;\n-  final VoidCallback? onLongPress;\n+// class MessageBubble extends StatelessWidget {\n+//   final String messageText;\n+//   final String mediaUrl;\n+//   final String mediaType;\n+//   final bool isSentByUser;\n+//   final DateTime timestamp;\n+//   final VoidCallback? onLongPress;\n \n-  const MessageBubble({\n-    super.key,\n-    required this.messageText,\n-    required this.mediaUrl,\n-    required this.mediaType,\n-    required this.isSentByUser,\n-    required this.timestamp,\n-    this.onLongPress,\n-  });\n+//   const MessageBubble({\n+//     super.key,\n+//     required this.messageText,\n+//     required this.mediaUrl,\n+//     required this.mediaType,\n+//     required this.isSentByUser,\n+//     required this.timestamp,\n+//     this.onLongPress,\n+//   });\n \n-  @override\n-  Widget build(BuildContext context) {\n-    final formattedTime = DateFormat('hh:mm a').format(timestamp);\n-    final alignment = isSentByUser ? Alignment.centerRight : Alignment.centerLeft;\n-    final color = isSentByUser ? Colors.blue[200] : Colors.grey[300];\n+//   @override\n+//   Widget build(BuildContext context) {\n+//     final formattedTime = DateFormat('hh:mm a').format(timestamp);\n+//     final alignment = isSentByUser ? Alignment.centerRight : Alignment.centerLeft;\n+//     final color = isSentByUser ? Colors.blue[200] : Colors.grey[300];\n \n-    return GestureDetector(\n-      onLongPress: onLongPress,\n-      child: Align(\n-        alignment: alignment,\n-        child: Container(\n-          margin: const EdgeInsets.symmetric(vertical: 4, horizontal: 12),\n-          padding: const EdgeInsets.all(10),\n-          decoration: BoxDecoration(\n-            color: color,\n-            borderRadius: BorderRadius.circular(12),\n-          ),\n-          child: Column(\n-            crossAxisAlignment: CrossAxisAlignment.start,\n-            children: [\n-              if (mediaUrl.isNotEmpty && mediaType == 'image')\n-                ClipRRect(\n-                  borderRadius: BorderRadius.circular(8),\n-                  child: Image.network(mediaUrl, height: 150),\n-                ),\n-              if (messageText.isNotEmpty)\n-                Text(\n-                  messageText,\n-                  style: const TextStyle(fontSize: 16),\n-                ),\n-              const SizedBox(height: 4),\n-              Text(\n-                formattedTime,\n-                style: const TextStyle(fontSize: 10, color: Colors.black54),\n-              ),\n-            ],\n-          ),\n-        ),\n-      ),\n-    );\n-  }\n-}\n+//     return GestureDetector(\n+//       onLongPress: onLongPress,\n+//       child: Align(\n+//         alignment: alignment,\n+//         child: Container(\n+//           margin: const EdgeInsets.symmetric(vertical: 4, horizontal: 12),\n+//           padding: const EdgeInsets.all(10),\n+//           decoration: BoxDecoration(\n+//             color: color,\n+//             borderRadius: BorderRadius.circular(12),\n+//           ),\n+//           child: Column(\n+//             crossAxisAlignment: CrossAxisAlignment.start,\n+//             children: [\n+//               if (mediaUrl.isNotEmpty && mediaType == 'image')\n+//                 ClipRRect(\n+//                   borderRadius: BorderRadius.circular(8),\n+//                   child: Image.network(mediaUrl, height: 150),\n+//                 ),\n+//               if (messageText.isNotEmpty)\n+//                 Text(\n+//                   messageText,\n+//                   style: const TextStyle(fontSize: 16),\n+//                 ),\n+//               const SizedBox(height: 4),\n+//               Text(\n+//                 formattedTime,\n+//                 style: const TextStyle(fontSize: 10, color: Colors.black54),\n+//               ),\n+//             ],\n+//           ),\n+//         ),\n+//       ),\n+//     );\n+//   }\n+// }\n"
                }
            ],
            "date": 1756118364076,
            "name": "Commit-0",
            "content": "// lib/Frontend/components/message_bubble.dart\nimport 'package:flutter/material.dart';\nimport 'package:intl/intl.dart';\n\nclass MessageBubble extends StatelessWidget {\n  final String messageText;\n  final String mediaUrl;\n  final String mediaType;\n  final bool isSentByUser;\n  final DateTime timestamp;\n  final VoidCallback? onLongPress;\n\n  const MessageBubble({\n    super.key,\n    required this.messageText,\n    required this.mediaUrl,\n    required this.mediaType,\n    required this.isSentByUser,\n    required this.timestamp,\n    this.onLongPress,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    final formattedTime = DateFormat('hh:mm a').format(timestamp);\n    final alignment = isSentByUser ? Alignment.centerRight : Alignment.centerLeft;\n    final color = isSentByUser ? Colors.blue[200] : Colors.grey[300];\n\n    return GestureDetector(\n      onLongPress: onLongPress,\n      child: Align(\n        alignment: alignment,\n        child: Container(\n          margin: const EdgeInsets.symmetric(vertical: 4, horizontal: 12),\n          padding: const EdgeInsets.all(10),\n          decoration: BoxDecoration(\n            color: color,\n            borderRadius: BorderRadius.circular(12),\n          ),\n          child: Column(\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              if (mediaUrl.isNotEmpty && mediaType == 'image')\n                ClipRRect(\n                  borderRadius: BorderRadius.circular(8),\n                  child: Image.network(mediaUrl, height: 150),\n                ),\n              if (messageText.isNotEmpty)\n                Text(\n                  messageText,\n                  style: const TextStyle(fontSize: 16),\n                ),\n              const SizedBox(height: 4),\n              Text(\n                formattedTime,\n                style: const TextStyle(fontSize: 10, color: Colors.black54),\n              ),\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n}\n"
        }
    ]
}